/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

void NSValue_getValue (NSValue* THIS, void * value) {
	NSLog(@"NSValue_getValue");
	[THIS getValue:value];
}

const char * NSValue_objCType (NSValue* THIS) {
	NSLog(@"NSValue_objCType");
	return [THIS objCType];
}
NSValue * NSValue_initWithBytes_objCType (NSValue* THIS, const void * value, const char * type) {
	NSLog(@"NSValue_initWithBytes_objCType");
	return [THIS initWithBytes:value objCType:type];
}

NSValue * NSValue_valueWithBytes_objCType (NSValue* THIS, const void * value, const char * type) {
	NSLog(@"NSValue_valueWithBytes_objCType");
	return [THIS valueWithBytes:value objCType:type];
}

NSValue * NSValue_value_withObjCType (NSValue* THIS, const void * value, const char * type) {
	NSLog(@"NSValue_value_withObjCType");
	return [THIS value:value withObjCType:type];
}

NSValue * NSValue_valueWithNonretainedObject (NSValue* THIS, NSValue * anObject) {
	NSLog(@"NSValue_valueWithNonretainedObject");
	return [THIS valueWithNonretainedObject:anObject];
}

NSValue * NSValue_nonretainedObjectValue (NSValue* THIS) {
	NSLog(@"NSValue_nonretainedObjectValue");
	return [THIS nonretainedObjectValue];
}
NSValue * NSValue_valueWithPointer (NSValue* THIS, const void * pointer) {
	NSLog(@"NSValue_valueWithPointer");
	return [THIS valueWithPointer:pointer];
}

void * NSValue_pointerValue (NSValue* THIS) {
	NSLog(@"NSValue_pointerValue");
	[THIS pointerValue];
}
BOOL NSValue_isEqualToValue (NSValue* THIS, NSValue * value) {
	NSLog(@"NSValue_isEqualToValue");
	return [THIS isEqualToValue:value];
}

char NSValue_charValue (NSValue* THIS) {
	NSLog(@"NSValue_charValue");
	return [THIS charValue];
}
unsigned char NSValue_unsignedCharValue (NSValue* THIS) {
	NSLog(@"NSValue_unsignedCharValue");
	return [THIS unsignedCharValue];
}
short NSValue_shortValue (NSValue* THIS) {
	NSLog(@"NSValue_shortValue");
	return [THIS shortValue];
}
unsigned short NSValue_unsignedShortValue (NSValue* THIS) {
	NSLog(@"NSValue_unsignedShortValue");
	return [THIS unsignedShortValue];
}
int NSValue_intValue (NSValue* THIS) {
	NSLog(@"NSValue_intValue");
	return [THIS intValue];
}
unsigned int NSValue_unsignedIntValue (NSValue* THIS) {
	NSLog(@"NSValue_unsignedIntValue");
	return [THIS unsignedIntValue];
}
long NSValue_longValue (NSValue* THIS) {
	NSLog(@"NSValue_longValue");
	return [THIS longValue];
}
unsigned long NSValue_unsignedLongValue (NSValue* THIS) {
	NSLog(@"NSValue_unsignedLongValue");
	return [THIS unsignedLongValue];
}
long long NSValue_longLongValue (NSValue* THIS) {
	NSLog(@"NSValue_longLongValue");
	return [THIS longLongValue];
}
unsigned long long NSValue_unsignedLongLongValue (NSValue* THIS) {
	NSLog(@"NSValue_unsignedLongLongValue");
	return [THIS unsignedLongLongValue];
}
float NSValue_floatValue (NSValue* THIS) {
	NSLog(@"NSValue_floatValue");
	return [THIS floatValue];
}
double NSValue_doubleValue (NSValue* THIS) {
	NSLog(@"NSValue_doubleValue");
	return [THIS doubleValue];
}
BOOL NSValue_boolValue (NSValue* THIS) {
	NSLog(@"NSValue_boolValue");
	return [THIS boolValue];
}
NSString * NSValue_stringValue (NSValue* THIS) {
	NSLog(@"NSValue_stringValue");
	return [THIS stringValue];
}
NSComparisonResult NSValue_compare (NSValue* THIS, NSNumber * otherNumber) {
	NSLog(@"NSValue_compare");
	return [THIS compare:otherNumber];
}

BOOL NSValue_isEqualToNumber (NSValue* THIS, NSNumber * number) {
	NSLog(@"NSValue_isEqualToNumber");
	return [THIS isEqualToNumber:number];
}

NSString * NSValue_descriptionWithLocale (NSValue* THIS, NSDictionary * locale) {
	NSLog(@"NSValue_descriptionWithLocale");
	return [THIS descriptionWithLocale:locale];
}

NSValue * NSValue_initWithChar (NSValue* THIS, char value) {
	NSLog(@"NSValue_initWithChar");
	return [THIS initWithChar:value];
}

NSValue * NSValue_initWithUnsignedChar (NSValue* THIS, unsigned char value) {
	NSLog(@"NSValue_initWithUnsignedChar");
	return [THIS initWithUnsignedChar:value];
}

NSValue * NSValue_initWithShort (NSValue* THIS, short value) {
	NSLog(@"NSValue_initWithShort");
	return [THIS initWithShort:value];
}

NSValue * NSValue_initWithUnsignedShort (NSValue* THIS, unsigned short value) {
	NSLog(@"NSValue_initWithUnsignedShort");
	return [THIS initWithUnsignedShort:value];
}

NSValue * NSValue_initWithInt (NSValue* THIS, int value) {
	NSLog(@"NSValue_initWithInt");
	return [THIS initWithInt:value];
}

NSValue * NSValue_initWithUnsignedInt (NSValue* THIS, unsigned int value) {
	NSLog(@"NSValue_initWithUnsignedInt");
	return [THIS initWithUnsignedInt:value];
}

NSValue * NSValue_initWithLong (NSValue* THIS, long value) {
	NSLog(@"NSValue_initWithLong");
	return [THIS initWithLong:value];
}

NSValue * NSValue_initWithUnsignedLong (NSValue* THIS, unsigned long value) {
	NSLog(@"NSValue_initWithUnsignedLong");
	return [THIS initWithUnsignedLong:value];
}

NSValue * NSValue_initWithLongLong (NSValue* THIS, long long value) {
	NSLog(@"NSValue_initWithLongLong");
	return [THIS initWithLongLong:value];
}

NSValue * NSValue_initWithUnsignedLongLong (NSValue* THIS, unsigned long long value) {
	NSLog(@"NSValue_initWithUnsignedLongLong");
	return [THIS initWithUnsignedLongLong:value];
}

NSValue * NSValue_initWithFloat (NSValue* THIS, float value) {
	NSLog(@"NSValue_initWithFloat");
	return [THIS initWithFloat:value];
}

NSValue * NSValue_initWithDouble (NSValue* THIS, double value) {
	NSLog(@"NSValue_initWithDouble");
	return [THIS initWithDouble:value];
}

NSValue * NSValue_initWithBool (NSValue* THIS, BOOL value) {
	NSLog(@"NSValue_initWithBool");
	return [THIS initWithBool:value];
}

NSNumber * NSValue_numberWithChar (NSValue* THIS, char value) {
	NSLog(@"NSValue_numberWithChar");
	return [THIS numberWithChar:value];
}

NSNumber * NSValue_numberWithUnsignedChar (NSValue* THIS, unsigned char value) {
	NSLog(@"NSValue_numberWithUnsignedChar");
	return [THIS numberWithUnsignedChar:value];
}

NSNumber * NSValue_numberWithShort (NSValue* THIS, short value) {
	NSLog(@"NSValue_numberWithShort");
	return [THIS numberWithShort:value];
}

NSNumber * NSValue_numberWithUnsignedShort (NSValue* THIS, unsigned short value) {
	NSLog(@"NSValue_numberWithUnsignedShort");
	return [THIS numberWithUnsignedShort:value];
}

NSNumber * NSValue_numberWithInt (NSValue* THIS, int value) {
	NSLog(@"NSValue_numberWithInt");
	return [THIS numberWithInt:value];
}

NSNumber * NSValue_numberWithUnsignedInt (NSValue* THIS, unsigned int value) {
	NSLog(@"NSValue_numberWithUnsignedInt");
	return [THIS numberWithUnsignedInt:value];
}

NSNumber * NSValue_numberWithLong (NSValue* THIS, long value) {
	NSLog(@"NSValue_numberWithLong");
	return [THIS numberWithLong:value];
}

NSNumber * NSValue_numberWithUnsignedLong (NSValue* THIS, unsigned long value) {
	NSLog(@"NSValue_numberWithUnsignedLong");
	return [THIS numberWithUnsignedLong:value];
}

NSNumber * NSValue_numberWithLongLong (NSValue* THIS, long long value) {
	NSLog(@"NSValue_numberWithLongLong");
	return [THIS numberWithLongLong:value];
}

NSNumber * NSValue_numberWithUnsignedLongLong (NSValue* THIS, unsigned long long value) {
	NSLog(@"NSValue_numberWithUnsignedLongLong");
	return [THIS numberWithUnsignedLongLong:value];
}

NSNumber * NSValue_numberWithFloat (NSValue* THIS, float value) {
	NSLog(@"NSValue_numberWithFloat");
	return [THIS numberWithFloat:value];
}

NSNumber * NSValue_numberWithDouble (NSValue* THIS, double value) {
	NSLog(@"NSValue_numberWithDouble");
	return [THIS numberWithDouble:value];
}

NSNumber * NSValue_numberWithBool (NSValue* THIS, BOOL value) {
	NSLog(@"NSValue_numberWithBool");
	return [THIS numberWithBool:value];
}

NSValue * NSValue_alloc() {
	NSLog(@"NSValue_alloc()");
	return [NSValue alloc];
}
