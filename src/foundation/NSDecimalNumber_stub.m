/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSValue.h>

#include <Foundation/NSScanner.h>

#include <Foundation/NSDecimal.h>

#include <Foundation/NSDictionary.h>

NSRoundingMode NSDecimalNumber_roundingMode (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_roundingMode");
	return [THIS roundingMode];
}
short NSDecimalNumber_scale (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_scale");
	return [THIS scale];
}
NSDecimalNumber * NSDecimalNumber_exceptionDuringOperation_error_leftOperand_rightOperand (NSDecimalNumber* THIS, SEL operation, NSCalculationError error, NSDecimalNumber * leftOperand, NSDecimalNumber * rightOperand) {
	NSLog(@"NSDecimalNumber_exceptionDuringOperation_error_leftOperand_rightOperand");
	return [THIS exceptionDuringOperation:operation error:error leftOperand:leftOperand rightOperand:rightOperand];
}

NSDecimalNumber * NSDecimalNumber_initWithMantissa_exponent_isNegative (NSDecimalNumber* THIS, unsigned long long mantissa, short exponent, BOOL flag) {
	NSLog(@"NSDecimalNumber_initWithMantissa_exponent_isNegative");
	return [THIS initWithMantissa:mantissa exponent:exponent isNegative:flag];
}

NSDecimalNumber * NSDecimalNumber_initWithDecimal (NSDecimalNumber* THIS, NSDecimal dcm) {
	NSLog(@"NSDecimalNumber_initWithDecimal");
	return [THIS initWithDecimal:dcm];
}

NSDecimalNumber * NSDecimalNumber_initWithString (NSDecimalNumber* THIS, NSString * numberValue) {
	NSLog(@"NSDecimalNumber_initWithString");
	return [THIS initWithString:numberValue];
}

NSDecimalNumber * NSDecimalNumber_initWithString_locale (NSDecimalNumber* THIS, NSString * numberValue, NSDictionary * locale) {
	NSLog(@"NSDecimalNumber_initWithString_locale");
	return [THIS initWithString:numberValue locale:locale];
}

NSString * NSDecimalNumber_descriptionWithLocale (NSDecimalNumber* THIS, NSDictionary * locale) {
	NSLog(@"NSDecimalNumber_descriptionWithLocale");
	return [THIS descriptionWithLocale:locale];
}

NSDecimal NSDecimalNumber_decimalValue (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_decimalValue");
	return [THIS decimalValue];
}
NSDecimalNumber * NSDecimalNumber_decimalNumberWithMantissa_exponent_isNegative (NSDecimalNumber* THIS, unsigned long long mantissa, short exponent, BOOL flag) {
	NSLog(@"NSDecimalNumber_decimalNumberWithMantissa_exponent_isNegative");
	return [THIS decimalNumberWithMantissa:mantissa exponent:exponent isNegative:flag];
}

NSDecimalNumber * NSDecimalNumber_decimalNumberWithDecimal (NSDecimalNumber* THIS, NSDecimal dcm) {
	NSLog(@"NSDecimalNumber_decimalNumberWithDecimal");
	return [THIS decimalNumberWithDecimal:dcm];
}

NSDecimalNumber * NSDecimalNumber_decimalNumberWithString (NSDecimalNumber* THIS, NSString * numberValue) {
	NSLog(@"NSDecimalNumber_decimalNumberWithString");
	return [THIS decimalNumberWithString:numberValue];
}

NSDecimalNumber * NSDecimalNumber_decimalNumberWithString_locale (NSDecimalNumber* THIS, NSString * numberValue, NSDictionary * locale) {
	NSLog(@"NSDecimalNumber_decimalNumberWithString_locale");
	return [THIS decimalNumberWithString:numberValue locale:locale];
}

NSDecimalNumber * NSDecimalNumber_zero (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_zero");
	return [THIS zero];
}
NSDecimalNumber * NSDecimalNumber_one (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_one");
	return [THIS one];
}
NSDecimalNumber * NSDecimalNumber_minimumDecimalNumber (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_minimumDecimalNumber");
	return [THIS minimumDecimalNumber];
}
NSDecimalNumber * NSDecimalNumber_maximumDecimalNumber (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_maximumDecimalNumber");
	return [THIS maximumDecimalNumber];
}
NSDecimalNumber * NSDecimalNumber_notANumber (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_notANumber");
	return [THIS notANumber];
}
NSDecimalNumber * NSDecimalNumber_decimalNumberByAdding (NSDecimalNumber* THIS, NSDecimalNumber * decimalNumber) {
	NSLog(@"NSDecimalNumber_decimalNumberByAdding");
	return [THIS decimalNumberByAdding:decimalNumber];
}

/* UNSUPPORTED: 
- (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

NSDecimalNumber * NSDecimalNumber_decimalNumberBySubtracting (NSDecimalNumber* THIS, NSDecimalNumber * decimalNumber) {
	NSLog(@"NSDecimalNumber_decimalNumberBySubtracting");
	return [THIS decimalNumberBySubtracting:decimalNumber];
}

/* UNSUPPORTED: 
- (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

NSDecimalNumber * NSDecimalNumber_decimalNumberByMultiplyingBy (NSDecimalNumber* THIS, NSDecimalNumber * decimalNumber) {
	NSLog(@"NSDecimalNumber_decimalNumberByMultiplyingBy");
	return [THIS decimalNumberByMultiplyingBy:decimalNumber];
}

/* UNSUPPORTED: 
- (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

NSDecimalNumber * NSDecimalNumber_decimalNumberByDividingBy (NSDecimalNumber* THIS, NSDecimalNumber * decimalNumber) {
	NSLog(@"NSDecimalNumber_decimalNumberByDividingBy");
	return [THIS decimalNumberByDividingBy:decimalNumber];
}

/* UNSUPPORTED: 
- (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber withBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

NSDecimalNumber * NSDecimalNumber_decimalNumberByRaisingToPower (NSDecimalNumber* THIS, unsigned power) {
	NSLog(@"NSDecimalNumber_decimalNumberByRaisingToPower");
	return [THIS decimalNumberByRaisingToPower:power];
}

/* UNSUPPORTED: 
- (NSDecimalNumber *)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

NSDecimalNumber * NSDecimalNumber_decimalNumberByMultiplyingByPowerOf10 (NSDecimalNumber* THIS, short power) {
	NSLog(@"NSDecimalNumber_decimalNumberByMultiplyingByPowerOf10");
	return [THIS decimalNumberByMultiplyingByPowerOf10:power];
}

/* UNSUPPORTED: 
- (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power withBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

/* UNSUPPORTED: 
- (NSDecimalNumber *)decimalNumberByRoundingAccordingToBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

NSComparisonResult NSDecimalNumber_compare (NSDecimalNumber* THIS, NSNumber * decimalNumber) {
	NSLog(@"NSDecimalNumber_compare");
	return [THIS compare:decimalNumber];
}

/* UNSUPPORTED: 
+ (void)setDefaultBehavior:(id <NSDecimalNumberBehaviors>)behavior;
 */

/* UNSUPPORTED: 
+ (id <NSDecimalNumberBehaviors>)defaultBehavior;
 */

const char * NSDecimalNumber_objCType (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_objCType");
	return [THIS objCType];
}
double NSDecimalNumber_doubleValue (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_doubleValue");
	return [THIS doubleValue];
}
NSDecimalNumber * NSDecimalNumber_defaultDecimalNumberHandler (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_defaultDecimalNumberHandler");
	return [THIS defaultDecimalNumberHandler];
}
NSDecimalNumber * NSDecimalNumber_initWithRoundingMode_scale_raiseOnExactness_raiseOnOverflow_raiseOnUnderflow_raiseOnDivideByZero (NSDecimalNumber* THIS, NSRoundingMode roundingMode, short scale, BOOL exact, BOOL overflow, BOOL underflow, BOOL divideByZero) {
	NSLog(@"NSDecimalNumber_initWithRoundingMode_scale_raiseOnExactness_raiseOnOverflow_raiseOnUnderflow_raiseOnDivideByZero");
	return [THIS initWithRoundingMode:roundingMode scale:scale raiseOnExactness:exact raiseOnOverflow:overflow raiseOnUnderflow:underflow raiseOnDivideByZero:divideByZero];
}

NSDecimalNumber * NSDecimalNumber_decimalNumberHandlerWithRoundingMode_scale_raiseOnExactness_raiseOnOverflow_raiseOnUnderflow_raiseOnDivideByZero (NSDecimalNumber* THIS, NSRoundingMode roundingMode, short scale, BOOL exact, BOOL overflow, BOOL underflow, BOOL divideByZero) {
	NSLog(@"NSDecimalNumber_decimalNumberHandlerWithRoundingMode_scale_raiseOnExactness_raiseOnOverflow_raiseOnUnderflow_raiseOnDivideByZero");
	return [THIS decimalNumberHandlerWithRoundingMode:roundingMode scale:scale raiseOnExactness:exact raiseOnOverflow:overflow raiseOnUnderflow:underflow raiseOnDivideByZero:divideByZero];
}

NSDecimal NSDecimalNumber_decimalValue (NSDecimalNumber* THIS) {
	NSLog(@"NSDecimalNumber_decimalValue");
	return [THIS decimalValue];
}
BOOL NSDecimalNumber_scanDecimal (NSDecimalNumber* THIS, NSDecimal * dcm) {
	NSLog(@"NSDecimalNumber_scanDecimal");
	return [THIS scanDecimal:dcm];
}

NSDecimalNumber * NSDecimalNumber_alloc() {
	NSLog(@"NSDecimalNumber_alloc()");
	return [NSDecimalNumber alloc];
}
