/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

NSTimeInterval NSDate_timeIntervalSinceReferenceDate (NSDate* THIS) {
	NSLog(@"NSDate_timeIntervalSinceReferenceDate");
	return [THIS timeIntervalSinceReferenceDate];
}

NSTimeInterval NSDate_timeIntervalSinceDate (NSDate* THIS, NSDate * anotherDate) {
	NSLog(@"NSDate_timeIntervalSinceDate");
	return [THIS timeIntervalSinceDate:anotherDate];
}

NSTimeInterval NSDate_timeIntervalSinceNow (NSDate* THIS) {
	NSLog(@"NSDate_timeIntervalSinceNow");
	return [THIS timeIntervalSinceNow];
}

NSTimeInterval NSDate_timeIntervalSince1970 (NSDate* THIS) {
	NSLog(@"NSDate_timeIntervalSince1970");
	return [THIS timeIntervalSince1970];
}

NSDate * NSDate_addTimeInterval (NSDate* THIS, NSTimeInterval seconds) {
	NSLog(@"NSDate_addTimeInterval");
	return [THIS addTimeInterval:seconds];
}

NSDate * NSDate_earlierDate (NSDate* THIS, NSDate * anotherDate) {
	NSLog(@"NSDate_earlierDate");
	return [THIS earlierDate:anotherDate];
}

NSDate * NSDate_laterDate (NSDate* THIS, NSDate * anotherDate) {
	NSLog(@"NSDate_laterDate");
	return [THIS laterDate:anotherDate];
}

NSComparisonResult NSDate_compare (NSDate* THIS, NSDate * other) {
	NSLog(@"NSDate_compare");
	return [THIS compare:other];
}

NSString * NSDate_description (NSDate* THIS) {
	NSLog(@"NSDate_description");
	return [THIS description];
}

BOOL NSDate_isEqualToDate (NSDate* THIS, NSDate * otherDate) {
	NSLog(@"NSDate_isEqualToDate");
	return [THIS isEqualToDate:otherDate];
}

NSTimeInterval NSDate$_timeIntervalSinceReferenceDate () {
	NSLog(@"NSDate$_timeIntervalSinceReferenceDate");
	return [NSDate timeIntervalSinceReferenceDate];
}

NSDate * NSDate$_date () {
	NSLog(@"NSDate$_date");
	return [NSDate date];
}

NSDate * NSDate$_dateWithTimeIntervalSinceNow (NSTimeInterval secs) {
	NSLog(@"NSDate$_dateWithTimeIntervalSinceNow");
	return [NSDate dateWithTimeIntervalSinceNow:secs];
}

NSDate * NSDate$_dateWithTimeIntervalSinceReferenceDate (NSTimeInterval secs) {
	NSLog(@"NSDate$_dateWithTimeIntervalSinceReferenceDate");
	return [NSDate dateWithTimeIntervalSinceReferenceDate:secs];
}

NSDate * NSDate$_dateWithTimeIntervalSince1970 (NSTimeInterval secs) {
	NSLog(@"NSDate$_dateWithTimeIntervalSince1970");
	return [NSDate dateWithTimeIntervalSince1970:secs];
}

NSDate * NSDate$_distantFuture () {
	NSLog(@"NSDate$_distantFuture");
	return [NSDate distantFuture];
}

NSDate * NSDate$_distantPast () {
	NSLog(@"NSDate$_distantPast");
	return [NSDate distantPast];
}

NSDate * NSDate_init (NSDate* THIS) {
	NSLog(@"NSDate_init");
	return [THIS init];
}

NSDate * NSDate_initWithTimeIntervalSinceReferenceDate (NSDate* THIS, NSTimeInterval secsToBeAdded) {
	NSLog(@"NSDate_initWithTimeIntervalSinceReferenceDate");
	return [THIS initWithTimeIntervalSinceReferenceDate:secsToBeAdded];
}

NSDate * NSDate_initWithTimeInterval_sinceDate (NSDate* THIS, NSTimeInterval secsToBeAdded, NSDate * anotherDate) {
	NSLog(@"NSDate_initWithTimeInterval_sinceDate");
	return [THIS initWithTimeInterval:secsToBeAdded sinceDate:anotherDate];
}

NSDate * NSDate_initWithTimeIntervalSinceNow (NSDate* THIS, NSTimeInterval secsToBeAddedToNow) {
	NSLog(@"NSDate_initWithTimeIntervalSinceNow");
	return [THIS initWithTimeIntervalSinceNow:secsToBeAddedToNow];
}

NSDate * NSDate_alloc(){
	NSLog(@"NSDate_alloc()");
	return [ NSDate alloc ];
}