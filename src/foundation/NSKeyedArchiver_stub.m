/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSCoder.h>

#include <Foundation/NSGeometry.h>

#include <Foundation/NSPropertyList.h>

NSData * NSKeyedArchiver_archivedDataWithRootObject (NSKeyedArchiver* THIS, NSKeyedArchiver * rootObject) {
	NSLog(@"NSKeyedArchiver_archivedDataWithRootObject");
	return [THIS archivedDataWithRootObject:rootObject];
}

BOOL NSKeyedArchiver_archiveRootObject_toFile (NSKeyedArchiver* THIS, NSKeyedArchiver * rootObject, NSString * path) {
	NSLog(@"NSKeyedArchiver_archiveRootObject_toFile");
	return [THIS archiveRootObject:rootObject toFile:path];
}

NSKeyedArchiver * NSKeyedArchiver_initForWritingWithMutableData (NSKeyedArchiver* THIS, NSMutableData * data) {
	NSLog(@"NSKeyedArchiver_initForWritingWithMutableData");
	return [THIS initForWritingWithMutableData:data];
}

void NSKeyedArchiver_setDelegate (NSKeyedArchiver* THIS, NSKeyedArchiver * delegate) {
	NSLog(@"NSKeyedArchiver_setDelegate");
	[THIS setDelegate:delegate];
}

NSKeyedArchiver * NSKeyedArchiver_delegate (NSKeyedArchiver* THIS) {
	NSLog(@"NSKeyedArchiver_delegate");
	return [THIS delegate];
}
void NSKeyedArchiver_setOutputFormat (NSKeyedArchiver* THIS, NSPropertyListFormat format) {
	NSLog(@"NSKeyedArchiver_setOutputFormat");
	[THIS setOutputFormat:format];
}

NSPropertyListFormat NSKeyedArchiver_outputFormat (NSKeyedArchiver* THIS) {
	NSLog(@"NSKeyedArchiver_outputFormat");
	return [THIS outputFormat];
}
void NSKeyedArchiver_finishEncoding (NSKeyedArchiver* THIS) {
	NSLog(@"NSKeyedArchiver_finishEncoding");
	[THIS finishEncoding];
}
void NSKeyedArchiver_setClassName_forClass (NSKeyedArchiver* THIS, NSString * codedName, Class cls) {
	NSLog(@"NSKeyedArchiver_setClassName_forClass");
	[THIS setClassName:codedName forClass:cls];
}

void NSKeyedArchiver_setClassName_forClass (NSKeyedArchiver* THIS, NSString * codedName, Class cls) {
	NSLog(@"NSKeyedArchiver_setClassName_forClass");
	[THIS setClassName:codedName forClass:cls];
}

NSString * NSKeyedArchiver_classNameForClass (NSKeyedArchiver* THIS, Class cls) {
	NSLog(@"NSKeyedArchiver_classNameForClass");
	return [THIS classNameForClass:cls];
}

NSString * NSKeyedArchiver_classNameForClass (NSKeyedArchiver* THIS, Class cls) {
	NSLog(@"NSKeyedArchiver_classNameForClass");
	return [THIS classNameForClass:cls];
}

void NSKeyedArchiver_encodeObject_forKey (NSKeyedArchiver* THIS, NSKeyedArchiver * objv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeObject_forKey");
	[THIS encodeObject:objv forKey:key];
}

void NSKeyedArchiver_encodeConditionalObject_forKey (NSKeyedArchiver* THIS, NSKeyedArchiver * objv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeConditionalObject_forKey");
	[THIS encodeConditionalObject:objv forKey:key];
}

void NSKeyedArchiver_encodeBool_forKey (NSKeyedArchiver* THIS, BOOL boolv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeBool_forKey");
	[THIS encodeBool:boolv forKey:key];
}

void NSKeyedArchiver_encodeInt_forKey (NSKeyedArchiver* THIS, int intv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeInt_forKey");
	[THIS encodeInt:intv forKey:key];
}

void NSKeyedArchiver_encodeInt32_forKey (NSKeyedArchiver* THIS, int32_t intv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeInt32_forKey");
	[THIS encodeInt32:intv forKey:key];
}

void NSKeyedArchiver_encodeInt64_forKey (NSKeyedArchiver* THIS, int64_t intv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeInt64_forKey");
	[THIS encodeInt64:intv forKey:key];
}

void NSKeyedArchiver_encodeFloat_forKey (NSKeyedArchiver* THIS, float realv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeFloat_forKey");
	[THIS encodeFloat:realv forKey:key];
}

void NSKeyedArchiver_encodeDouble_forKey (NSKeyedArchiver* THIS, double realv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeDouble_forKey");
	[THIS encodeDouble:realv forKey:key];
}

void NSKeyedArchiver_encodeBytes_length_forKey (NSKeyedArchiver* THIS, const uint8_t * bytesp, unsigned lenv, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeBytes_length_forKey");
	[THIS encodeBytes:bytesp length:lenv forKey:key];
}

NSKeyedArchiver * NSKeyedArchiver_unarchiveObjectWithData (NSKeyedArchiver* THIS, NSData * data) {
	NSLog(@"NSKeyedArchiver_unarchiveObjectWithData");
	return [THIS unarchiveObjectWithData:data];
}

NSKeyedArchiver * NSKeyedArchiver_unarchiveObjectWithFile (NSKeyedArchiver* THIS, NSString * path) {
	NSLog(@"NSKeyedArchiver_unarchiveObjectWithFile");
	return [THIS unarchiveObjectWithFile:path];
}

NSKeyedArchiver * NSKeyedArchiver_initForReadingWithData (NSKeyedArchiver* THIS, NSData * data) {
	NSLog(@"NSKeyedArchiver_initForReadingWithData");
	return [THIS initForReadingWithData:data];
}

void NSKeyedArchiver_setDelegate (NSKeyedArchiver* THIS, NSKeyedArchiver * delegate) {
	NSLog(@"NSKeyedArchiver_setDelegate");
	[THIS setDelegate:delegate];
}

NSKeyedArchiver * NSKeyedArchiver_delegate (NSKeyedArchiver* THIS) {
	NSLog(@"NSKeyedArchiver_delegate");
	return [THIS delegate];
}
void NSKeyedArchiver_finishDecoding (NSKeyedArchiver* THIS) {
	NSLog(@"NSKeyedArchiver_finishDecoding");
	[THIS finishDecoding];
}
void NSKeyedArchiver_setClass_forClassName (NSKeyedArchiver* THIS, Class cls, NSString * codedName) {
	NSLog(@"NSKeyedArchiver_setClass_forClassName");
	[THIS setClass:cls forClassName:codedName];
}

void NSKeyedArchiver_setClass_forClassName (NSKeyedArchiver* THIS, Class cls, NSString * codedName) {
	NSLog(@"NSKeyedArchiver_setClass_forClassName");
	[THIS setClass:cls forClassName:codedName];
}

Class NSKeyedArchiver_classForClassName (NSKeyedArchiver* THIS, NSString * codedName) {
	NSLog(@"NSKeyedArchiver_classForClassName");
	return [THIS classForClassName:codedName];
}

Class NSKeyedArchiver_classForClassName (NSKeyedArchiver* THIS, NSString * codedName) {
	NSLog(@"NSKeyedArchiver_classForClassName");
	return [THIS classForClassName:codedName];
}

BOOL NSKeyedArchiver_containsValueForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_containsValueForKey");
	return [THIS containsValueForKey:key];
}

NSKeyedArchiver * NSKeyedArchiver_decodeObjectForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeObjectForKey");
	return [THIS decodeObjectForKey:key];
}

BOOL NSKeyedArchiver_decodeBoolForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeBoolForKey");
	return [THIS decodeBoolForKey:key];
}

int NSKeyedArchiver_decodeIntForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeIntForKey");
	return [THIS decodeIntForKey:key];
}

int32_t NSKeyedArchiver_decodeInt32ForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeInt32ForKey");
	return [THIS decodeInt32ForKey:key];
}

int64_t NSKeyedArchiver_decodeInt64ForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeInt64ForKey");
	return [THIS decodeInt64ForKey:key];
}

float NSKeyedArchiver_decodeFloatForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeFloatForKey");
	return [THIS decodeFloatForKey:key];
}

double NSKeyedArchiver_decodeDoubleForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeDoubleForKey");
	return [THIS decodeDoubleForKey:key];
}

const uint8_t * NSKeyedArchiver_decodeBytesForKey_returnedLength (NSKeyedArchiver* THIS, NSString * key, unsigned * lengthp) {
	NSLog(@"NSKeyedArchiver_decodeBytesForKey_returnedLength");
	return [THIS decodeBytesForKey:key returnedLength:lengthp];
}

void NSKeyedArchiver_encodePoint_forKey (NSKeyedArchiver* THIS, NSPoint point, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodePoint_forKey");
	[THIS encodePoint:point forKey:key];
}

void NSKeyedArchiver_encodeSize_forKey (NSKeyedArchiver* THIS, NSSize size, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeSize_forKey");
	[THIS encodeSize:size forKey:key];
}

void NSKeyedArchiver_encodeRect_forKey (NSKeyedArchiver* THIS, NSRect rect, NSString * key) {
	NSLog(@"NSKeyedArchiver_encodeRect_forKey");
	[THIS encodeRect:rect forKey:key];
}

NSPoint NSKeyedArchiver_decodePointForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodePointForKey");
	return [THIS decodePointForKey:key];
}

NSSize NSKeyedArchiver_decodeSizeForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeSizeForKey");
	return [THIS decodeSizeForKey:key];
}

NSRect NSKeyedArchiver_decodeRectForKey (NSKeyedArchiver* THIS, NSString * key) {
	NSLog(@"NSKeyedArchiver_decodeRectForKey");
	return [THIS decodeRectForKey:key];
}

NSKeyedArchiver * NSKeyedArchiver_archiver_willEncodeObject (NSKeyedArchiver* THIS, NSKeyedArchiver * archiver, NSKeyedArchiver * object) {
	NSLog(@"NSKeyedArchiver_archiver_willEncodeObject");
	return [THIS archiver:archiver willEncodeObject:object];
}

void NSKeyedArchiver_archiver_didEncodeObject (NSKeyedArchiver* THIS, NSKeyedArchiver * archiver, NSKeyedArchiver * object) {
	NSLog(@"NSKeyedArchiver_archiver_didEncodeObject");
	[THIS archiver:archiver didEncodeObject:object];
}

void NSKeyedArchiver_archiver_willReplaceObject_withObject (NSKeyedArchiver* THIS, NSKeyedArchiver * archiver, NSKeyedArchiver * object, NSKeyedArchiver * newObject) {
	NSLog(@"NSKeyedArchiver_archiver_willReplaceObject_withObject");
	[THIS archiver:archiver willReplaceObject:object withObject:newObject];
}

void NSKeyedArchiver_archiverWillFinish (NSKeyedArchiver* THIS, NSKeyedArchiver * archiver) {
	NSLog(@"NSKeyedArchiver_archiverWillFinish");
	[THIS archiverWillFinish:archiver];
}

void NSKeyedArchiver_archiverDidFinish (NSKeyedArchiver* THIS, NSKeyedArchiver * archiver) {
	NSLog(@"NSKeyedArchiver_archiverDidFinish");
	[THIS archiverDidFinish:archiver];
}

Class NSKeyedArchiver_unarchiver_cannotDecodeObjectOfClassName_originalClasses (NSKeyedArchiver* THIS, NSKeyedUnarchiver * unarchiver, NSString * name, NSArray * classNames) {
	NSLog(@"NSKeyedArchiver_unarchiver_cannotDecodeObjectOfClassName_originalClasses");
	return [THIS unarchiver:unarchiver cannotDecodeObjectOfClassName:name originalClasses:classNames];
}

NSKeyedArchiver * NSKeyedArchiver_unarchiver_didDecodeObject (NSKeyedArchiver* THIS, NSKeyedUnarchiver * unarchiver, NSKeyedArchiver * object) {
	NSLog(@"NSKeyedArchiver_unarchiver_didDecodeObject");
	return [THIS unarchiver:unarchiver didDecodeObject:object];
}

void NSKeyedArchiver_unarchiver_willReplaceObject_withObject (NSKeyedArchiver* THIS, NSKeyedUnarchiver * unarchiver, NSKeyedArchiver * object, NSKeyedArchiver * newObject) {
	NSLog(@"NSKeyedArchiver_unarchiver_willReplaceObject_withObject");
	[THIS unarchiver:unarchiver willReplaceObject:object withObject:newObject];
}

void NSKeyedArchiver_unarchiverWillFinish (NSKeyedArchiver* THIS, NSKeyedUnarchiver * unarchiver) {
	NSLog(@"NSKeyedArchiver_unarchiverWillFinish");
	[THIS unarchiverWillFinish:unarchiver];
}

void NSKeyedArchiver_unarchiverDidFinish (NSKeyedArchiver* THIS, NSKeyedUnarchiver * unarchiver) {
	NSLog(@"NSKeyedArchiver_unarchiverDidFinish");
	[THIS unarchiverDidFinish:unarchiver];
}

Class NSKeyedArchiver_classForKeyedArchiver (NSKeyedArchiver* THIS) {
	NSLog(@"NSKeyedArchiver_classForKeyedArchiver");
	return [THIS classForKeyedArchiver];
}
NSKeyedArchiver * NSKeyedArchiver_replacementObjectForKeyedArchiver (NSKeyedArchiver* THIS, NSKeyedArchiver * archiver) {
	NSLog(@"NSKeyedArchiver_replacementObjectForKeyedArchiver");
	return [THIS replacementObjectForKeyedArchiver:archiver];
}

Class NSKeyedArchiver_classForKeyedUnarchiver (NSKeyedArchiver* THIS) {
	NSLog(@"NSKeyedArchiver_classForKeyedUnarchiver");
	return [THIS classForKeyedUnarchiver];
}
NSKeyedArchiver * NSKeyedArchiver_alloc() {
	NSLog(@"NSKeyedArchiver_alloc()");
	return [NSKeyedArchiver alloc];
}
