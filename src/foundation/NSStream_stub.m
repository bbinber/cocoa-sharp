/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

void NSStream_open (NSStream* THIS) {
	NSLog(@"NSStream_open");
	[THIS open];
}

void NSStream_close (NSStream* THIS) {
	NSLog(@"NSStream_close");
	[THIS close];
}

NSStream * NSStream_delegate (NSStream* THIS) {
	NSLog(@"NSStream_delegate");
	return [THIS delegate];
}

void NSStream_setDelegate (NSStream* THIS, id delegate) {
	NSLog(@"NSStream_setDelegate");
	[THIS setDelegate:delegate];
}

NSStream * NSStream_propertyForKey (NSStream* THIS, NSString * key) {
	NSLog(@"NSStream_propertyForKey");
	return [THIS propertyForKey:key];
}

BOOL NSStream_setProperty_forKey (NSStream* THIS, id property, NSString * key) {
	NSLog(@"NSStream_setProperty_forKey");
	return [THIS setProperty:property forKey:key];
}

void NSStream_scheduleInRunLoop_forMode (NSStream* THIS, NSRunLoop * aRunLoop, NSString * mode) {
	NSLog(@"NSStream_scheduleInRunLoop_forMode");
	[THIS scheduleInRunLoop:aRunLoop forMode:mode];
}

void NSStream_removeFromRunLoop_forMode (NSStream* THIS, NSRunLoop * aRunLoop, NSString * mode) {
	NSLog(@"NSStream_removeFromRunLoop_forMode");
	[THIS removeFromRunLoop:aRunLoop forMode:mode];
}

NSStreamStatus NSStream_streamStatus (NSStream* THIS) {
	NSLog(@"NSStream_streamStatus");
	return [THIS streamStatus];
}

NSError * NSStream_streamError (NSStream* THIS) {
	NSLog(@"NSStream_streamError");
	return [THIS streamError];
}

int NSStream_read_maxLength (NSStream* THIS, uint8_t * buffer, unsigned int len) {
	NSLog(@"NSStream_read_maxLength");
	return [THIS read:buffer maxLength:len];
}

BOOL NSStream_getBuffer_length (NSStream* THIS, uint8_t ** buffer, unsigned int * len) {
	NSLog(@"NSStream_getBuffer_length");
	return [THIS getBuffer:buffer length:len];
}

BOOL NSStream_hasBytesAvailable (NSStream* THIS) {
	NSLog(@"NSStream_hasBytesAvailable");
	return [THIS hasBytesAvailable];
}

int NSStream_write_maxLength (NSStream* THIS, const uint8_t * buffer, unsigned int len) {
	NSLog(@"NSStream_write_maxLength");
	return [THIS write:buffer maxLength:len];
}

BOOL NSStream_hasSpaceAvailable (NSStream* THIS) {
	NSLog(@"NSStream_hasSpaceAvailable");
	return [THIS hasSpaceAvailable];
}

void NSStream$_getStreamsToHost_port_inputStream_outputStream (NSHost * host, int port, NSInputStream ** inputStream, NSOutputStream ** outputStream) {
	NSLog(@"NSStream$_getStreamsToHost_port_inputStream_outputStream");
	[NSStream getStreamsToHost:host port:port inputStream:inputStream outputStream:outputStream];
}

NSStream * NSStream_initWithData (NSStream* THIS, NSData * data) {
	NSLog(@"NSStream_initWithData");
	return [THIS initWithData:data];
}

NSStream * NSStream_initWithFileAtPath (NSStream* THIS, NSString * path) {
	NSLog(@"NSStream_initWithFileAtPath");
	return [THIS initWithFileAtPath:path];
}

NSStream * NSStream$_inputStreamWithData (NSData * data) {
	NSLog(@"NSStream$_inputStreamWithData");
	return [NSStream inputStreamWithData:data];
}

NSStream * NSStream$_inputStreamWithFileAtPath (NSString * path) {
	NSLog(@"NSStream$_inputStreamWithFileAtPath");
	return [NSStream inputStreamWithFileAtPath:path];
}

NSStream * NSStream_initToMemory (NSStream* THIS) {
	NSLog(@"NSStream_initToMemory");
	return [THIS initToMemory];
}

NSStream * NSStream_initToBuffer_capacity (NSStream* THIS, uint8_t * buffer, unsigned int capacity) {
	NSLog(@"NSStream_initToBuffer_capacity");
	return [THIS initToBuffer:buffer capacity:capacity];
}

NSStream * NSStream_initToFileAtPath_append (NSStream* THIS, NSString * path, BOOL shouldAppend) {
	NSLog(@"NSStream_initToFileAtPath_append");
	return [THIS initToFileAtPath:path append:shouldAppend];
}

NSStream * NSStream$_outputStreamToMemory () {
	NSLog(@"NSStream$_outputStreamToMemory");
	return [NSStream outputStreamToMemory];
}

NSStream * NSStream$_outputStreamToBuffer_capacity (uint8_t * buffer, unsigned int capacity) {
	NSLog(@"NSStream$_outputStreamToBuffer_capacity");
	return [NSStream outputStreamToBuffer:buffer capacity:capacity];
}

NSStream * NSStream$_outputStreamToFileAtPath_append (NSString * path, BOOL shouldAppend) {
	NSLog(@"NSStream$_outputStreamToFileAtPath_append");
	return [NSStream outputStreamToFileAtPath:path append:shouldAppend];
}

void NSStream_stream_handleEvent (NSStream* THIS, NSStream * aStream, NSStreamEvent eventCode) {
	NSLog(@"NSStream_stream_handleEvent");
	[THIS stream:aStream handleEvent:eventCode];
}

NSStream * NSStream_alloc(){
	NSLog(@"NSStream_alloc()");
	return [ NSStream alloc ];
}