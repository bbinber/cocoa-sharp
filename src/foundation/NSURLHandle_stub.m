/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

void NSURLHandle_URLHandle_resourceDataDidBecomeAvailable (NSURLHandle* THIS, NSURLHandle * sender, NSData * newBytes) {
	NSLog(@"NSURLHandle_URLHandle_resourceDataDidBecomeAvailable");
	[THIS URLHandle:sender resourceDataDidBecomeAvailable:newBytes];
}

void NSURLHandle_URLHandleResourceDidBeginLoading (NSURLHandle* THIS, NSURLHandle * sender) {
	NSLog(@"NSURLHandle_URLHandleResourceDidBeginLoading");
	[THIS URLHandleResourceDidBeginLoading:sender];
}

void NSURLHandle_URLHandleResourceDidFinishLoading (NSURLHandle* THIS, NSURLHandle * sender) {
	NSLog(@"NSURLHandle_URLHandleResourceDidFinishLoading");
	[THIS URLHandleResourceDidFinishLoading:sender];
}

void NSURLHandle_URLHandleResourceDidCancelLoading (NSURLHandle* THIS, NSURLHandle * sender) {
	NSLog(@"NSURLHandle_URLHandleResourceDidCancelLoading");
	[THIS URLHandleResourceDidCancelLoading:sender];
}

void NSURLHandle_URLHandle_resourceDidFailLoadingWithReason (NSURLHandle* THIS, NSURLHandle * sender, NSString * reason) {
	NSLog(@"NSURLHandle_URLHandle_resourceDidFailLoadingWithReason");
	[THIS URLHandle:sender resourceDidFailLoadingWithReason:reason];
}

void NSURLHandle$_registerURLHandleClass (Class anURLHandleSubclass) {
	NSLog(@"NSURLHandle$_registerURLHandleClass");
	[NSURLHandle registerURLHandleClass:anURLHandleSubclass];
}

Class NSURLHandle$_URLHandleClassForURL (NSURL * anURL) {
	NSLog(@"NSURLHandle$_URLHandleClassForURL");
	return [NSURLHandle URLHandleClassForURL:anURL];
}

NSURLHandleStatus NSURLHandle_status (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_status");
	return [THIS status];
}

NSString * NSURLHandle_failureReason (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_failureReason");
	return [THIS failureReason];
}

/* UNSUPPORTED: 
- (void)addClient:(id <NSURLHandleClient>)client;
 */



/* UNSUPPORTED: 
- (void)removeClient:(id <NSURLHandleClient>)client;
 */



void NSURLHandle_loadInBackground (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_loadInBackground");
	[THIS loadInBackground];
}

void NSURLHandle_cancelLoadInBackground (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_cancelLoadInBackground");
	[THIS cancelLoadInBackground];
}

NSData * NSURLHandle_resourceData (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_resourceData");
	return [THIS resourceData];
}

NSData * NSURLHandle_availableResourceData (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_availableResourceData");
	return [THIS availableResourceData];
}

long long NSURLHandle_expectedResourceDataSize (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_expectedResourceDataSize");
	return [THIS expectedResourceDataSize];
}

void NSURLHandle_flushCachedData (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_flushCachedData");
	[THIS flushCachedData];
}

void NSURLHandle_backgroundLoadDidFailWithReason (NSURLHandle* THIS, NSString * reason) {
	NSLog(@"NSURLHandle_backgroundLoadDidFailWithReason");
	[THIS backgroundLoadDidFailWithReason:reason];
}

void NSURLHandle_didLoadBytes_loadComplete (NSURLHandle* THIS, NSData * newBytes, BOOL yorn) {
	NSLog(@"NSURLHandle_didLoadBytes_loadComplete");
	[THIS didLoadBytes:newBytes loadComplete:yorn];
}

BOOL NSURLHandle$_canInitWithURL (NSURL * anURL) {
	NSLog(@"NSURLHandle$_canInitWithURL");
	return [NSURLHandle canInitWithURL:anURL];
}

NSURLHandle * NSURLHandle$_cachedHandleForURL (NSURL * anURL) {
	NSLog(@"NSURLHandle$_cachedHandleForURL");
	return [NSURLHandle cachedHandleForURL:anURL];
}

/* UNSUPPORTED - no return type: 
- initWithURL:(NSURL *)anURL cached:(BOOL)willCache;
 */



NSURLHandle * NSURLHandle_propertyForKey (NSURLHandle* THIS, NSString * propertyKey) {
	NSLog(@"NSURLHandle_propertyForKey");
	return [THIS propertyForKey:propertyKey];
}

NSURLHandle * NSURLHandle_propertyForKeyIfAvailable (NSURLHandle* THIS, NSString * propertyKey) {
	NSLog(@"NSURLHandle_propertyForKeyIfAvailable");
	return [THIS propertyForKeyIfAvailable:propertyKey];
}

BOOL NSURLHandle_writeProperty_forKey (NSURLHandle* THIS, id propertyValue, NSString * propertyKey) {
	NSLog(@"NSURLHandle_writeProperty_forKey");
	return [THIS writeProperty:propertyValue forKey:propertyKey];
}

BOOL NSURLHandle_writeData (NSURLHandle* THIS, NSData * data) {
	NSLog(@"NSURLHandle_writeData");
	return [THIS writeData:data];
}

NSData * NSURLHandle_loadInForeground (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_loadInForeground");
	return [THIS loadInForeground];
}

void NSURLHandle_beginLoadInBackground (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_beginLoadInBackground");
	[THIS beginLoadInBackground];
}

void NSURLHandle_endLoadInBackground (NSURLHandle* THIS) {
	NSLog(@"NSURLHandle_endLoadInBackground");
	[THIS endLoadInBackground];
}

NSURLHandle * NSURLHandle_alloc(){
	NSLog(@"NSURLHandle_alloc()");
	return [ NSURLHandle alloc ];
}