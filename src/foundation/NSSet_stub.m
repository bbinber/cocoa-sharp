/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

unsigned NSSet_count (NSSet* THIS) {
	NSLog(@"NSSet_count");
	return [THIS count];
}
NSSet * NSSet_member (NSSet* THIS, NSSet * object) {
	NSLog(@"NSSet_member");
	return [THIS member:object];
}

NSEnumerator * NSSet_objectEnumerator (NSSet* THIS) {
	NSLog(@"NSSet_objectEnumerator");
	return [THIS objectEnumerator];
}
NSArray * NSSet_allObjects (NSSet* THIS) {
	NSLog(@"NSSet_allObjects");
	return [THIS allObjects];
}
NSSet * NSSet_anyObject (NSSet* THIS) {
	NSLog(@"NSSet_anyObject");
	return [THIS anyObject];
}
BOOL NSSet_containsObject (NSSet* THIS, NSSet * anObject) {
	NSLog(@"NSSet_containsObject");
	return [THIS containsObject:anObject];
}

NSString * NSSet_description (NSSet* THIS) {
	NSLog(@"NSSet_description");
	return [THIS description];
}
NSString * NSSet_descriptionWithLocale (NSSet* THIS, NSDictionary * locale) {
	NSLog(@"NSSet_descriptionWithLocale");
	return [THIS descriptionWithLocale:locale];
}

BOOL NSSet_intersectsSet (NSSet* THIS, NSSet * otherSet) {
	NSLog(@"NSSet_intersectsSet");
	return [THIS intersectsSet:otherSet];
}

BOOL NSSet_isEqualToSet (NSSet* THIS, NSSet * otherSet) {
	NSLog(@"NSSet_isEqualToSet");
	return [THIS isEqualToSet:otherSet];
}

BOOL NSSet_isSubsetOfSet (NSSet* THIS, NSSet * otherSet) {
	NSLog(@"NSSet_isSubsetOfSet");
	return [THIS isSubsetOfSet:otherSet];
}

void NSSet_makeObjectsPerformSelector (NSSet* THIS, SEL aSelector) {
	NSLog(@"NSSet_makeObjectsPerformSelector");
	[THIS makeObjectsPerformSelector:aSelector];
}

void NSSet_makeObjectsPerformSelector_withObject (NSSet* THIS, SEL aSelector, NSSet * argument) {
	NSLog(@"NSSet_makeObjectsPerformSelector_withObject");
	[THIS makeObjectsPerformSelector:aSelector withObject:argument];
}

NSSet * NSSet_set (NSSet* THIS) {
	NSLog(@"NSSet_set");
	return [THIS set];
}
NSSet * NSSet_setWithArray (NSSet* THIS, NSArray * array) {
	NSLog(@"NSSet_setWithArray");
	return [THIS setWithArray:array];
}

NSSet * NSSet_setWithObject (NSSet* THIS, NSSet * object) {
	NSLog(@"NSSet_setWithObject");
	return [THIS setWithObject:object];
}

/* UNSUPPORTED: 
+ (id)setWithObjects:(id)firstObj, ...;
 */

NSSet * NSSet_initWithArray (NSSet* THIS, NSArray * array) {
	NSLog(@"NSSet_initWithArray");
	return [THIS initWithArray:array];
}

NSSet * NSSet_initWithObjects_count (NSSet* THIS, NSSet * * objects, unsigned count) {
	NSLog(@"NSSet_initWithObjects_count");
	return [THIS initWithObjects:objects count:count];
}

/* UNSUPPORTED: 
- (id)initWithObjects:(id)firstObj, ...;
 */

NSSet * NSSet_initWithSet (NSSet* THIS, NSSet * set) {
	NSLog(@"NSSet_initWithSet");
	return [THIS initWithSet:set];
}

NSSet * NSSet_initWithSet_copyItems (NSSet* THIS, NSSet * set, BOOL flag) {
	NSLog(@"NSSet_initWithSet_copyItems");
	return [THIS initWithSet:set copyItems:flag];
}

NSSet * NSSet_setWithSet (NSSet* THIS, NSSet * set) {
	NSLog(@"NSSet_setWithSet");
	return [THIS setWithSet:set];
}

NSSet * NSSet_setWithObjects_count (NSSet* THIS, NSSet * * objs, unsigned cnt) {
	NSLog(@"NSSet_setWithObjects_count");
	return [THIS setWithObjects:objs count:cnt];
}

void NSSet_addObject (NSSet* THIS, NSSet * object) {
	NSLog(@"NSSet_addObject");
	[THIS addObject:object];
}

void NSSet_removeObject (NSSet* THIS, NSSet * object) {
	NSLog(@"NSSet_removeObject");
	[THIS removeObject:object];
}

void NSSet_addObjectsFromArray (NSSet* THIS, NSArray * array) {
	NSLog(@"NSSet_addObjectsFromArray");
	[THIS addObjectsFromArray:array];
}

void NSSet_intersectSet (NSSet* THIS, NSSet * otherSet) {
	NSLog(@"NSSet_intersectSet");
	[THIS intersectSet:otherSet];
}

void NSSet_minusSet (NSSet* THIS, NSSet * otherSet) {
	NSLog(@"NSSet_minusSet");
	[THIS minusSet:otherSet];
}

void NSSet_removeAllObjects (NSSet* THIS) {
	NSLog(@"NSSet_removeAllObjects");
	[THIS removeAllObjects];
}
void NSSet_unionSet (NSSet* THIS, NSSet * otherSet) {
	NSLog(@"NSSet_unionSet");
	[THIS unionSet:otherSet];
}

void NSSet_setSet (NSSet* THIS, NSSet * otherSet) {
	NSLog(@"NSSet_setSet");
	[THIS setSet:otherSet];
}

NSSet * NSSet_setWithCapacity (NSSet* THIS, unsigned numItems) {
	NSLog(@"NSSet_setWithCapacity");
	return [THIS setWithCapacity:numItems];
}

NSSet * NSSet_initWithCapacity (NSSet* THIS, unsigned numItems) {
	NSLog(@"NSSet_initWithCapacity");
	return [THIS initWithCapacity:numItems];
}

NSSet * NSSet_initWithCapacity (NSSet* THIS, unsigned numItems) {
	NSLog(@"NSSet_initWithCapacity");
	return [THIS initWithCapacity:numItems];
}

NSSet * NSSet_initWithArray (NSSet* THIS, NSArray * array) {
	NSLog(@"NSSet_initWithArray");
	return [THIS initWithArray:array];
}

NSSet * NSSet_initWithSet (NSSet* THIS, NSSet * set) {
	NSLog(@"NSSet_initWithSet");
	return [THIS initWithSet:set];
}

unsigned NSSet_countForObject (NSSet* THIS, NSSet * object) {
	NSLog(@"NSSet_countForObject");
	return [THIS countForObject:object];
}

NSEnumerator * NSSet_objectEnumerator (NSSet* THIS) {
	NSLog(@"NSSet_objectEnumerator");
	return [THIS objectEnumerator];
}
void NSSet_addObject (NSSet* THIS, NSSet * object) {
	NSLog(@"NSSet_addObject");
	[THIS addObject:object];
}

void NSSet_removeObject (NSSet* THIS, NSSet * object) {
	NSLog(@"NSSet_removeObject");
	[THIS removeObject:object];
}

NSSet * NSSet_alloc() {
	NSLog(@"NSSet_alloc()");
	return [NSSet alloc];
}
