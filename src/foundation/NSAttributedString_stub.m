/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSString.h>

#include <Foundation/NSDictionary.h>

NSString * NSAttributedString_string (NSAttributedString* THIS) {
	NSLog(@"NSAttributedString_string");
	return [THIS string];
}
NSDictionary * NSAttributedString_attributesAtIndex_effectiveRange (NSAttributedString* THIS, unsigned location, NSRangePointer range) {
	NSLog(@"NSAttributedString_attributesAtIndex_effectiveRange");
	return [THIS attributesAtIndex:location effectiveRange:range];
}

unsigned NSAttributedString_length (NSAttributedString* THIS) {
	NSLog(@"NSAttributedString_length");
	return [THIS length];
}
NSAttributedString * NSAttributedString_attribute_atIndex_effectiveRange (NSAttributedString* THIS, NSString * attrName, unsigned int location, NSRangePointer range) {
	NSLog(@"NSAttributedString_attribute_atIndex_effectiveRange");
	return [THIS attribute:attrName atIndex:location effectiveRange:range];
}

NSAttributedString * NSAttributedString_attributedSubstringFromRange (NSAttributedString* THIS, NSRange range) {
	NSLog(@"NSAttributedString_attributedSubstringFromRange");
	return [THIS attributedSubstringFromRange:range];
}

NSDictionary * NSAttributedString_attributesAtIndex_longestEffectiveRange_inRange (NSAttributedString* THIS, unsigned location, NSRangePointer range, NSRange rangeLimit) {
	NSLog(@"NSAttributedString_attributesAtIndex_longestEffectiveRange_inRange");
	return [THIS attributesAtIndex:location longestEffectiveRange:range inRange:rangeLimit];
}

NSAttributedString * NSAttributedString_attribute_atIndex_longestEffectiveRange_inRange (NSAttributedString* THIS, NSString * attrName, unsigned int location, NSRangePointer range, NSRange rangeLimit) {
	NSLog(@"NSAttributedString_attribute_atIndex_longestEffectiveRange_inRange");
	return [THIS attribute:attrName atIndex:location longestEffectiveRange:range inRange:rangeLimit];
}

BOOL NSAttributedString_isEqualToAttributedString (NSAttributedString* THIS, NSAttributedString * other) {
	NSLog(@"NSAttributedString_isEqualToAttributedString");
	return [THIS isEqualToAttributedString:other];
}

NSAttributedString * NSAttributedString_initWithString (NSAttributedString* THIS, NSString * str) {
	NSLog(@"NSAttributedString_initWithString");
	return [THIS initWithString:str];
}

NSAttributedString * NSAttributedString_initWithString_attributes (NSAttributedString* THIS, NSString * str, NSDictionary * attrs) {
	NSLog(@"NSAttributedString_initWithString_attributes");
	return [THIS initWithString:str attributes:attrs];
}

NSAttributedString * NSAttributedString_initWithAttributedString (NSAttributedString* THIS, NSAttributedString * attrStr) {
	NSLog(@"NSAttributedString_initWithAttributedString");
	return [THIS initWithAttributedString:attrStr];
}

void NSAttributedString_replaceCharactersInRange_withString (NSAttributedString* THIS, NSRange range, NSString * str) {
	NSLog(@"NSAttributedString_replaceCharactersInRange_withString");
	[THIS replaceCharactersInRange:range withString:str];
}

void NSAttributedString_setAttributes_range (NSAttributedString* THIS, NSDictionary * attrs, NSRange range) {
	NSLog(@"NSAttributedString_setAttributes_range");
	[THIS setAttributes:attrs range:range];
}

NSMutableString * NSAttributedString_mutableString (NSAttributedString* THIS) {
	NSLog(@"NSAttributedString_mutableString");
	return [THIS mutableString];
}
void NSAttributedString_addAttribute_value_range (NSAttributedString* THIS, NSString * name, NSAttributedString * value, NSRange range) {
	NSLog(@"NSAttributedString_addAttribute_value_range");
	[THIS addAttribute:name value:value range:range];
}

void NSAttributedString_addAttributes_range (NSAttributedString* THIS, NSDictionary * attrs, NSRange range) {
	NSLog(@"NSAttributedString_addAttributes_range");
	[THIS addAttributes:attrs range:range];
}

void NSAttributedString_removeAttribute_range (NSAttributedString* THIS, NSString * name, NSRange range) {
	NSLog(@"NSAttributedString_removeAttribute_range");
	[THIS removeAttribute:name range:range];
}

void NSAttributedString_replaceCharactersInRange_withAttributedString (NSAttributedString* THIS, NSRange range, NSAttributedString * attrString) {
	NSLog(@"NSAttributedString_replaceCharactersInRange_withAttributedString");
	[THIS replaceCharactersInRange:range withAttributedString:attrString];
}

void NSAttributedString_insertAttributedString_atIndex (NSAttributedString* THIS, NSAttributedString * attrString, unsigned loc) {
	NSLog(@"NSAttributedString_insertAttributedString_atIndex");
	[THIS insertAttributedString:attrString atIndex:loc];
}

void NSAttributedString_appendAttributedString (NSAttributedString* THIS, NSAttributedString * attrString) {
	NSLog(@"NSAttributedString_appendAttributedString");
	[THIS appendAttributedString:attrString];
}

void NSAttributedString_deleteCharactersInRange (NSAttributedString* THIS, NSRange range) {
	NSLog(@"NSAttributedString_deleteCharactersInRange");
	[THIS deleteCharactersInRange:range];
}

void NSAttributedString_setAttributedString (NSAttributedString* THIS, NSAttributedString * attrString) {
	NSLog(@"NSAttributedString_setAttributedString");
	[THIS setAttributedString:attrString];
}

void NSAttributedString_beginEditing (NSAttributedString* THIS) {
	NSLog(@"NSAttributedString_beginEditing");
	[THIS beginEditing];
}
void NSAttributedString_endEditing (NSAttributedString* THIS) {
	NSLog(@"NSAttributedString_endEditing");
	[THIS endEditing];
}
NSAttributedString * NSAttributedString_alloc() {
	NSLog(@"NSAttributedString_alloc()");
	return [NSAttributedString alloc];
}
