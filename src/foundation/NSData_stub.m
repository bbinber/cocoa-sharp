/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

#include <Foundation/NSRange.h>

unsigned NSData_length (NSData* THIS) {
	NSLog(@"NSData_length");
	return [THIS length];
}
const void * NSData_bytes (NSData* THIS) {
	NSLog(@"NSData_bytes");
	[THIS bytes];
}
NSString * NSData_description (NSData* THIS) {
	NSLog(@"NSData_description");
	return [THIS description];
}
void NSData_getBytes (NSData* THIS, void * buffer) {
	NSLog(@"NSData_getBytes");
	[THIS getBytes:buffer];
}

void NSData_getBytes_length (NSData* THIS, void * buffer, unsigned length) {
	NSLog(@"NSData_getBytes_length");
	[THIS getBytes:buffer length:length];
}

void NSData_getBytes_range (NSData* THIS, void * buffer, NSRange range) {
	NSLog(@"NSData_getBytes_range");
	[THIS getBytes:buffer range:range];
}

BOOL NSData_isEqualToData (NSData* THIS, NSData * other) {
	NSLog(@"NSData_isEqualToData");
	return [THIS isEqualToData:other];
}

NSData * NSData_subdataWithRange (NSData* THIS, NSRange range) {
	NSLog(@"NSData_subdataWithRange");
	return [THIS subdataWithRange:range];
}

BOOL NSData_writeToFile_atomically (NSData* THIS, NSString * path, BOOL useAuxiliaryFile) {
	NSLog(@"NSData_writeToFile_atomically");
	return [THIS writeToFile:path atomically:useAuxiliaryFile];
}

BOOL NSData_writeToURL_atomically (NSData* THIS, NSURL * url, BOOL atomically) {
	NSLog(@"NSData_writeToURL_atomically");
	return [THIS writeToURL:url atomically:atomically];
}

NSData * NSData_data (NSData* THIS) {
	NSLog(@"NSData_data");
	return [THIS data];
}
NSData * NSData_dataWithBytes_length (NSData* THIS, const void * bytes, unsigned length) {
	NSLog(@"NSData_dataWithBytes_length");
	return [THIS dataWithBytes:bytes length:length];
}

NSData * NSData_dataWithBytesNoCopy_length (NSData* THIS, void * bytes, unsigned length) {
	NSLog(@"NSData_dataWithBytesNoCopy_length");
	return [THIS dataWithBytesNoCopy:bytes length:length];
}

NSData * NSData_dataWithBytesNoCopy_length_freeWhenDone (NSData* THIS, void * bytes, unsigned length, BOOL b) {
	NSLog(@"NSData_dataWithBytesNoCopy_length_freeWhenDone");
	return [THIS dataWithBytesNoCopy:bytes length:length freeWhenDone:b];
}

NSData * NSData_dataWithContentsOfFile (NSData* THIS, NSString * path) {
	NSLog(@"NSData_dataWithContentsOfFile");
	return [THIS dataWithContentsOfFile:path];
}

NSData * NSData_dataWithContentsOfURL (NSData* THIS, NSURL * url) {
	NSLog(@"NSData_dataWithContentsOfURL");
	return [THIS dataWithContentsOfURL:url];
}

NSData * NSData_dataWithContentsOfMappedFile (NSData* THIS, NSString * path) {
	NSLog(@"NSData_dataWithContentsOfMappedFile");
	return [THIS dataWithContentsOfMappedFile:path];
}

NSData * NSData_initWithBytes_length (NSData* THIS, const void * bytes, unsigned length) {
	NSLog(@"NSData_initWithBytes_length");
	return [THIS initWithBytes:bytes length:length];
}

NSData * NSData_initWithBytesNoCopy_length (NSData* THIS, void * bytes, unsigned length) {
	NSLog(@"NSData_initWithBytesNoCopy_length");
	return [THIS initWithBytesNoCopy:bytes length:length];
}

NSData * NSData_initWithBytesNoCopy_length_freeWhenDone (NSData* THIS, void * bytes, unsigned length, BOOL b) {
	NSLog(@"NSData_initWithBytesNoCopy_length_freeWhenDone");
	return [THIS initWithBytesNoCopy:bytes length:length freeWhenDone:b];
}

NSData * NSData_initWithContentsOfFile (NSData* THIS, NSString * path) {
	NSLog(@"NSData_initWithContentsOfFile");
	return [THIS initWithContentsOfFile:path];
}

NSData * NSData_initWithContentsOfURL (NSData* THIS, NSURL * url) {
	NSLog(@"NSData_initWithContentsOfURL");
	return [THIS initWithContentsOfURL:url];
}

NSData * NSData_initWithContentsOfMappedFile (NSData* THIS, NSString * path) {
	NSLog(@"NSData_initWithContentsOfMappedFile");
	return [THIS initWithContentsOfMappedFile:path];
}

NSData * NSData_initWithData (NSData* THIS, NSData * data) {
	NSLog(@"NSData_initWithData");
	return [THIS initWithData:data];
}

NSData * NSData_dataWithData (NSData* THIS, NSData * data) {
	NSLog(@"NSData_dataWithData");
	return [THIS dataWithData:data];
}

void * NSData_mutableBytes (NSData* THIS) {
	NSLog(@"NSData_mutableBytes");
	[THIS mutableBytes];
}
void NSData_setLength (NSData* THIS, unsigned length) {
	NSLog(@"NSData_setLength");
	[THIS setLength:length];
}

void NSData_appendBytes_length (NSData* THIS, const void * bytes, unsigned length) {
	NSLog(@"NSData_appendBytes_length");
	[THIS appendBytes:bytes length:length];
}

void NSData_appendData (NSData* THIS, NSData * other) {
	NSLog(@"NSData_appendData");
	[THIS appendData:other];
}

void NSData_increaseLengthBy (NSData* THIS, unsigned extraLength) {
	NSLog(@"NSData_increaseLengthBy");
	[THIS increaseLengthBy:extraLength];
}

void NSData_replaceBytesInRange_withBytes (NSData* THIS, NSRange range, const void * bytes) {
	NSLog(@"NSData_replaceBytesInRange_withBytes");
	[THIS replaceBytesInRange:range withBytes:bytes];
}

void NSData_resetBytesInRange (NSData* THIS, NSRange range) {
	NSLog(@"NSData_resetBytesInRange");
	[THIS resetBytesInRange:range];
}

void NSData_setData (NSData* THIS, NSData * data) {
	NSLog(@"NSData_setData");
	[THIS setData:data];
}

void NSData_replaceBytesInRange_withBytes_length (NSData* THIS, NSRange range, const void * replacementBytes, unsigned replacementLength) {
	NSLog(@"NSData_replaceBytesInRange_withBytes_length");
	[THIS replaceBytesInRange:range withBytes:replacementBytes length:replacementLength];
}

NSData * NSData_dataWithCapacity (NSData* THIS, unsigned aNumItems) {
	NSLog(@"NSData_dataWithCapacity");
	return [THIS dataWithCapacity:aNumItems];
}

NSData * NSData_dataWithLength (NSData* THIS, unsigned length) {
	NSLog(@"NSData_dataWithLength");
	return [THIS dataWithLength:length];
}

NSData * NSData_initWithCapacity (NSData* THIS, unsigned capacity) {
	NSLog(@"NSData_initWithCapacity");
	return [THIS initWithCapacity:capacity];
}

NSData * NSData_initWithLength (NSData* THIS, unsigned length) {
	NSLog(@"NSData_initWithLength");
	return [THIS initWithLength:length];
}

NSData * NSData_alloc() {
	NSLog(@"NSData_alloc()");
	return [NSData alloc];
}
