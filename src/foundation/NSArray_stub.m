/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

#include <Foundation/NSRange.h>

unsigned NSArray_count (NSArray* THIS) {
	NSLog(@"NSArray_count");
	return [THIS count];
}
NSArray * NSArray_objectAtIndex (NSArray* THIS, unsigned index) {
	NSLog(@"NSArray_objectAtIndex");
	return [THIS objectAtIndex:index];
}

NSArray * NSArray_arrayByAddingObject (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_arrayByAddingObject");
	return [THIS arrayByAddingObject:anObject];
}

NSArray * NSArray_arrayByAddingObjectsFromArray (NSArray* THIS, NSArray * otherArray) {
	NSLog(@"NSArray_arrayByAddingObjectsFromArray");
	return [THIS arrayByAddingObjectsFromArray:otherArray];
}

NSString * NSArray_componentsJoinedByString (NSArray* THIS, NSString * separator) {
	NSLog(@"NSArray_componentsJoinedByString");
	return [THIS componentsJoinedByString:separator];
}

BOOL NSArray_containsObject (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_containsObject");
	return [THIS containsObject:anObject];
}

NSString * NSArray_description (NSArray* THIS) {
	NSLog(@"NSArray_description");
	return [THIS description];
}
NSString * NSArray_descriptionWithLocale (NSArray* THIS, NSDictionary * locale) {
	NSLog(@"NSArray_descriptionWithLocale");
	return [THIS descriptionWithLocale:locale];
}

NSString * NSArray_descriptionWithLocale_indent (NSArray* THIS, NSDictionary * locale, unsigned level) {
	NSLog(@"NSArray_descriptionWithLocale_indent");
	return [THIS descriptionWithLocale:locale indent:level];
}

NSArray * NSArray_firstObjectCommonWithArray (NSArray* THIS, NSArray * otherArray) {
	NSLog(@"NSArray_firstObjectCommonWithArray");
	return [THIS firstObjectCommonWithArray:otherArray];
}

void NSArray_getObjects (NSArray* THIS, NSArray * * objects) {
	NSLog(@"NSArray_getObjects");
	[THIS getObjects:objects];
}

void NSArray_getObjects_range (NSArray* THIS, NSArray * * objects, NSRange range) {
	NSLog(@"NSArray_getObjects_range");
	[THIS getObjects:objects range:range];
}

unsigned NSArray_indexOfObject (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_indexOfObject");
	return [THIS indexOfObject:anObject];
}

unsigned NSArray_indexOfObject_inRange (NSArray* THIS, NSArray * anObject, NSRange range) {
	NSLog(@"NSArray_indexOfObject_inRange");
	return [THIS indexOfObject:anObject inRange:range];
}

unsigned NSArray_indexOfObjectIdenticalTo (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_indexOfObjectIdenticalTo");
	return [THIS indexOfObjectIdenticalTo:anObject];
}

unsigned NSArray_indexOfObjectIdenticalTo_inRange (NSArray* THIS, NSArray * anObject, NSRange range) {
	NSLog(@"NSArray_indexOfObjectIdenticalTo_inRange");
	return [THIS indexOfObjectIdenticalTo:anObject inRange:range];
}

BOOL NSArray_isEqualToArray (NSArray* THIS, NSArray * otherArray) {
	NSLog(@"NSArray_isEqualToArray");
	return [THIS isEqualToArray:otherArray];
}

NSArray * NSArray_lastObject (NSArray* THIS) {
	NSLog(@"NSArray_lastObject");
	return [THIS lastObject];
}
NSEnumerator * NSArray_objectEnumerator (NSArray* THIS) {
	NSLog(@"NSArray_objectEnumerator");
	return [THIS objectEnumerator];
}
NSEnumerator * NSArray_reverseObjectEnumerator (NSArray* THIS) {
	NSLog(@"NSArray_reverseObjectEnumerator");
	return [THIS reverseObjectEnumerator];
}
NSData * NSArray_sortedArrayHint (NSArray* THIS) {
	NSLog(@"NSArray_sortedArrayHint");
	return [THIS sortedArrayHint];
}
NSArray * NSArray_sortedArrayUsingFunction_context (NSArray* THIS, void * context) {
	NSLog(@"NSArray_sortedArrayUsingFunction_context");
	return [THIS sortedArrayUsingFunctioncontext:context];
}

NSArray * NSArray_sortedArrayUsingFunction_context_hint (NSArray* THIS, void * context, NSData * hint) {
	NSLog(@"NSArray_sortedArrayUsingFunction_context_hint");
	return [THIS sortedArrayUsingFunctioncontext:context hint:hint];
}

NSArray * NSArray_sortedArrayUsingSelector (NSArray* THIS, SEL comparator) {
	NSLog(@"NSArray_sortedArrayUsingSelector");
	return [THIS sortedArrayUsingSelector:comparator];
}

NSArray * NSArray_subarrayWithRange (NSArray* THIS, NSRange range) {
	NSLog(@"NSArray_subarrayWithRange");
	return [THIS subarrayWithRange:range];
}

BOOL NSArray_writeToFile_atomically (NSArray* THIS, NSString * path, BOOL useAuxiliaryFile) {
	NSLog(@"NSArray_writeToFile_atomically");
	return [THIS writeToFile:path atomically:useAuxiliaryFile];
}

BOOL NSArray_writeToURL_atomically (NSArray* THIS, NSURL * url, BOOL atomically) {
	NSLog(@"NSArray_writeToURL_atomically");
	return [THIS writeToURL:url atomically:atomically];
}

void NSArray_makeObjectsPerformSelector (NSArray* THIS, SEL aSelector) {
	NSLog(@"NSArray_makeObjectsPerformSelector");
	[THIS makeObjectsPerformSelector:aSelector];
}

void NSArray_makeObjectsPerformSelector_withObject (NSArray* THIS, SEL aSelector, NSArray * argument) {
	NSLog(@"NSArray_makeObjectsPerformSelector_withObject");
	[THIS makeObjectsPerformSelector:aSelector withObject:argument];
}

NSArray * NSArray_array (NSArray* THIS) {
	NSLog(@"NSArray_array");
	return [THIS array];
}
NSArray * NSArray_arrayWithContentsOfFile (NSArray* THIS, NSString * path) {
	NSLog(@"NSArray_arrayWithContentsOfFile");
	return [THIS arrayWithContentsOfFile:path];
}

NSArray * NSArray_arrayWithContentsOfURL (NSArray* THIS, NSURL * url) {
	NSLog(@"NSArray_arrayWithContentsOfURL");
	return [THIS arrayWithContentsOfURL:url];
}

NSArray * NSArray_arrayWithObject (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_arrayWithObject");
	return [THIS arrayWithObject:anObject];
}

/* UNSUPPORTED: 
+ (id)arrayWithObjects:(id)firstObj, ...;
 */

NSArray * NSArray_initWithArray (NSArray* THIS, NSArray * array) {
	NSLog(@"NSArray_initWithArray");
	return [THIS initWithArray:array];
}

NSArray * NSArray_initWithArray_copyItems (NSArray* THIS, NSArray * array, BOOL flag) {
	NSLog(@"NSArray_initWithArray_copyItems");
	return [THIS initWithArray:array copyItems:flag];
}

NSArray * NSArray_initWithContentsOfFile (NSArray* THIS, NSString * path) {
	NSLog(@"NSArray_initWithContentsOfFile");
	return [THIS initWithContentsOfFile:path];
}

NSArray * NSArray_initWithContentsOfURL (NSArray* THIS, NSURL * url) {
	NSLog(@"NSArray_initWithContentsOfURL");
	return [THIS initWithContentsOfURL:url];
}

NSArray * NSArray_initWithObjects_count (NSArray* THIS, NSArray * * objects, unsigned count) {
	NSLog(@"NSArray_initWithObjects_count");
	return [THIS initWithObjects:objects count:count];
}

/* UNSUPPORTED: 
- (id)initWithObjects:(id)firstObj, ...;
 */

NSArray * NSArray_arrayWithArray (NSArray* THIS, NSArray * array) {
	NSLog(@"NSArray_arrayWithArray");
	return [THIS arrayWithArray:array];
}

NSArray * NSArray_arrayWithObjects_count (NSArray* THIS, NSArray * * objs, unsigned cnt) {
	NSLog(@"NSArray_arrayWithObjects_count");
	return [THIS arrayWithObjects:objs count:cnt];
}

void NSArray_addObject (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_addObject");
	[THIS addObject:anObject];
}

void NSArray_insertObject_atIndex (NSArray* THIS, NSArray * anObject, unsigned index) {
	NSLog(@"NSArray_insertObject_atIndex");
	[THIS insertObject:anObject atIndex:index];
}

void NSArray_removeLastObject (NSArray* THIS) {
	NSLog(@"NSArray_removeLastObject");
	[THIS removeLastObject];
}
void NSArray_removeObjectAtIndex (NSArray* THIS, unsigned index) {
	NSLog(@"NSArray_removeObjectAtIndex");
	[THIS removeObjectAtIndex:index];
}

void NSArray_replaceObjectAtIndex_withObject (NSArray* THIS, unsigned index, NSArray * anObject) {
	NSLog(@"NSArray_replaceObjectAtIndex_withObject");
	[THIS replaceObjectAtIndex:index withObject:anObject];
}

void NSArray_addObjectsFromArray (NSArray* THIS, NSArray * otherArray) {
	NSLog(@"NSArray_addObjectsFromArray");
	[THIS addObjectsFromArray:otherArray];
}

void NSArray_exchangeObjectAtIndex_withObjectAtIndex (NSArray* THIS, unsigned idx1, unsigned idx2) {
	NSLog(@"NSArray_exchangeObjectAtIndex_withObjectAtIndex");
	[THIS exchangeObjectAtIndex:idx1 withObjectAtIndex:idx2];
}

void NSArray_removeAllObjects (NSArray* THIS) {
	NSLog(@"NSArray_removeAllObjects");
	[THIS removeAllObjects];
}
void NSArray_removeObject_inRange (NSArray* THIS, NSArray * anObject, NSRange range) {
	NSLog(@"NSArray_removeObject_inRange");
	[THIS removeObject:anObject inRange:range];
}

void NSArray_removeObject (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_removeObject");
	[THIS removeObject:anObject];
}

void NSArray_removeObjectIdenticalTo_inRange (NSArray* THIS, NSArray * anObject, NSRange range) {
	NSLog(@"NSArray_removeObjectIdenticalTo_inRange");
	[THIS removeObjectIdenticalTo:anObject inRange:range];
}

void NSArray_removeObjectIdenticalTo (NSArray* THIS, NSArray * anObject) {
	NSLog(@"NSArray_removeObjectIdenticalTo");
	[THIS removeObjectIdenticalTo:anObject];
}

void NSArray_removeObjectsFromIndices_numIndices (NSArray* THIS, unsigned * indices, unsigned count) {
	NSLog(@"NSArray_removeObjectsFromIndices_numIndices");
	[THIS removeObjectsFromIndices:indices numIndices:count];
}

void NSArray_removeObjectsInArray (NSArray* THIS, NSArray * otherArray) {
	NSLog(@"NSArray_removeObjectsInArray");
	[THIS removeObjectsInArray:otherArray];
}

void NSArray_removeObjectsInRange (NSArray* THIS, NSRange range) {
	NSLog(@"NSArray_removeObjectsInRange");
	[THIS removeObjectsInRange:range];
}

void NSArray_replaceObjectsInRange_withObjectsFromArray_range (NSArray* THIS, NSRange range, NSArray * otherArray, NSRange otherRange) {
	NSLog(@"NSArray_replaceObjectsInRange_withObjectsFromArray_range");
	[THIS replaceObjectsInRange:range withObjectsFromArray:otherArray range:otherRange];
}

void NSArray_replaceObjectsInRange_withObjectsFromArray (NSArray* THIS, NSRange range, NSArray * otherArray) {
	NSLog(@"NSArray_replaceObjectsInRange_withObjectsFromArray");
	[THIS replaceObjectsInRange:range withObjectsFromArray:otherArray];
}

void NSArray_setArray (NSArray* THIS, NSArray * otherArray) {
	NSLog(@"NSArray_setArray");
	[THIS setArray:otherArray];
}

void NSArray_sortUsingFunction_context (NSArray* THIS, void * context) {
	NSLog(@"NSArray_sortUsingFunction_context");
	[THIS sortUsingFunctioncontext:context];
}

void NSArray_sortUsingSelector (NSArray* THIS, SEL comparator) {
	NSLog(@"NSArray_sortUsingSelector");
	[THIS sortUsingSelector:comparator];
}

NSArray * NSArray_arrayWithCapacity (NSArray* THIS, unsigned numItems) {
	NSLog(@"NSArray_arrayWithCapacity");
	return [THIS arrayWithCapacity:numItems];
}

NSArray * NSArray_initWithCapacity (NSArray* THIS, unsigned numItems) {
	NSLog(@"NSArray_initWithCapacity");
	return [THIS initWithCapacity:numItems];
}

NSArray * NSArray_alloc() {
	NSLog(@"NSArray_alloc()");
	return [NSArray alloc];
}
