/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

NSScriptCommand * NSScriptCommand_initWithCommandDescription (NSScriptCommand* THIS, NSScriptCommandDescription * commandDef) {
	NSLog(@"NSScriptCommand_initWithCommandDescription");
	return [THIS initWithCommandDescription:commandDef];
}

NSScriptCommandDescription * NSScriptCommand_commandDescription (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_commandDescription");
	return [THIS commandDescription];
}

void NSScriptCommand_setDirectParameter (NSScriptCommand* THIS, id directParameter) {
	NSLog(@"NSScriptCommand_setDirectParameter");
	[THIS setDirectParameter:directParameter];
}

NSScriptCommand * NSScriptCommand_directParameter (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_directParameter");
	return [THIS directParameter];
}

void NSScriptCommand_setReceiversSpecifier (NSScriptCommand* THIS, NSScriptObjectSpecifier * receiversRef) {
	NSLog(@"NSScriptCommand_setReceiversSpecifier");
	[THIS setReceiversSpecifier:receiversRef];
}

NSScriptObjectSpecifier * NSScriptCommand_receiversSpecifier (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_receiversSpecifier");
	return [THIS receiversSpecifier];
}

NSScriptCommand * NSScriptCommand_evaluatedReceivers (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_evaluatedReceivers");
	return [THIS evaluatedReceivers];
}

void NSScriptCommand_setArguments (NSScriptCommand* THIS, NSDictionary * args) {
	NSLog(@"NSScriptCommand_setArguments");
	[THIS setArguments:args];
}

NSDictionary * NSScriptCommand_arguments (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_arguments");
	return [THIS arguments];
}

NSDictionary * NSScriptCommand_evaluatedArguments (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_evaluatedArguments");
	return [THIS evaluatedArguments];
}

BOOL NSScriptCommand_isWellFormed (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_isWellFormed");
	return [THIS isWellFormed];
}

NSScriptCommand * NSScriptCommand_performDefaultImplementation (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_performDefaultImplementation");
	return [THIS performDefaultImplementation];
}

NSScriptCommand * NSScriptCommand_executeCommand (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_executeCommand");
	return [THIS executeCommand];
}

void NSScriptCommand_setScriptErrorNumber (NSScriptCommand* THIS, int errorNumber) {
	NSLog(@"NSScriptCommand_setScriptErrorNumber");
	[THIS setScriptErrorNumber:errorNumber];
}

int NSScriptCommand_scriptErrorNumber (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_scriptErrorNumber");
	return [THIS scriptErrorNumber];
}

void NSScriptCommand_setScriptErrorString (NSScriptCommand* THIS, NSString * errorString) {
	NSLog(@"NSScriptCommand_setScriptErrorString");
	[THIS setScriptErrorString:errorString];
}

NSString * NSScriptCommand_scriptErrorString (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_scriptErrorString");
	return [THIS scriptErrorString];
}

NSScriptCommand * NSScriptCommand$_currentCommand () {
	NSLog(@"NSScriptCommand$_currentCommand");
	return [NSScriptCommand currentCommand];
}

NSAppleEventDescriptor * NSScriptCommand_appleEvent (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_appleEvent");
	return [THIS appleEvent];
}

void NSScriptCommand_suspendExecution (NSScriptCommand* THIS) {
	NSLog(@"NSScriptCommand_suspendExecution");
	[THIS suspendExecution];
}

void NSScriptCommand_resumeExecutionWithResult (NSScriptCommand* THIS, id result) {
	NSLog(@"NSScriptCommand_resumeExecutionWithResult");
	[THIS resumeExecutionWithResult:result];
}

NSScriptCommand * NSScriptCommand_alloc(){
	NSLog(@"NSScriptCommand_alloc()");
	return [ NSScriptCommand alloc ];
}