/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

#include <ApplicationServices/ApplicationServices.h>

NSAppleEventManager * NSAppleEventManager_sharedAppleEventManager (NSAppleEventManager* THIS) {
	NSLog(@"NSAppleEventManager_sharedAppleEventManager");
	return [THIS sharedAppleEventManager];
}
void NSAppleEventManager_setEventHandler_andSelector_forEventClass_andEventID (NSAppleEventManager* THIS, NSAppleEventManager * handler, SEL handleEventSelector, AEEventClass eventClass, AEEventID eventID) {
	NSLog(@"NSAppleEventManager_setEventHandler_andSelector_forEventClass_andEventID");
	[THIS setEventHandler:handler andSelector:handleEventSelector forEventClass:eventClass andEventID:eventID];
}

void NSAppleEventManager_removeEventHandlerForEventClass_andEventID (NSAppleEventManager* THIS, AEEventClass eventClass, AEEventID eventID) {
	NSLog(@"NSAppleEventManager_removeEventHandlerForEventClass_andEventID");
	[THIS removeEventHandlerForEventClass:eventClass andEventID:eventID];
}

OSErr NSAppleEventManager_dispatchRawAppleEvent_withRawReply_handlerRefCon (NSAppleEventManager* THIS, const AppleEvent * theAppleEvent, AppleEvent * theReply, UInt32 handlerRefCon) {
	NSLog(@"NSAppleEventManager_dispatchRawAppleEvent_withRawReply_handlerRefCon");
	return [THIS dispatchRawAppleEvent:theAppleEvent withRawReply:theReply handlerRefCon:handlerRefCon];
}

NSAppleEventDescriptor * NSAppleEventManager_currentAppleEvent (NSAppleEventManager* THIS) {
	NSLog(@"NSAppleEventManager_currentAppleEvent");
	return [THIS currentAppleEvent];
}
NSAppleEventDescriptor * NSAppleEventManager_currentReplyAppleEvent (NSAppleEventManager* THIS) {
	NSLog(@"NSAppleEventManager_currentReplyAppleEvent");
	return [THIS currentReplyAppleEvent];
}
NSAppleEventManagerSuspensionID NSAppleEventManager_suspendCurrentAppleEvent (NSAppleEventManager* THIS) {
	NSLog(@"NSAppleEventManager_suspendCurrentAppleEvent");
	return [THIS suspendCurrentAppleEvent];
}
NSAppleEventDescriptor * NSAppleEventManager_appleEventForSuspensionID (NSAppleEventManager* THIS, NSAppleEventManagerSuspensionID suspensionID) {
	NSLog(@"NSAppleEventManager_appleEventForSuspensionID");
	return [THIS appleEventForSuspensionID:suspensionID];
}

NSAppleEventDescriptor * NSAppleEventManager_replyAppleEventForSuspensionID (NSAppleEventManager* THIS, NSAppleEventManagerSuspensionID suspensionID) {
	NSLog(@"NSAppleEventManager_replyAppleEventForSuspensionID");
	return [THIS replyAppleEventForSuspensionID:suspensionID];
}

void NSAppleEventManager_setCurrentAppleEventAndReplyEventWithSuspensionID (NSAppleEventManager* THIS, NSAppleEventManagerSuspensionID suspensionID) {
	NSLog(@"NSAppleEventManager_setCurrentAppleEventAndReplyEventWithSuspensionID");
	[THIS setCurrentAppleEventAndReplyEventWithSuspensionID:suspensionID];
}

void NSAppleEventManager_resumeWithSuspensionID (NSAppleEventManager* THIS, NSAppleEventManagerSuspensionID suspensionID) {
	NSLog(@"NSAppleEventManager_resumeWithSuspensionID");
	[THIS resumeWithSuspensionID:suspensionID];
}

NSAppleEventManager * NSAppleEventManager_alloc() {
	NSLog(@"NSAppleEventManager_alloc()");
	return [NSAppleEventManager alloc];
}
