/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSArray.h>

void NSKeyValueObserving_observeValueForKeyPath_ofObject_change_context (NSKeyValueObserving* THIS, NSString * keyPath, id object, NSDictionary * change, void * context) {
	NSLog(@"NSKeyValueObserving_observeValueForKeyPath_ofObject_change_context");
	[THIS observeValueForKeyPath:keyPath ofObject:object change:change context:context];
}

void NSKeyValueObserving_addObserver_forKeyPath_options_context (NSKeyValueObserving* THIS, NSObject * observer, NSString * keyPath, NSKeyValueObservingOptions options, void * context) {
	NSLog(@"NSKeyValueObserving_addObserver_forKeyPath_options_context");
	[THIS addObserver:observer forKeyPath:keyPath options:options context:context];
}

void NSKeyValueObserving_removeObserver_forKeyPath (NSKeyValueObserving* THIS, NSObject * observer, NSString * keyPath) {
	NSLog(@"NSKeyValueObserving_removeObserver_forKeyPath");
	[THIS removeObserver:observer forKeyPath:keyPath];
}

void NSKeyValueObserving_addObserver_toObjectsAtIndexes_forKeyPath_options_context (NSKeyValueObserving* THIS, NSObject * observer, NSIndexSet * indexes, NSString * keyPath, NSKeyValueObservingOptions options, void * context) {
	NSLog(@"NSKeyValueObserving_addObserver_toObjectsAtIndexes_forKeyPath_options_context");
	[THIS addObserver:observer toObjectsAtIndexes:indexes forKeyPath:keyPath options:options context:context];
}

void NSKeyValueObserving_removeObserver_fromObjectsAtIndexes_forKeyPath (NSKeyValueObserving* THIS, NSObject * observer, NSIndexSet * indexes, NSString * keyPath) {
	NSLog(@"NSKeyValueObserving_removeObserver_fromObjectsAtIndexes_forKeyPath");
	[THIS removeObserver:observer fromObjectsAtIndexes:indexes forKeyPath:keyPath];
}

void NSKeyValueObserving_willChangeValueForKey (NSKeyValueObserving* THIS, NSString * key) {
	NSLog(@"NSKeyValueObserving_willChangeValueForKey");
	[THIS willChangeValueForKey:key];
}

void NSKeyValueObserving_didChangeValueForKey (NSKeyValueObserving* THIS, NSString * key) {
	NSLog(@"NSKeyValueObserving_didChangeValueForKey");
	[THIS didChangeValueForKey:key];
}

void NSKeyValueObserving_willChange_valuesAtIndexes_forKey (NSKeyValueObserving* THIS, NSKeyValueChange change, NSIndexSet * indexes, NSString * key) {
	NSLog(@"NSKeyValueObserving_willChange_valuesAtIndexes_forKey");
	[THIS willChange:change valuesAtIndexes:indexes forKey:key];
}

void NSKeyValueObserving_didChange_valuesAtIndexes_forKey (NSKeyValueObserving* THIS, NSKeyValueChange change, NSIndexSet * indexes, NSString * key) {
	NSLog(@"NSKeyValueObserving_didChange_valuesAtIndexes_forKey");
	[THIS didChange:change valuesAtIndexes:indexes forKey:key];
}

BOOL NSKeyValueObserving$_automaticallyNotifiesObserversForKey (NSString * key) {
	NSLog(@"NSKeyValueObserving$_automaticallyNotifiesObserversForKey");
	return [NSKeyValueObserving automaticallyNotifiesObserversForKey:key];
}

void NSKeyValueObserving$_setKeys_triggerChangeNotificationsForDependentKey (NSArray * keys, NSString * dependentKey) {
	NSLog(@"NSKeyValueObserving$_setKeys_triggerChangeNotificationsForDependentKey");
	[NSKeyValueObserving setKeys:keys triggerChangeNotificationsForDependentKey:dependentKey];
}

void NSKeyValueObserving_setObservationInfo (NSKeyValueObserving* THIS, void * observationInfo) {
	NSLog(@"NSKeyValueObserving_setObservationInfo");
	[THIS setObservationInfo:observationInfo];
}

void * NSKeyValueObserving_observationInfo (NSKeyValueObserving* THIS) {
	NSLog(@"NSKeyValueObserving_observationInfo");
	[THIS observationInfo];
}

NSKeyValueObserving * NSKeyValueObserving_alloc(){
	NSLog(@"NSKeyValueObserving_alloc()");
	return [ NSKeyValueObserving alloc ];
}