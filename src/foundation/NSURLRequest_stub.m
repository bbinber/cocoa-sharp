/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <AvailabilityMacros.h>
#include <Foundation/NSObject.h>
#include <Foundation/NSDate.h>

NSURLRequest * NSURLRequest$_requestWithURL (NSURL * URL) {
	NSLog(@"NSURLRequest$_requestWithURL");
	return [NSURLRequest requestWithURL:URL];
}

NSURLRequest * NSURLRequest$_requestWithURL_cachePolicy_timeoutInterval (NSURL * URL, NSURLRequestCachePolicy cachePolicy, NSTimeInterval timeoutInterval) {
	NSLog(@"NSURLRequest$_requestWithURL_cachePolicy_timeoutInterval");
	return [NSURLRequest requestWithURL:URL cachePolicy:cachePolicy timeoutInterval:timeoutInterval];
}

NSURLRequest * NSURLRequest_initWithURL (NSURLRequest* THIS, NSURL * URL) {
	NSLog(@"NSURLRequest_initWithURL");
	return [THIS initWithURL:URL];
}

NSURLRequest * NSURLRequest_initWithURL_cachePolicy_timeoutInterval (NSURLRequest* THIS, NSURL * URL, NSURLRequestCachePolicy cachePolicy, NSTimeInterval timeoutInterval) {
	NSLog(@"NSURLRequest_initWithURL_cachePolicy_timeoutInterval");
	return [THIS initWithURL:URL cachePolicy:cachePolicy timeoutInterval:timeoutInterval];
}

NSURL * NSURLRequest_URL (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_URL");
	return [THIS URL];
}

NSURLRequestCachePolicy NSURLRequest_cachePolicy (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_cachePolicy");
	return [THIS cachePolicy];
}

NSTimeInterval NSURLRequest_timeoutInterval (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_timeoutInterval");
	return [THIS timeoutInterval];
}

NSURL * NSURLRequest_mainDocumentURL (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_mainDocumentURL");
	return [THIS mainDocumentURL];
}

void NSURLRequest_setURL (NSURLRequest* THIS, NSURL * URL) {
	NSLog(@"NSURLRequest_setURL");
	[THIS setURL:URL];
}

void NSURLRequest_setCachePolicy (NSURLRequest* THIS, NSURLRequestCachePolicy policy) {
	NSLog(@"NSURLRequest_setCachePolicy");
	[THIS setCachePolicy:policy];
}

void NSURLRequest_setTimeoutInterval (NSURLRequest* THIS, NSTimeInterval seconds) {
	NSLog(@"NSURLRequest_setTimeoutInterval");
	[THIS setTimeoutInterval:seconds];
}

void NSURLRequest_setMainDocumentURL (NSURLRequest* THIS, NSURL * URL) {
	NSLog(@"NSURLRequest_setMainDocumentURL");
	[THIS setMainDocumentURL:URL];
}

NSString * NSURLRequest_HTTPMethod (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_HTTPMethod");
	return [THIS HTTPMethod];
}

NSDictionary * NSURLRequest_allHTTPHeaderFields (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_allHTTPHeaderFields");
	return [THIS allHTTPHeaderFields];
}

NSString * NSURLRequest_valueForHTTPHeaderField (NSURLRequest* THIS, NSString * field) {
	NSLog(@"NSURLRequest_valueForHTTPHeaderField");
	return [THIS valueForHTTPHeaderField:field];
}

NSData * NSURLRequest_HTTPBody (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_HTTPBody");
	return [THIS HTTPBody];
}

BOOL NSURLRequest_HTTPShouldHandleCookies (NSURLRequest* THIS) {
	NSLog(@"NSURLRequest_HTTPShouldHandleCookies");
	return [THIS HTTPShouldHandleCookies];
}

void NSURLRequest_setHTTPMethod (NSURLRequest* THIS, NSString * method) {
	NSLog(@"NSURLRequest_setHTTPMethod");
	[THIS setHTTPMethod:method];
}

void NSURLRequest_setAllHTTPHeaderFields (NSURLRequest* THIS, NSDictionary * headerFields) {
	NSLog(@"NSURLRequest_setAllHTTPHeaderFields");
	[THIS setAllHTTPHeaderFields:headerFields];
}

void NSURLRequest_setValue_forHTTPHeaderField (NSURLRequest* THIS, NSString * value, NSString * field) {
	NSLog(@"NSURLRequest_setValue_forHTTPHeaderField");
	[THIS setValue:value forHTTPHeaderField:field];
}

void NSURLRequest_addValue_forHTTPHeaderField (NSURLRequest* THIS, NSString * value, NSString * field) {
	NSLog(@"NSURLRequest_addValue_forHTTPHeaderField");
	[THIS addValue:value forHTTPHeaderField:field];
}

void NSURLRequest_setHTTPBody (NSURLRequest* THIS, NSData * data) {
	NSLog(@"NSURLRequest_setHTTPBody");
	[THIS setHTTPBody:data];
}

void NSURLRequest_setHTTPShouldHandleCookies (NSURLRequest* THIS, BOOL should) {
	NSLog(@"NSURLRequest_setHTTPShouldHandleCookies");
	[THIS setHTTPShouldHandleCookies:should];
}

NSURLRequest * NSURLRequest_alloc(){
	NSLog(@"NSURLRequest_alloc()");
	return [ NSURLRequest alloc ];
}