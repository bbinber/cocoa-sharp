/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <AppKit/NSActionCell.h>

BOOL NSSliderCell$_prefersTrackingUntilMouseUp () {
	NSLog(@"NSSliderCell$_prefersTrackingUntilMouseUp");
	return [NSSliderCell prefersTrackingUntilMouseUp];
}

double NSSliderCell_minValue (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_minValue");
	return [THIS minValue];
}

void NSSliderCell_setMinValue (NSSliderCell* THIS, double aDouble) {
	NSLog(@"NSSliderCell_setMinValue");
	[THIS setMinValue:aDouble];
}

double NSSliderCell_maxValue (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_maxValue");
	return [THIS maxValue];
}

void NSSliderCell_setMaxValue (NSSliderCell* THIS, double aDouble) {
	NSLog(@"NSSliderCell_setMaxValue");
	[THIS setMaxValue:aDouble];
}

void NSSliderCell_setAltIncrementValue (NSSliderCell* THIS, double incValue) {
	NSLog(@"NSSliderCell_setAltIncrementValue");
	[THIS setAltIncrementValue:incValue];
}

double NSSliderCell_altIncrementValue (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_altIncrementValue");
	return [THIS altIncrementValue];
}

int NSSliderCell_isVertical (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_isVertical");
	return [THIS isVertical];
}

void NSSliderCell_setTitleColor (NSSliderCell* THIS, NSColor * newColor) {
	NSLog(@"NSSliderCell_setTitleColor");
	[THIS setTitleColor:newColor];
}

NSColor * NSSliderCell_titleColor (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_titleColor");
	return [THIS titleColor];
}

void NSSliderCell_setTitleFont (NSSliderCell* THIS, NSFont * fontObj) {
	NSLog(@"NSSliderCell_setTitleFont");
	[THIS setTitleFont:fontObj];
}

NSFont * NSSliderCell_titleFont (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_titleFont");
	return [THIS titleFont];
}

NSString * NSSliderCell_title (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_title");
	return [THIS title];
}

void NSSliderCell_setTitle (NSSliderCell* THIS, NSString * aString) {
	NSLog(@"NSSliderCell_setTitle");
	[THIS setTitle:aString];
}

void NSSliderCell_setTitleCell (NSSliderCell* THIS, NSCell * aCell) {
	NSLog(@"NSSliderCell_setTitleCell");
	[THIS setTitleCell:aCell];
}

NSSliderCell * NSSliderCell_titleCell (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_titleCell");
	return [THIS titleCell];
}

void NSSliderCell_setKnobThickness (NSSliderCell* THIS, float aFloat) {
	NSLog(@"NSSliderCell_setKnobThickness");
	[THIS setKnobThickness:aFloat];
}

float NSSliderCell_knobThickness (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_knobThickness");
	return [THIS knobThickness];
}

NSRect NSSliderCell_knobRectFlipped (NSSliderCell* THIS, BOOL flipped) {
	NSLog(@"NSSliderCell_knobRectFlipped");
	return [THIS knobRectFlipped:flipped];
}

void NSSliderCell_drawKnob (NSSliderCell* THIS, NSRect knobRect) {
	NSLog(@"NSSliderCell_drawKnob");
	[THIS drawKnob:knobRect];
}

void NSSliderCell_drawKnob (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_drawKnob");
	[THIS drawKnob];
}

void NSSliderCell_drawBarInside_flipped (NSSliderCell* THIS, NSRect aRect, BOOL flipped) {
	NSLog(@"NSSliderCell_drawBarInside_flipped");
	[THIS drawBarInside:aRect flipped:flipped];
}

NSRect NSSliderCell_trackRect (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_trackRect");
	return [THIS trackRect];
}

void NSSliderCell_setSliderType (NSSliderCell* THIS, NSSliderType sliderType) {
	NSLog(@"NSSliderCell_setSliderType");
	[THIS setSliderType:sliderType];
}

NSSliderType NSSliderCell_sliderType (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_sliderType");
	return [THIS sliderType];
}

void NSSliderCell_setNumberOfTickMarks (NSSliderCell* THIS, int count) {
	NSLog(@"NSSliderCell_setNumberOfTickMarks");
	[THIS setNumberOfTickMarks:count];
}

int NSSliderCell_numberOfTickMarks (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_numberOfTickMarks");
	return [THIS numberOfTickMarks];
}

void NSSliderCell_setTickMarkPosition (NSSliderCell* THIS, NSTickMarkPosition position) {
	NSLog(@"NSSliderCell_setTickMarkPosition");
	[THIS setTickMarkPosition:position];
}

NSTickMarkPosition NSSliderCell_tickMarkPosition (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_tickMarkPosition");
	return [THIS tickMarkPosition];
}

void NSSliderCell_setAllowsTickMarkValuesOnly (NSSliderCell* THIS, BOOL yorn) {
	NSLog(@"NSSliderCell_setAllowsTickMarkValuesOnly");
	[THIS setAllowsTickMarkValuesOnly:yorn];
}

BOOL NSSliderCell_allowsTickMarkValuesOnly (NSSliderCell* THIS) {
	NSLog(@"NSSliderCell_allowsTickMarkValuesOnly");
	return [THIS allowsTickMarkValuesOnly];
}

double NSSliderCell_tickMarkValueAtIndex (NSSliderCell* THIS, int index) {
	NSLog(@"NSSliderCell_tickMarkValueAtIndex");
	return [THIS tickMarkValueAtIndex:index];
}

NSRect NSSliderCell_rectOfTickMarkAtIndex (NSSliderCell* THIS, int index) {
	NSLog(@"NSSliderCell_rectOfTickMarkAtIndex");
	return [THIS rectOfTickMarkAtIndex:index];
}

int NSSliderCell_indexOfTickMarkAtPoint (NSSliderCell* THIS, NSPoint point) {
	NSLog(@"NSSliderCell_indexOfTickMarkAtPoint");
	return [THIS indexOfTickMarkAtPoint:point];
}

double NSSliderCell_closestTickMarkValueToValue (NSSliderCell* THIS, double value) {
	NSLog(@"NSSliderCell_closestTickMarkValueToValue");
	return [THIS closestTickMarkValueToValue:value];
}

NSSliderCell * NSSliderCell_alloc(){
	NSLog(@"NSSliderCell_alloc()");
	return [ NSSliderCell alloc ];
}