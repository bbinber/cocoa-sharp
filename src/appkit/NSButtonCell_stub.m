/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <AppKit/NSActionCell.h>

NSString * NSButtonCell_title (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_title");
	return [THIS title];
}

void NSButtonCell_setTitle (NSButtonCell* THIS, NSString * aString) {
	NSLog(@"NSButtonCell_setTitle");
	[THIS setTitle:aString];
}

NSString * NSButtonCell_alternateTitle (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_alternateTitle");
	return [THIS alternateTitle];
}

void NSButtonCell_setAlternateTitle (NSButtonCell* THIS, NSString * aString) {
	NSLog(@"NSButtonCell_setAlternateTitle");
	[THIS setAlternateTitle:aString];
}

NSImage * NSButtonCell_alternateImage (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_alternateImage");
	return [THIS alternateImage];
}

void NSButtonCell_setAlternateImage (NSButtonCell* THIS, NSImage * image) {
	NSLog(@"NSButtonCell_setAlternateImage");
	[THIS setAlternateImage:image];
}

NSCellImagePosition NSButtonCell_imagePosition (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_imagePosition");
	return [THIS imagePosition];
}

void NSButtonCell_setImagePosition (NSButtonCell* THIS, NSCellImagePosition aPosition) {
	NSLog(@"NSButtonCell_setImagePosition");
	[THIS setImagePosition:aPosition];
}

int NSButtonCell_highlightsBy (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_highlightsBy");
	return [THIS highlightsBy];
}

void NSButtonCell_setHighlightsBy (NSButtonCell* THIS, int aType) {
	NSLog(@"NSButtonCell_setHighlightsBy");
	[THIS setHighlightsBy:aType];
}

int NSButtonCell_showsStateBy (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_showsStateBy");
	return [THIS showsStateBy];
}

void NSButtonCell_setShowsStateBy (NSButtonCell* THIS, int aType) {
	NSLog(@"NSButtonCell_setShowsStateBy");
	[THIS setShowsStateBy:aType];
}

void NSButtonCell_setButtonType (NSButtonCell* THIS, NSButtonType aType) {
	NSLog(@"NSButtonCell_setButtonType");
	[THIS setButtonType:aType];
}

BOOL NSButtonCell_isOpaque (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_isOpaque");
	return [THIS isOpaque];
}

void NSButtonCell_setFont (NSButtonCell* THIS, NSFont * fontObj) {
	NSLog(@"NSButtonCell_setFont");
	[THIS setFont:fontObj];
}

BOOL NSButtonCell_isTransparent (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_isTransparent");
	return [THIS isTransparent];
}

void NSButtonCell_setTransparent (NSButtonCell* THIS, BOOL flag) {
	NSLog(@"NSButtonCell_setTransparent");
	[THIS setTransparent:flag];
}

void NSButtonCell_setPeriodicDelay_interval (NSButtonCell* THIS, float delay, float interval) {
	NSLog(@"NSButtonCell_setPeriodicDelay_interval");
	[THIS setPeriodicDelay:delay interval:interval];
}

void NSButtonCell_getPeriodicDelay_interval (NSButtonCell* THIS, float * delay, float * interval) {
	NSLog(@"NSButtonCell_getPeriodicDelay_interval");
	[THIS getPeriodicDelay:delay interval:interval];
}

NSString * NSButtonCell_keyEquivalent (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_keyEquivalent");
	return [THIS keyEquivalent];
}

void NSButtonCell_setKeyEquivalent (NSButtonCell* THIS, NSString * aKeyEquivalent) {
	NSLog(@"NSButtonCell_setKeyEquivalent");
	[THIS setKeyEquivalent:aKeyEquivalent];
}

unsigned int NSButtonCell_keyEquivalentModifierMask (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_keyEquivalentModifierMask");
	return [THIS keyEquivalentModifierMask];
}

void NSButtonCell_setKeyEquivalentModifierMask (NSButtonCell* THIS, unsigned int mask) {
	NSLog(@"NSButtonCell_setKeyEquivalentModifierMask");
	[THIS setKeyEquivalentModifierMask:mask];
}

NSFont * NSButtonCell_keyEquivalentFont (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_keyEquivalentFont");
	return [THIS keyEquivalentFont];
}

void NSButtonCell_setKeyEquivalentFont (NSButtonCell* THIS, NSFont * fontObj) {
	NSLog(@"NSButtonCell_setKeyEquivalentFont");
	[THIS setKeyEquivalentFont:fontObj];
}

void NSButtonCell_setKeyEquivalentFont_size (NSButtonCell* THIS, NSString * fontName, float fontSize) {
	NSLog(@"NSButtonCell_setKeyEquivalentFont_size");
	[THIS setKeyEquivalentFont:fontName size:fontSize];
}

void NSButtonCell_performClick (NSButtonCell* THIS, id sender) {
	NSLog(@"NSButtonCell_performClick");
	[THIS performClick:sender];
}

void NSButtonCell_setTitleWithMnemonic (NSButtonCell* THIS, NSString * stringWithAmpersand) {
	NSLog(@"NSButtonCell_setTitleWithMnemonic");
	[THIS setTitleWithMnemonic:stringWithAmpersand];
}

void NSButtonCell_setAlternateTitleWithMnemonic (NSButtonCell* THIS, NSString * stringWithAmpersand) {
	NSLog(@"NSButtonCell_setAlternateTitleWithMnemonic");
	[THIS setAlternateTitleWithMnemonic:stringWithAmpersand];
}

void NSButtonCell_setAlternateMnemonicLocation (NSButtonCell* THIS, unsigned location) {
	NSLog(@"NSButtonCell_setAlternateMnemonicLocation");
	[THIS setAlternateMnemonicLocation:location];
}

unsigned NSButtonCell_alternateMnemonicLocation (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_alternateMnemonicLocation");
	return [THIS alternateMnemonicLocation];
}

NSString * NSButtonCell_alternateMnemonic (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_alternateMnemonic");
	return [THIS alternateMnemonic];
}

NSGradientType NSButtonCell_gradientType (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_gradientType");
	return [THIS gradientType];
}

void NSButtonCell_setGradientType (NSButtonCell* THIS, NSGradientType type) {
	NSLog(@"NSButtonCell_setGradientType");
	[THIS setGradientType:type];
}

void NSButtonCell_setImageDimsWhenDisabled (NSButtonCell* THIS, BOOL flag) {
	NSLog(@"NSButtonCell_setImageDimsWhenDisabled");
	[THIS setImageDimsWhenDisabled:flag];
}

BOOL NSButtonCell_imageDimsWhenDisabled (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_imageDimsWhenDisabled");
	return [THIS imageDimsWhenDisabled];
}

void NSButtonCell_setShowsBorderOnlyWhileMouseInside (NSButtonCell* THIS, BOOL show) {
	NSLog(@"NSButtonCell_setShowsBorderOnlyWhileMouseInside");
	[THIS setShowsBorderOnlyWhileMouseInside:show];
}

BOOL NSButtonCell_showsBorderOnlyWhileMouseInside (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_showsBorderOnlyWhileMouseInside");
	return [THIS showsBorderOnlyWhileMouseInside];
}

void NSButtonCell_mouseEntered (NSButtonCell* THIS, NSEvent* event) {
	NSLog(@"NSButtonCell_mouseEntered");
	[THIS mouseEntered:event];
}

void NSButtonCell_mouseExited (NSButtonCell* THIS, NSEvent* event) {
	NSLog(@"NSButtonCell_mouseExited");
	[THIS mouseExited:event];
}

NSAttributedString * NSButtonCell_attributedTitle (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_attributedTitle");
	return [THIS attributedTitle];
}

void NSButtonCell_setAttributedTitle (NSButtonCell* THIS, NSAttributedString * obj) {
	NSLog(@"NSButtonCell_setAttributedTitle");
	[THIS setAttributedTitle:obj];
}

NSAttributedString * NSButtonCell_attributedAlternateTitle (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_attributedAlternateTitle");
	return [THIS attributedAlternateTitle];
}

void NSButtonCell_setAttributedAlternateTitle (NSButtonCell* THIS, NSAttributedString * obj) {
	NSLog(@"NSButtonCell_setAttributedAlternateTitle");
	[THIS setAttributedAlternateTitle:obj];
}

void NSButtonCell_setBezelStyle (NSButtonCell* THIS, NSBezelStyle bezelStyle) {
	NSLog(@"NSButtonCell_setBezelStyle");
	[THIS setBezelStyle:bezelStyle];
}

NSBezelStyle NSButtonCell_bezelStyle (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_bezelStyle");
	return [THIS bezelStyle];
}

void NSButtonCell_setSound (NSButtonCell* THIS, NSSound * aSound) {
	NSLog(@"NSButtonCell_setSound");
	[THIS setSound:aSound];
}

NSSound * NSButtonCell_sound (NSButtonCell* THIS) {
	NSLog(@"NSButtonCell_sound");
	return [THIS sound];
}

NSButtonCell * NSButtonCell_alloc(){
	NSLog(@"NSButtonCell_alloc()");
	return [ NSButtonCell alloc ];
}