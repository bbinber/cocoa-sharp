/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

void NSFontManager$_setFontPanelFactory (Class factoryId) {
	NSLog(@"NSFontManager$_setFontPanelFactory");
	[NSFontManager setFontPanelFactory:factoryId];
}

void NSFontManager$_setFontManagerFactory (Class factoryId) {
	NSLog(@"NSFontManager$_setFontManagerFactory");
	[NSFontManager setFontManagerFactory:factoryId];
}

NSFontManager * NSFontManager$_sharedFontManager () {
	NSLog(@"NSFontManager$_sharedFontManager");
	return [NSFontManager sharedFontManager];
}

BOOL NSFontManager_isMultiple (NSFontManager* THIS) {
	NSLog(@"NSFontManager_isMultiple");
	return [THIS isMultiple];
}

NSFont * NSFontManager_selectedFont (NSFontManager* THIS) {
	NSLog(@"NSFontManager_selectedFont");
	return [THIS selectedFont];
}

void NSFontManager_setSelectedFont_isMultiple (NSFontManager* THIS, NSFont * fontObj, BOOL flag) {
	NSLog(@"NSFontManager_setSelectedFont_isMultiple");
	[THIS setSelectedFont:fontObj isMultiple:flag];
}

void NSFontManager_setFontMenu (NSFontManager* THIS, NSMenu * newMenu) {
	NSLog(@"NSFontManager_setFontMenu");
	[THIS setFontMenu:newMenu];
}

NSMenu * NSFontManager_fontMenu (NSFontManager* THIS, BOOL create) {
	NSLog(@"NSFontManager_fontMenu");
	return [THIS fontMenu:create];
}

NSFontPanel * NSFontManager_fontPanel (NSFontManager* THIS, BOOL create) {
	NSLog(@"NSFontManager_fontPanel");
	return [THIS fontPanel:create];
}

NSFont * NSFontManager_fontWithFamily_traits_weight_size (NSFontManager* THIS, NSString * family, NSFontTraitMask traits, int weight, float size) {
	NSLog(@"NSFontManager_fontWithFamily_traits_weight_size");
	return [THIS fontWithFamily:family traits:traits weight:weight size:size];
}

NSFontTraitMask NSFontManager_traitsOfFont (NSFontManager* THIS, NSFont * fontObj) {
	NSLog(@"NSFontManager_traitsOfFont");
	return [THIS traitsOfFont:fontObj];
}

int NSFontManager_weightOfFont (NSFontManager* THIS, NSFont * fontObj) {
	NSLog(@"NSFontManager_weightOfFont");
	return [THIS weightOfFont:fontObj];
}

NSArray * NSFontManager_availableFonts (NSFontManager* THIS) {
	NSLog(@"NSFontManager_availableFonts");
	return [THIS availableFonts];
}

NSArray * NSFontManager_availableFontFamilies (NSFontManager* THIS) {
	NSLog(@"NSFontManager_availableFontFamilies");
	return [THIS availableFontFamilies];
}

NSArray * NSFontManager_availableMembersOfFontFamily (NSFontManager* THIS, NSString * fam) {
	NSLog(@"NSFontManager_availableMembersOfFontFamily");
	return [THIS availableMembersOfFontFamily:fam];
}

NSFont * NSFontManager_convertFont (NSFontManager* THIS, NSFont * fontObj) {
	NSLog(@"NSFontManager_convertFont");
	return [THIS convertFont:fontObj];
}

NSFont * NSFontManager_convertFont_toSize (NSFontManager* THIS, NSFont * fontObj, float size) {
	NSLog(@"NSFontManager_convertFont_toSize");
	return [THIS convertFont:fontObj toSize:size];
}

NSFont * NSFontManager_convertFont_toFace (NSFontManager* THIS, NSFont * fontObj, NSString * typeface) {
	NSLog(@"NSFontManager_convertFont_toFace");
	return [THIS convertFont:fontObj toFace:typeface];
}

NSFont * NSFontManager_convertFont_toFamily (NSFontManager* THIS, NSFont * fontObj, NSString * family) {
	NSLog(@"NSFontManager_convertFont_toFamily");
	return [THIS convertFont:fontObj toFamily:family];
}

NSFont * NSFontManager_convertFont_toHaveTrait (NSFontManager* THIS, NSFont * fontObj, NSFontTraitMask trait) {
	NSLog(@"NSFontManager_convertFont_toHaveTrait");
	return [THIS convertFont:fontObj toHaveTrait:trait];
}

NSFont * NSFontManager_convertFont_toNotHaveTrait (NSFontManager* THIS, NSFont * fontObj, NSFontTraitMask trait) {
	NSLog(@"NSFontManager_convertFont_toNotHaveTrait");
	return [THIS convertFont:fontObj toNotHaveTrait:trait];
}

NSFont * NSFontManager_convertWeight_ofFont (NSFontManager* THIS, BOOL upFlag, NSFont * fontObj) {
	NSLog(@"NSFontManager_convertWeight_ofFont");
	return [THIS convertWeight:upFlag ofFont:fontObj];
}

BOOL NSFontManager_isEnabled (NSFontManager* THIS) {
	NSLog(@"NSFontManager_isEnabled");
	return [THIS isEnabled];
}

void NSFontManager_setEnabled (NSFontManager* THIS, BOOL flag) {
	NSLog(@"NSFontManager_setEnabled");
	[THIS setEnabled:flag];
}

SEL NSFontManager_action (NSFontManager* THIS) {
	NSLog(@"NSFontManager_action");
	return [THIS action];
}

void NSFontManager_setAction (NSFontManager* THIS, SEL aSelector) {
	NSLog(@"NSFontManager_setAction");
	[THIS setAction:aSelector];
}

BOOL NSFontManager_sendAction (NSFontManager* THIS) {
	NSLog(@"NSFontManager_sendAction");
	return [THIS sendAction];
}

void NSFontManager_setDelegate (NSFontManager* THIS, id anObject) {
	NSLog(@"NSFontManager_setDelegate");
	[THIS setDelegate:anObject];
}

NSFontManager * NSFontManager_delegate (NSFontManager* THIS) {
	NSLog(@"NSFontManager_delegate");
	return [THIS delegate];
}

NSString * NSFontManager_localizedNameForFamily_face (NSFontManager* THIS, NSString * family, NSString * faceKey) {
	NSLog(@"NSFontManager_localizedNameForFamily_face");
	return [THIS localizedNameForFamily:family face:faceKey];
}

void NSFontManager_setSelectedAttributes_isMultiple (NSFontManager* THIS, NSDictionary * attributes, BOOL flag) {
	NSLog(@"NSFontManager_setSelectedAttributes_isMultiple");
	[THIS setSelectedAttributes:attributes isMultiple:flag];
}

NSDictionary * NSFontManager_convertAttributes (NSFontManager* THIS, NSDictionary * attributes) {
	NSLog(@"NSFontManager_convertAttributes");
	return [THIS convertAttributes:attributes];
}

NSArray * NSFontManager_availableFontNamesMatchingFontDescriptor (NSFontManager* THIS, NSFontDescriptor * descriptor) {
	NSLog(@"NSFontManager_availableFontNamesMatchingFontDescriptor");
	return [THIS availableFontNamesMatchingFontDescriptor:descriptor];
}

NSArray * NSFontManager_collectionNames (NSFontManager* THIS) {
	NSLog(@"NSFontManager_collectionNames");
	return [THIS collectionNames];
}

NSArray * NSFontManager_fontDescriptorsInCollection (NSFontManager* THIS, NSString * collectionNames) {
	NSLog(@"NSFontManager_fontDescriptorsInCollection");
	return [THIS fontDescriptorsInCollection:collectionNames];
}

BOOL NSFontManager_addCollection_options (NSFontManager* THIS, NSString * collectionName, int collectionOptions) {
	NSLog(@"NSFontManager_addCollection_options");
	return [THIS addCollection:collectionName options:collectionOptions];
}

BOOL NSFontManager_removeCollection (NSFontManager* THIS, NSString * collectionName) {
	NSLog(@"NSFontManager_removeCollection");
	return [THIS removeCollection:collectionName];
}

void NSFontManager_addFontDescriptors_toCollection (NSFontManager* THIS, NSArray * descriptors, NSString * collectionName) {
	NSLog(@"NSFontManager_addFontDescriptors_toCollection");
	[THIS addFontDescriptors:descriptors toCollection:collectionName];
}

void NSFontManager_removeFontDescriptor_fromCollection (NSFontManager* THIS, NSFontDescriptor * descriptor, NSString * collection) {
	NSLog(@"NSFontManager_removeFontDescriptor_fromCollection");
	[THIS removeFontDescriptor:descriptor fromCollection:collection];
}

BOOL NSFontManager_fontNamed_hasTraits (NSFontManager* THIS, NSString * fName, NSFontTraitMask someTraits) {
	NSLog(@"NSFontManager_fontNamed_hasTraits");
	return [THIS fontNamed:fName hasTraits:someTraits];
}

NSArray * NSFontManager_availableFontNamesWithTraits (NSFontManager* THIS, NSFontTraitMask someTraits) {
	NSLog(@"NSFontManager_availableFontNamesWithTraits");
	return [THIS availableFontNamesWithTraits:someTraits];
}

void NSFontManager_addFontTrait (NSFontManager* THIS, id sender) {
	NSLog(@"NSFontManager_addFontTrait");
	[THIS addFontTrait:sender];
}

void NSFontManager_removeFontTrait (NSFontManager* THIS, id sender) {
	NSLog(@"NSFontManager_removeFontTrait");
	[THIS removeFontTrait:sender];
}

void NSFontManager_modifyFontViaPanel (NSFontManager* THIS, id sender) {
	NSLog(@"NSFontManager_modifyFontViaPanel");
	[THIS modifyFontViaPanel:sender];
}

void NSFontManager_modifyFont (NSFontManager* THIS, id sender) {
	NSLog(@"NSFontManager_modifyFont");
	[THIS modifyFont:sender];
}

void NSFontManager_orderFrontFontPanel (NSFontManager* THIS, id sender) {
	NSLog(@"NSFontManager_orderFrontFontPanel");
	[THIS orderFrontFontPanel:sender];
}

void NSFontManager_orderFrontStylesPanel (NSFontManager* THIS, id sender) {
	NSLog(@"NSFontManager_orderFrontStylesPanel");
	[THIS orderFrontStylesPanel:sender];
}

BOOL NSFontManager_fontManager_willIncludeFont (NSFontManager* THIS, id sender, NSString * fontName) {
	NSLog(@"NSFontManager_fontManager_willIncludeFont");
	return [THIS fontManager:sender willIncludeFont:fontName];
}

void NSFontManager_changeFont (NSFontManager* THIS, id sender) {
	NSLog(@"NSFontManager_changeFont");
	[THIS changeFont:sender];
}

NSFontManager * NSFontManager_alloc(){
	NSLog(@"NSFontManager_alloc()");
	return [ NSFontManager alloc ];
}