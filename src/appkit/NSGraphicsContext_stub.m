/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <AppKit/AppKitDefines.h>
#include <Foundation/NSGeometry.h>
#include <Foundation/NSObject.h>

NSGraphicsContext * NSGraphicsContext$_graphicsContextWithAttributes (NSDictionary * attributes) {
	NSLog(@"NSGraphicsContext$_graphicsContextWithAttributes");
	return [NSGraphicsContext graphicsContextWithAttributes:attributes];
}

NSGraphicsContext * NSGraphicsContext$_graphicsContextWithWindow (NSWindow * window) {
	NSLog(@"NSGraphicsContext$_graphicsContextWithWindow");
	return [NSGraphicsContext graphicsContextWithWindow:window];
}

NSGraphicsContext * NSGraphicsContext$_currentContext () {
	NSLog(@"NSGraphicsContext$_currentContext");
	return [NSGraphicsContext currentContext];
}

void NSGraphicsContext$_setCurrentContext (NSGraphicsContext * context) {
	NSLog(@"NSGraphicsContext$_setCurrentContext");
	[NSGraphicsContext setCurrentContext:context];
}

BOOL NSGraphicsContext$_currentContextDrawingToScreen () {
	NSLog(@"NSGraphicsContext$_currentContextDrawingToScreen");
	return [NSGraphicsContext currentContextDrawingToScreen];
}

void NSGraphicsContext$_saveGraphicsState () {
	NSLog(@"NSGraphicsContext$_saveGraphicsState");
	[NSGraphicsContext saveGraphicsState];
}

void NSGraphicsContext$_restoreGraphicsState () {
	NSLog(@"NSGraphicsContext$_restoreGraphicsState");
	[NSGraphicsContext restoreGraphicsState];
}

void NSGraphicsContext$_setGraphicsState (int gState) {
	NSLog(@"NSGraphicsContext$_setGraphicsState");
	[NSGraphicsContext setGraphicsState:gState];
}

NSDictionary * NSGraphicsContext_attributes (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_attributes");
	return [THIS attributes];
}

BOOL NSGraphicsContext_isDrawingToScreen (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_isDrawingToScreen");
	return [THIS isDrawingToScreen];
}

void NSGraphicsContext_saveGraphicsState (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_saveGraphicsState");
	[THIS saveGraphicsState];
}

void NSGraphicsContext_restoreGraphicsState (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_restoreGraphicsState");
	[THIS restoreGraphicsState];
}

void NSGraphicsContext_flushGraphics (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_flushGraphics");
	[THIS flushGraphics];
}

void * NSGraphicsContext_focusStack (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_focusStack");
	[THIS focusStack];
}

void NSGraphicsContext_setFocusStack (NSGraphicsContext* THIS, void * stack) {
	NSLog(@"NSGraphicsContext_setFocusStack");
	[THIS setFocusStack:stack];
}

void * NSGraphicsContext_graphicsPort (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_graphicsPort");
	[THIS graphicsPort];
}

void NSGraphicsContext_setShouldAntialias (NSGraphicsContext* THIS, BOOL antialias) {
	NSLog(@"NSGraphicsContext_setShouldAntialias");
	[THIS setShouldAntialias:antialias];
}

BOOL NSGraphicsContext_shouldAntialias (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_shouldAntialias");
	return [THIS shouldAntialias];
}

void NSGraphicsContext_setImageInterpolation (NSGraphicsContext* THIS, NSImageInterpolation interpolation) {
	NSLog(@"NSGraphicsContext_setImageInterpolation");
	[THIS setImageInterpolation:interpolation];
}

NSImageInterpolation NSGraphicsContext_imageInterpolation (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_imageInterpolation");
	return [THIS imageInterpolation];
}

void NSGraphicsContext_setPatternPhase (NSGraphicsContext* THIS, NSPoint phase) {
	NSLog(@"NSGraphicsContext_setPatternPhase");
	[THIS setPatternPhase:phase];
}

NSPoint NSGraphicsContext_patternPhase (NSGraphicsContext* THIS) {
	NSLog(@"NSGraphicsContext_patternPhase");
	return [THIS patternPhase];
}

NSGraphicsContext * NSGraphicsContext_alloc(){
	NSLog(@"NSGraphicsContext_alloc()");
	return [ NSGraphicsContext alloc ];
}