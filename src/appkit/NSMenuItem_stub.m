/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>
#include <AppKit/AppKitDefines.h>
#include <AppKit/NSUserInterfaceValidation.h>

void NSMenuItem$_setUsesUserKeyEquivalents (BOOL flag) {
	NSLog(@"NSMenuItem$_setUsesUserKeyEquivalents");
	[NSMenuItem setUsesUserKeyEquivalents:flag];
}

BOOL NSMenuItem$_usesUserKeyEquivalents () {
	NSLog(@"NSMenuItem$_usesUserKeyEquivalents");
	return [NSMenuItem usesUserKeyEquivalents];
}

/* UNSUPPORTED: 
+ (id <NSMenuItem>)separatorItem;
 */



NSMenuItem * NSMenuItem_initWithTitle_action_keyEquivalent (NSMenuItem* THIS, NSString * aString, SEL aSelector, NSString * charCode) {
	NSLog(@"NSMenuItem_initWithTitle_action_keyEquivalent");
	return [THIS initWithTitle:aString action:aSelector keyEquivalent:charCode];
}

void NSMenuItem_setMenu (NSMenuItem* THIS, NSMenu * menu) {
	NSLog(@"NSMenuItem_setMenu");
	[THIS setMenu:menu];
}

NSMenu * NSMenuItem_menu (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_menu");
	return [THIS menu];
}

BOOL NSMenuItem_hasSubmenu (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_hasSubmenu");
	return [THIS hasSubmenu];
}

void NSMenuItem_setSubmenu (NSMenuItem* THIS, NSMenu * submenu) {
	NSLog(@"NSMenuItem_setSubmenu");
	[THIS setSubmenu:submenu];
}

NSMenu * NSMenuItem_submenu (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_submenu");
	return [THIS submenu];
}

void NSMenuItem_setTitle (NSMenuItem* THIS, NSString * aString) {
	NSLog(@"NSMenuItem_setTitle");
	[THIS setTitle:aString];
}

NSString * NSMenuItem_title (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_title");
	return [THIS title];
}

void NSMenuItem_setAttributedTitle (NSMenuItem* THIS, NSAttributedString* string) {
	NSLog(@"NSMenuItem_setAttributedTitle");
	[THIS setAttributedTitle:string];
}

NSAttributedString* NSMenuItem_attributedTitle (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_attributedTitle");
	return [THIS attributedTitle];
}

BOOL NSMenuItem_isSeparatorItem (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_isSeparatorItem");
	return [THIS isSeparatorItem];
}

void NSMenuItem_setKeyEquivalent (NSMenuItem* THIS, NSString * aKeyEquivalent) {
	NSLog(@"NSMenuItem_setKeyEquivalent");
	[THIS setKeyEquivalent:aKeyEquivalent];
}

NSString * NSMenuItem_keyEquivalent (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_keyEquivalent");
	return [THIS keyEquivalent];
}

void NSMenuItem_setKeyEquivalentModifierMask (NSMenuItem* THIS, unsigned int mask) {
	NSLog(@"NSMenuItem_setKeyEquivalentModifierMask");
	[THIS setKeyEquivalentModifierMask:mask];
}

unsigned int NSMenuItem_keyEquivalentModifierMask (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_keyEquivalentModifierMask");
	return [THIS keyEquivalentModifierMask];
}

NSString * NSMenuItem_userKeyEquivalent (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_userKeyEquivalent");
	return [THIS userKeyEquivalent];
}

unsigned int NSMenuItem_userKeyEquivalentModifierMask (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_userKeyEquivalentModifierMask");
	return [THIS userKeyEquivalentModifierMask];
}

void NSMenuItem_setMnemonicLocation (NSMenuItem* THIS, unsigned location) {
	NSLog(@"NSMenuItem_setMnemonicLocation");
	[THIS setMnemonicLocation:location];
}

unsigned NSMenuItem_mnemonicLocation (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_mnemonicLocation");
	return [THIS mnemonicLocation];
}

NSString * NSMenuItem_mnemonic (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_mnemonic");
	return [THIS mnemonic];
}

void NSMenuItem_setTitleWithMnemonic (NSMenuItem* THIS, NSString * stringWithAmpersand) {
	NSLog(@"NSMenuItem_setTitleWithMnemonic");
	[THIS setTitleWithMnemonic:stringWithAmpersand];
}

void NSMenuItem_setImage (NSMenuItem* THIS, NSImage * menuImage) {
	NSLog(@"NSMenuItem_setImage");
	[THIS setImage:menuImage];
}

NSImage * NSMenuItem_image (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_image");
	return [THIS image];
}

void NSMenuItem_setState (NSMenuItem* THIS, int state) {
	NSLog(@"NSMenuItem_setState");
	[THIS setState:state];
}

int NSMenuItem_state (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_state");
	return [THIS state];
}

void NSMenuItem_setOnStateImage (NSMenuItem* THIS, NSImage * image) {
	NSLog(@"NSMenuItem_setOnStateImage");
	[THIS setOnStateImage:image];
}

NSImage * NSMenuItem_onStateImage (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_onStateImage");
	return [THIS onStateImage];
}

void NSMenuItem_setOffStateImage (NSMenuItem* THIS, NSImage * image) {
	NSLog(@"NSMenuItem_setOffStateImage");
	[THIS setOffStateImage:image];
}

NSImage * NSMenuItem_offStateImage (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_offStateImage");
	return [THIS offStateImage];
}

void NSMenuItem_setMixedStateImage (NSMenuItem* THIS, NSImage * image) {
	NSLog(@"NSMenuItem_setMixedStateImage");
	[THIS setMixedStateImage:image];
}

NSImage * NSMenuItem_mixedStateImage (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_mixedStateImage");
	return [THIS mixedStateImage];
}

void NSMenuItem_setEnabled (NSMenuItem* THIS, BOOL flag) {
	NSLog(@"NSMenuItem_setEnabled");
	[THIS setEnabled:flag];
}

BOOL NSMenuItem_isEnabled (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_isEnabled");
	return [THIS isEnabled];
}

void NSMenuItem_setAlternate (NSMenuItem* THIS, BOOL isAlternate) {
	NSLog(@"NSMenuItem_setAlternate");
	[THIS setAlternate:isAlternate];
}

BOOL NSMenuItem_isAlternate (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_isAlternate");
	return [THIS isAlternate];
}

void NSMenuItem_setIndentationLevel (NSMenuItem* THIS, int indentationLevel) {
	NSLog(@"NSMenuItem_setIndentationLevel");
	[THIS setIndentationLevel:indentationLevel];
}

int NSMenuItem_indentationLevel (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_indentationLevel");
	return [THIS indentationLevel];
}

void NSMenuItem_setTarget (NSMenuItem* THIS, id anObject) {
	NSLog(@"NSMenuItem_setTarget");
	[THIS setTarget:anObject];
}

NSMenuItem * NSMenuItem_target (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_target");
	return [THIS target];
}

void NSMenuItem_setAction (NSMenuItem* THIS, SEL aSelector) {
	NSLog(@"NSMenuItem_setAction");
	[THIS setAction:aSelector];
}

SEL NSMenuItem_action (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_action");
	return [THIS action];
}

void NSMenuItem_setTag (NSMenuItem* THIS, int anInt) {
	NSLog(@"NSMenuItem_setTag");
	[THIS setTag:anInt];
}

int NSMenuItem_tag (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_tag");
	return [THIS tag];
}

void NSMenuItem_setRepresentedObject (NSMenuItem* THIS, id anObject) {
	NSLog(@"NSMenuItem_setRepresentedObject");
	[THIS setRepresentedObject:anObject];
}

NSMenuItem * NSMenuItem_representedObject (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_representedObject");
	return [THIS representedObject];
}

void NSMenuItem_setToolTip (NSMenuItem* THIS, NSString* toolTip) {
	NSLog(@"NSMenuItem_setToolTip");
	[THIS setToolTip:toolTip];
}

NSString* NSMenuItem_toolTip (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_toolTip");
	return [THIS toolTip];
}

void NSMenuItem$_setUsesUserKeyEquivalents (BOOL flag) {
	NSLog(@"NSMenuItem$_setUsesUserKeyEquivalents");
	[NSMenuItem setUsesUserKeyEquivalents:flag];
}

BOOL NSMenuItem$_usesUserKeyEquivalents () {
	NSLog(@"NSMenuItem$_usesUserKeyEquivalents");
	return [NSMenuItem usesUserKeyEquivalents];
}

/* UNSUPPORTED: 
+ (id <NSMenuItem>)separatorItem;
 */



NSMenuItem * NSMenuItem_initWithTitle_action_keyEquivalent (NSMenuItem* THIS, NSString * aString, SEL aSelector, NSString * charCode) {
	NSLog(@"NSMenuItem_initWithTitle_action_keyEquivalent");
	return [THIS initWithTitle:aString action:aSelector keyEquivalent:charCode];
}

void NSMenuItem_setMenu (NSMenuItem* THIS, NSMenu * menu) {
	NSLog(@"NSMenuItem_setMenu");
	[THIS setMenu:menu];
}

NSMenu * NSMenuItem_menu (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_menu");
	return [THIS menu];
}

BOOL NSMenuItem_hasSubmenu (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_hasSubmenu");
	return [THIS hasSubmenu];
}

void NSMenuItem_setSubmenu (NSMenuItem* THIS, NSMenu * submenu) {
	NSLog(@"NSMenuItem_setSubmenu");
	[THIS setSubmenu:submenu];
}

NSMenu * NSMenuItem_submenu (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_submenu");
	return [THIS submenu];
}

void NSMenuItem_setTitle (NSMenuItem* THIS, NSString * aString) {
	NSLog(@"NSMenuItem_setTitle");
	[THIS setTitle:aString];
}

NSString * NSMenuItem_title (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_title");
	return [THIS title];
}

void NSMenuItem_setAttributedTitle (NSMenuItem* THIS, NSAttributedString* string) {
	NSLog(@"NSMenuItem_setAttributedTitle");
	[THIS setAttributedTitle:string];
}

NSAttributedString* NSMenuItem_attributedTitle (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_attributedTitle");
	return [THIS attributedTitle];
}

BOOL NSMenuItem_isSeparatorItem (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_isSeparatorItem");
	return [THIS isSeparatorItem];
}

void NSMenuItem_setKeyEquivalent (NSMenuItem* THIS, NSString * aKeyEquivalent) {
	NSLog(@"NSMenuItem_setKeyEquivalent");
	[THIS setKeyEquivalent:aKeyEquivalent];
}

NSString * NSMenuItem_keyEquivalent (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_keyEquivalent");
	return [THIS keyEquivalent];
}

void NSMenuItem_setKeyEquivalentModifierMask (NSMenuItem* THIS, unsigned int mask) {
	NSLog(@"NSMenuItem_setKeyEquivalentModifierMask");
	[THIS setKeyEquivalentModifierMask:mask];
}

unsigned int NSMenuItem_keyEquivalentModifierMask (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_keyEquivalentModifierMask");
	return [THIS keyEquivalentModifierMask];
}

NSString * NSMenuItem_userKeyEquivalent (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_userKeyEquivalent");
	return [THIS userKeyEquivalent];
}

void NSMenuItem_setMnemonicLocation (NSMenuItem* THIS, unsigned location) {
	NSLog(@"NSMenuItem_setMnemonicLocation");
	[THIS setMnemonicLocation:location];
}

unsigned NSMenuItem_mnemonicLocation (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_mnemonicLocation");
	return [THIS mnemonicLocation];
}

NSString * NSMenuItem_mnemonic (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_mnemonic");
	return [THIS mnemonic];
}

void NSMenuItem_setTitleWithMnemonic (NSMenuItem* THIS, NSString * stringWithAmpersand) {
	NSLog(@"NSMenuItem_setTitleWithMnemonic");
	[THIS setTitleWithMnemonic:stringWithAmpersand];
}

void NSMenuItem_setImage (NSMenuItem* THIS, NSImage * menuImage) {
	NSLog(@"NSMenuItem_setImage");
	[THIS setImage:menuImage];
}

NSImage * NSMenuItem_image (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_image");
	return [THIS image];
}

void NSMenuItem_setState (NSMenuItem* THIS, int state) {
	NSLog(@"NSMenuItem_setState");
	[THIS setState:state];
}

int NSMenuItem_state (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_state");
	return [THIS state];
}

void NSMenuItem_setOnStateImage (NSMenuItem* THIS, NSImage * image) {
	NSLog(@"NSMenuItem_setOnStateImage");
	[THIS setOnStateImage:image];
}

NSImage * NSMenuItem_onStateImage (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_onStateImage");
	return [THIS onStateImage];
}

void NSMenuItem_setOffStateImage (NSMenuItem* THIS, NSImage * image) {
	NSLog(@"NSMenuItem_setOffStateImage");
	[THIS setOffStateImage:image];
}

NSImage * NSMenuItem_offStateImage (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_offStateImage");
	return [THIS offStateImage];
}

void NSMenuItem_setMixedStateImage (NSMenuItem* THIS, NSImage * image) {
	NSLog(@"NSMenuItem_setMixedStateImage");
	[THIS setMixedStateImage:image];
}

NSImage * NSMenuItem_mixedStateImage (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_mixedStateImage");
	return [THIS mixedStateImage];
}

void NSMenuItem_setEnabled (NSMenuItem* THIS, BOOL flag) {
	NSLog(@"NSMenuItem_setEnabled");
	[THIS setEnabled:flag];
}

BOOL NSMenuItem_isEnabled (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_isEnabled");
	return [THIS isEnabled];
}

void NSMenuItem_setAlternate (NSMenuItem* THIS, BOOL isAlternate) {
	NSLog(@"NSMenuItem_setAlternate");
	[THIS setAlternate:isAlternate];
}

BOOL NSMenuItem_isAlternate (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_isAlternate");
	return [THIS isAlternate];
}

void NSMenuItem_setIndentationLevel (NSMenuItem* THIS, int indentationLevel) {
	NSLog(@"NSMenuItem_setIndentationLevel");
	[THIS setIndentationLevel:indentationLevel];
}

int NSMenuItem_indentationLevel (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_indentationLevel");
	return [THIS indentationLevel];
}

void NSMenuItem_setTarget (NSMenuItem* THIS, id anObject) {
	NSLog(@"NSMenuItem_setTarget");
	[THIS setTarget:anObject];
}

NSMenuItem * NSMenuItem_target (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_target");
	return [THIS target];
}

void NSMenuItem_setAction (NSMenuItem* THIS, SEL aSelector) {
	NSLog(@"NSMenuItem_setAction");
	[THIS setAction:aSelector];
}

SEL NSMenuItem_action (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_action");
	return [THIS action];
}

void NSMenuItem_setTag (NSMenuItem* THIS, int anInt) {
	NSLog(@"NSMenuItem_setTag");
	[THIS setTag:anInt];
}

int NSMenuItem_tag (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_tag");
	return [THIS tag];
}

void NSMenuItem_setRepresentedObject (NSMenuItem* THIS, id anObject) {
	NSLog(@"NSMenuItem_setRepresentedObject");
	[THIS setRepresentedObject:anObject];
}

NSMenuItem * NSMenuItem_representedObject (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_representedObject");
	return [THIS representedObject];
}

void NSMenuItem_setToolTip (NSMenuItem* THIS, NSString* toolTip) {
	NSLog(@"NSMenuItem_setToolTip");
	[THIS setToolTip:toolTip];
}

NSString* NSMenuItem_toolTip (NSMenuItem* THIS) {
	NSLog(@"NSMenuItem_toolTip");
	return [THIS toolTip];
}

NSMenuItem * NSMenuItem_alloc(){
	NSLog(@"NSMenuItem_alloc()");
	return [ NSMenuItem alloc ];
}