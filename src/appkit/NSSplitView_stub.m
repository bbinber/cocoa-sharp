/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <AppKit/NSView.h>

void NSSplitView_setDelegate (NSSplitView* THIS, NSSplitView * anObject) {
	NSLog(@"NSSplitView_setDelegate");
	[THIS setDelegate:anObject];
}

NSSplitView * NSSplitView_delegate (NSSplitView* THIS) {
	NSLog(@"NSSplitView_delegate");
	return [THIS delegate];
}
void NSSplitView_adjustSubviews (NSSplitView* THIS) {
	NSLog(@"NSSplitView_adjustSubviews");
	[THIS adjustSubviews];
}
float NSSplitView_dividerThickness (NSSplitView* THIS) {
	NSLog(@"NSSplitView_dividerThickness");
	return [THIS dividerThickness];
}
void NSSplitView_drawDividerInRect (NSSplitView* THIS, NSRect aRect) {
	NSLog(@"NSSplitView_drawDividerInRect");
	[THIS drawDividerInRect:aRect];
}

void NSSplitView_setVertical (NSSplitView* THIS, BOOL flag) {
	NSLog(@"NSSplitView_setVertical");
	[THIS setVertical:flag];
}

BOOL NSSplitView_isVertical (NSSplitView* THIS) {
	NSLog(@"NSSplitView_isVertical");
	return [THIS isVertical];
}
void NSSplitView_setIsPaneSplitter (NSSplitView* THIS, BOOL flag) {
	NSLog(@"NSSplitView_setIsPaneSplitter");
	[THIS setIsPaneSplitter:flag];
}

BOOL NSSplitView_isPaneSplitter (NSSplitView* THIS) {
	NSLog(@"NSSplitView_isPaneSplitter");
	return [THIS isPaneSplitter];
}
BOOL NSSplitView_isSubviewCollapsed (NSSplitView* THIS, NSView * subview) {
	NSLog(@"NSSplitView_isSubviewCollapsed");
	return [THIS isSubviewCollapsed:subview];
}

void NSSplitView_splitView_resizeSubviewsWithOldSize (NSSplitView* THIS, NSSplitView * sender, NSSize oldSize) {
	NSLog(@"NSSplitView_splitView_resizeSubviewsWithOldSize");
	[THIS splitView:sender resizeSubviewsWithOldSize:oldSize];
}

float NSSplitView_splitView_constrainMinCoordinate_ofSubviewAt (NSSplitView* THIS, NSSplitView * sender, float proposedCoord, int offset) {
	NSLog(@"NSSplitView_splitView_constrainMinCoordinate_ofSubviewAt");
	return [THIS splitView:sender constrainMinCoordinate:proposedCoord ofSubviewAt:offset];
}

float NSSplitView_splitView_constrainMaxCoordinate_ofSubviewAt (NSSplitView* THIS, NSSplitView * sender, float proposedCoord, int offset) {
	NSLog(@"NSSplitView_splitView_constrainMaxCoordinate_ofSubviewAt");
	return [THIS splitView:sender constrainMaxCoordinate:proposedCoord ofSubviewAt:offset];
}

void NSSplitView_splitViewWillResizeSubviews (NSSplitView* THIS, NSNotification * notification) {
	NSLog(@"NSSplitView_splitViewWillResizeSubviews");
	[THIS splitViewWillResizeSubviews:notification];
}

void NSSplitView_splitViewDidResizeSubviews (NSSplitView* THIS, NSNotification * notification) {
	NSLog(@"NSSplitView_splitViewDidResizeSubviews");
	[THIS splitViewDidResizeSubviews:notification];
}

BOOL NSSplitView_splitView_canCollapseSubview (NSSplitView* THIS, NSSplitView * sender, NSView * subview) {
	NSLog(@"NSSplitView_splitView_canCollapseSubview");
	return [THIS splitView:sender canCollapseSubview:subview];
}

float NSSplitView_splitView_constrainSplitPosition_ofSubviewAt (NSSplitView* THIS, NSSplitView * splitView, float proposedPosition, int index) {
	NSLog(@"NSSplitView_splitView_constrainSplitPosition_ofSubviewAt");
	return [THIS splitView:splitView constrainSplitPosition:proposedPosition ofSubviewAt:index];
}

NSSplitView * NSSplitView_alloc() {
	NSLog(@"NSSplitView_alloc()");
	return [NSSplitView alloc];
}
