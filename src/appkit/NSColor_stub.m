/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

#include <Foundation/NSGeometry.h>

#include <AppKit/AppKitDefines.h>

#include <AppKit/NSCell.h>

NSColor * NSColor_colorWithCalibratedWhite_alpha (NSColor* THIS, float white, float alpha) {
	NSLog(@"NSColor_colorWithCalibratedWhite_alpha");
	return [THIS colorWithCalibratedWhite:white alpha:alpha];
}

NSColor * NSColor_colorWithCalibratedHue_saturation_brightness_alpha (NSColor* THIS, float hue, float saturation, float brightness, float alpha) {
	NSLog(@"NSColor_colorWithCalibratedHue_saturation_brightness_alpha");
	return [THIS colorWithCalibratedHue:hue saturation:saturation brightness:brightness alpha:alpha];
}

NSColor * NSColor_colorWithCalibratedRed_green_blue_alpha (NSColor* THIS, float red, float green, float blue, float alpha) {
	NSLog(@"NSColor_colorWithCalibratedRed_green_blue_alpha");
	return [THIS colorWithCalibratedRed:red green:green blue:blue alpha:alpha];
}

NSColor * NSColor_colorWithDeviceWhite_alpha (NSColor* THIS, float white, float alpha) {
	NSLog(@"NSColor_colorWithDeviceWhite_alpha");
	return [THIS colorWithDeviceWhite:white alpha:alpha];
}

NSColor * NSColor_colorWithDeviceHue_saturation_brightness_alpha (NSColor* THIS, float hue, float saturation, float brightness, float alpha) {
	NSLog(@"NSColor_colorWithDeviceHue_saturation_brightness_alpha");
	return [THIS colorWithDeviceHue:hue saturation:saturation brightness:brightness alpha:alpha];
}

NSColor * NSColor_colorWithDeviceRed_green_blue_alpha (NSColor* THIS, float red, float green, float blue, float alpha) {
	NSLog(@"NSColor_colorWithDeviceRed_green_blue_alpha");
	return [THIS colorWithDeviceRed:red green:green blue:blue alpha:alpha];
}

NSColor * NSColor_colorWithDeviceCyan_magenta_yellow_black_alpha (NSColor* THIS, float cyan, float magenta, float yellow, float black, float alpha) {
	NSLog(@"NSColor_colorWithDeviceCyan_magenta_yellow_black_alpha");
	return [THIS colorWithDeviceCyan:cyan magenta:magenta yellow:yellow black:black alpha:alpha];
}

NSColor * NSColor_colorWithCatalogName_colorName (NSColor* THIS, NSString * listName, NSString * colorName) {
	NSLog(@"NSColor_colorWithCatalogName_colorName");
	return [THIS colorWithCatalogName:listName colorName:colorName];
}

NSColor * NSColor_blackColor (NSColor* THIS) {
	NSLog(@"NSColor_blackColor");
	return [THIS blackColor];
}
NSColor * NSColor_darkGrayColor (NSColor* THIS) {
	NSLog(@"NSColor_darkGrayColor");
	return [THIS darkGrayColor];
}
NSColor * NSColor_lightGrayColor (NSColor* THIS) {
	NSLog(@"NSColor_lightGrayColor");
	return [THIS lightGrayColor];
}
NSColor * NSColor_whiteColor (NSColor* THIS) {
	NSLog(@"NSColor_whiteColor");
	return [THIS whiteColor];
}
NSColor * NSColor_grayColor (NSColor* THIS) {
	NSLog(@"NSColor_grayColor");
	return [THIS grayColor];
}
NSColor * NSColor_redColor (NSColor* THIS) {
	NSLog(@"NSColor_redColor");
	return [THIS redColor];
}
NSColor * NSColor_greenColor (NSColor* THIS) {
	NSLog(@"NSColor_greenColor");
	return [THIS greenColor];
}
NSColor * NSColor_blueColor (NSColor* THIS) {
	NSLog(@"NSColor_blueColor");
	return [THIS blueColor];
}
NSColor * NSColor_cyanColor (NSColor* THIS) {
	NSLog(@"NSColor_cyanColor");
	return [THIS cyanColor];
}
NSColor * NSColor_yellowColor (NSColor* THIS) {
	NSLog(@"NSColor_yellowColor");
	return [THIS yellowColor];
}
NSColor * NSColor_magentaColor (NSColor* THIS) {
	NSLog(@"NSColor_magentaColor");
	return [THIS magentaColor];
}
NSColor * NSColor_orangeColor (NSColor* THIS) {
	NSLog(@"NSColor_orangeColor");
	return [THIS orangeColor];
}
NSColor * NSColor_purpleColor (NSColor* THIS) {
	NSLog(@"NSColor_purpleColor");
	return [THIS purpleColor];
}
NSColor * NSColor_brownColor (NSColor* THIS) {
	NSLog(@"NSColor_brownColor");
	return [THIS brownColor];
}
NSColor * NSColor_clearColor (NSColor* THIS) {
	NSLog(@"NSColor_clearColor");
	return [THIS clearColor];
}
NSColor * NSColor_controlShadowColor (NSColor* THIS) {
	NSLog(@"NSColor_controlShadowColor");
	return [THIS controlShadowColor];
}
NSColor * NSColor_controlDarkShadowColor (NSColor* THIS) {
	NSLog(@"NSColor_controlDarkShadowColor");
	return [THIS controlDarkShadowColor];
}
NSColor * NSColor_controlColor (NSColor* THIS) {
	NSLog(@"NSColor_controlColor");
	return [THIS controlColor];
}
NSColor * NSColor_controlHighlightColor (NSColor* THIS) {
	NSLog(@"NSColor_controlHighlightColor");
	return [THIS controlHighlightColor];
}
NSColor * NSColor_controlLightHighlightColor (NSColor* THIS) {
	NSLog(@"NSColor_controlLightHighlightColor");
	return [THIS controlLightHighlightColor];
}
NSColor * NSColor_controlTextColor (NSColor* THIS) {
	NSLog(@"NSColor_controlTextColor");
	return [THIS controlTextColor];
}
/* UNSUPPORTED: 
+ (NSColor *)controlBackgroundColor;		 Background of large controls (browser, tableview, clipview, ...)
 */

NSColor * NSColor_selectedControlColor (NSColor* THIS) {
	NSLog(@"NSColor_selectedControlColor");
	return [THIS selectedControlColor];
}
NSColor * NSColor_secondarySelectedControlColor (NSColor* THIS) {
	NSLog(@"NSColor_secondarySelectedControlColor");
	return [THIS secondarySelectedControlColor];
}
NSColor * NSColor_selectedControlTextColor (NSColor* THIS) {
	NSLog(@"NSColor_selectedControlTextColor");
	return [THIS selectedControlTextColor];
}
NSColor * NSColor_disabledControlTextColor (NSColor* THIS) {
	NSLog(@"NSColor_disabledControlTextColor");
	return [THIS disabledControlTextColor];
}
NSColor * NSColor_textColor (NSColor* THIS) {
	NSLog(@"NSColor_textColor");
	return [THIS textColor];
}
NSColor * NSColor_textBackgroundColor (NSColor* THIS) {
	NSLog(@"NSColor_textBackgroundColor");
	return [THIS textBackgroundColor];
}
NSColor * NSColor_selectedTextColor (NSColor* THIS) {
	NSLog(@"NSColor_selectedTextColor");
	return [THIS selectedTextColor];
}
NSColor * NSColor_selectedTextBackgroundColor (NSColor* THIS) {
	NSLog(@"NSColor_selectedTextBackgroundColor");
	return [THIS selectedTextBackgroundColor];
}
NSColor * NSColor_gridColor (NSColor* THIS) {
	NSLog(@"NSColor_gridColor");
	return [THIS gridColor];
}
NSColor * NSColor_keyboardFocusIndicatorColor (NSColor* THIS) {
	NSLog(@"NSColor_keyboardFocusIndicatorColor");
	return [THIS keyboardFocusIndicatorColor];
}
NSColor * NSColor_windowBackgroundColor (NSColor* THIS) {
	NSLog(@"NSColor_windowBackgroundColor");
	return [THIS windowBackgroundColor];
}
NSColor * NSColor_scrollBarColor (NSColor* THIS) {
	NSLog(@"NSColor_scrollBarColor");
	return [THIS scrollBarColor];
}
NSColor * NSColor_knobColor (NSColor* THIS) {
	NSLog(@"NSColor_knobColor");
	return [THIS knobColor];
}
NSColor * NSColor_selectedKnobColor (NSColor* THIS) {
	NSLog(@"NSColor_selectedKnobColor");
	return [THIS selectedKnobColor];
}
NSColor * NSColor_windowFrameColor (NSColor* THIS) {
	NSLog(@"NSColor_windowFrameColor");
	return [THIS windowFrameColor];
}
NSColor * NSColor_windowFrameTextColor (NSColor* THIS) {
	NSLog(@"NSColor_windowFrameTextColor");
	return [THIS windowFrameTextColor];
}
NSColor * NSColor_selectedMenuItemColor (NSColor* THIS) {
	NSLog(@"NSColor_selectedMenuItemColor");
	return [THIS selectedMenuItemColor];
}
NSColor * NSColor_selectedMenuItemTextColor (NSColor* THIS) {
	NSLog(@"NSColor_selectedMenuItemTextColor");
	return [THIS selectedMenuItemTextColor];
}
NSColor * NSColor_highlightColor (NSColor* THIS) {
	NSLog(@"NSColor_highlightColor");
	return [THIS highlightColor];
}
NSColor * NSColor_shadowColor (NSColor* THIS) {
	NSLog(@"NSColor_shadowColor");
	return [THIS shadowColor];
}
NSColor * NSColor_headerColor (NSColor* THIS) {
	NSLog(@"NSColor_headerColor");
	return [THIS headerColor];
}
NSColor * NSColor_headerTextColor (NSColor* THIS) {
	NSLog(@"NSColor_headerTextColor");
	return [THIS headerTextColor];
}
NSColor * NSColor_alternateSelectedControlColor (NSColor* THIS) {
	NSLog(@"NSColor_alternateSelectedControlColor");
	return [THIS alternateSelectedControlColor];
}
NSColor * NSColor_alternateSelectedControlTextColor (NSColor* THIS) {
	NSLog(@"NSColor_alternateSelectedControlTextColor");
	return [THIS alternateSelectedControlTextColor];
}
NSArray * NSColor_controlAlternatingRowBackgroundColors (NSColor* THIS) {
	NSLog(@"NSColor_controlAlternatingRowBackgroundColors");
	return [THIS controlAlternatingRowBackgroundColors];
}
NSColor * NSColor_highlightWithLevel (NSColor* THIS, float val) {
	NSLog(@"NSColor_highlightWithLevel");
	return [THIS highlightWithLevel:val];
}

NSColor * NSColor_shadowWithLevel (NSColor* THIS, float val) {
	NSLog(@"NSColor_shadowWithLevel");
	return [THIS shadowWithLevel:val];
}

NSColor * NSColor_colorForControlTint (NSColor* THIS, NSControlTint controlTint) {
	NSLog(@"NSColor_colorForControlTint");
	return [THIS colorForControlTint:controlTint];
}

NSControlTint NSColor_currentControlTint (NSColor* THIS) {
	NSLog(@"NSColor_currentControlTint");
	return [THIS currentControlTint];
}
void NSColor_set (NSColor* THIS) {
	NSLog(@"NSColor_set");
	[THIS set];
}
void NSColor_setFill (NSColor* THIS) {
	NSLog(@"NSColor_setFill");
	[THIS setFill];
}
void NSColor_setStroke (NSColor* THIS) {
	NSLog(@"NSColor_setStroke");
	[THIS setStroke];
}
NSString * NSColor_colorSpaceName (NSColor* THIS) {
	NSLog(@"NSColor_colorSpaceName");
	return [THIS colorSpaceName];
}
NSColor * NSColor_colorUsingColorSpaceName (NSColor* THIS, NSString * colorSpace) {
	NSLog(@"NSColor_colorUsingColorSpaceName");
	return [THIS colorUsingColorSpaceName:colorSpace];
}

NSColor * NSColor_colorUsingColorSpaceName_device (NSColor* THIS, NSString * colorSpace, NSDictionary * deviceDescription) {
	NSLog(@"NSColor_colorUsingColorSpaceName_device");
	return [THIS colorUsingColorSpaceName:colorSpace device:deviceDescription];
}

NSColor * NSColor_blendedColorWithFraction_ofColor (NSColor* THIS, float fraction, NSColor * color) {
	NSLog(@"NSColor_blendedColorWithFraction_ofColor");
	return [THIS blendedColorWithFraction:fraction ofColor:color];
}

NSColor * NSColor_colorWithAlphaComponent (NSColor* THIS, float alpha) {
	NSLog(@"NSColor_colorWithAlphaComponent");
	return [THIS colorWithAlphaComponent:alpha];
}

NSString * NSColor_catalogNameComponent (NSColor* THIS) {
	NSLog(@"NSColor_catalogNameComponent");
	return [THIS catalogNameComponent];
}
NSString * NSColor_colorNameComponent (NSColor* THIS) {
	NSLog(@"NSColor_colorNameComponent");
	return [THIS colorNameComponent];
}
NSString * NSColor_localizedCatalogNameComponent (NSColor* THIS) {
	NSLog(@"NSColor_localizedCatalogNameComponent");
	return [THIS localizedCatalogNameComponent];
}
NSString * NSColor_localizedColorNameComponent (NSColor* THIS) {
	NSLog(@"NSColor_localizedColorNameComponent");
	return [THIS localizedColorNameComponent];
}
float NSColor_redComponent (NSColor* THIS) {
	NSLog(@"NSColor_redComponent");
	return [THIS redComponent];
}
float NSColor_greenComponent (NSColor* THIS) {
	NSLog(@"NSColor_greenComponent");
	return [THIS greenComponent];
}
float NSColor_blueComponent (NSColor* THIS) {
	NSLog(@"NSColor_blueComponent");
	return [THIS blueComponent];
}
void NSColor_getRed_green_blue_alpha (NSColor* THIS, float * red, float * green, float * blue, float * alpha) {
	NSLog(@"NSColor_getRed_green_blue_alpha");
	[THIS getRed:red green:green blue:blue alpha:alpha];
}

float NSColor_hueComponent (NSColor* THIS) {
	NSLog(@"NSColor_hueComponent");
	return [THIS hueComponent];
}
float NSColor_saturationComponent (NSColor* THIS) {
	NSLog(@"NSColor_saturationComponent");
	return [THIS saturationComponent];
}
float NSColor_brightnessComponent (NSColor* THIS) {
	NSLog(@"NSColor_brightnessComponent");
	return [THIS brightnessComponent];
}
void NSColor_getHue_saturation_brightness_alpha (NSColor* THIS, float * hue, float * saturation, float * brightness, float * alpha) {
	NSLog(@"NSColor_getHue_saturation_brightness_alpha");
	[THIS getHue:hue saturation:saturation brightness:brightness alpha:alpha];
}

float NSColor_whiteComponent (NSColor* THIS) {
	NSLog(@"NSColor_whiteComponent");
	return [THIS whiteComponent];
}
void NSColor_getWhite_alpha (NSColor* THIS, float * white, float * alpha) {
	NSLog(@"NSColor_getWhite_alpha");
	[THIS getWhite:white alpha:alpha];
}

float NSColor_cyanComponent (NSColor* THIS) {
	NSLog(@"NSColor_cyanComponent");
	return [THIS cyanComponent];
}
float NSColor_magentaComponent (NSColor* THIS) {
	NSLog(@"NSColor_magentaComponent");
	return [THIS magentaComponent];
}
float NSColor_yellowComponent (NSColor* THIS) {
	NSLog(@"NSColor_yellowComponent");
	return [THIS yellowComponent];
}
float NSColor_blackComponent (NSColor* THIS) {
	NSLog(@"NSColor_blackComponent");
	return [THIS blackComponent];
}
void NSColor_getCyan_magenta_yellow_black_alpha (NSColor* THIS, float * cyan, float * magenta, float * yellow, float * black, float * alpha) {
	NSLog(@"NSColor_getCyan_magenta_yellow_black_alpha");
	[THIS getCyan:cyan magenta:magenta yellow:yellow black:black alpha:alpha];
}

float NSColor_alphaComponent (NSColor* THIS) {
	NSLog(@"NSColor_alphaComponent");
	return [THIS alphaComponent];
}
NSColor * NSColor_colorFromPasteboard (NSColor* THIS, NSPasteboard * pasteBoard) {
	NSLog(@"NSColor_colorFromPasteboard");
	return [THIS colorFromPasteboard:pasteBoard];
}

void NSColor_writeToPasteboard (NSColor* THIS, NSPasteboard * pasteBoard) {
	NSLog(@"NSColor_writeToPasteboard");
	[THIS writeToPasteboard:pasteBoard];
}

NSColor* NSColor_colorWithPatternImage (NSColor* THIS, NSImage* image) {
	NSLog(@"NSColor_colorWithPatternImage");
	return [THIS colorWithPatternImage:image];
}

NSImage* NSColor_patternImage (NSColor* THIS) {
	NSLog(@"NSColor_patternImage");
	return [THIS patternImage];
}
void NSColor_drawSwatchInRect (NSColor* THIS, NSRect rect) {
	NSLog(@"NSColor_drawSwatchInRect");
	[THIS drawSwatchInRect:rect];
}

void NSColor_setIgnoresAlpha (NSColor* THIS, BOOL flag) {
	NSLog(@"NSColor_setIgnoresAlpha");
	[THIS setIgnoresAlpha:flag];
}

BOOL NSColor_ignoresAlpha (NSColor* THIS) {
	NSLog(@"NSColor_ignoresAlpha");
	return [THIS ignoresAlpha];
}
NSColor * NSColor_decodeNXColor (NSColor* THIS) {
	NSLog(@"NSColor_decodeNXColor");
	return [THIS decodeNXColor];
}
NSColor * NSColor_alloc() {
	NSLog(@"NSColor_alloc()");
	return [NSColor alloc];
}
