/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <AppKit/NSView.h>

#include <AppKit/NSSpellProtocol.h>

NSString * NSText_string (NSText* THIS) {
	NSLog(@"NSText_string");
	return [THIS string];
}
void NSText_setString (NSText* THIS, NSString * string) {
	NSLog(@"NSText_setString");
	[THIS setString:string];
}

void NSText_replaceCharactersInRange_withString (NSText* THIS, NSRange range, NSString * aString) {
	NSLog(@"NSText_replaceCharactersInRange_withString");
	[THIS replaceCharactersInRange:range withString:aString];
}

void NSText_replaceCharactersInRange_withRTF (NSText* THIS, NSRange range, NSData * rtfData) {
	NSLog(@"NSText_replaceCharactersInRange_withRTF");
	[THIS replaceCharactersInRange:range withRTF:rtfData];
}

void NSText_replaceCharactersInRange_withRTFD (NSText* THIS, NSRange range, NSData * rtfdData) {
	NSLog(@"NSText_replaceCharactersInRange_withRTFD");
	[THIS replaceCharactersInRange:range withRTFD:rtfdData];
}

NSData * NSText_RTFFromRange (NSText* THIS, NSRange range) {
	NSLog(@"NSText_RTFFromRange");
	return [THIS RTFFromRange:range];
}

NSData * NSText_RTFDFromRange (NSText* THIS, NSRange range) {
	NSLog(@"NSText_RTFDFromRange");
	return [THIS RTFDFromRange:range];
}

BOOL NSText_writeRTFDToFile_atomically (NSText* THIS, NSString * path, BOOL flag) {
	NSLog(@"NSText_writeRTFDToFile_atomically");
	return [THIS writeRTFDToFile:path atomically:flag];
}

BOOL NSText_readRTFDFromFile (NSText* THIS, NSString * path) {
	NSLog(@"NSText_readRTFDFromFile");
	return [THIS readRTFDFromFile:path];
}

NSText * NSText_delegate (NSText* THIS) {
	NSLog(@"NSText_delegate");
	return [THIS delegate];
}
void NSText_setDelegate (NSText* THIS, NSText * anObject) {
	NSLog(@"NSText_setDelegate");
	[THIS setDelegate:anObject];
}

BOOL NSText_isEditable (NSText* THIS) {
	NSLog(@"NSText_isEditable");
	return [THIS isEditable];
}
void NSText_setEditable (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setEditable");
	[THIS setEditable:flag];
}

BOOL NSText_isSelectable (NSText* THIS) {
	NSLog(@"NSText_isSelectable");
	return [THIS isSelectable];
}
void NSText_setSelectable (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setSelectable");
	[THIS setSelectable:flag];
}

BOOL NSText_isRichText (NSText* THIS) {
	NSLog(@"NSText_isRichText");
	return [THIS isRichText];
}
void NSText_setRichText (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setRichText");
	[THIS setRichText:flag];
}

BOOL NSText_importsGraphics (NSText* THIS) {
	NSLog(@"NSText_importsGraphics");
	return [THIS importsGraphics];
}
void NSText_setImportsGraphics (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setImportsGraphics");
	[THIS setImportsGraphics:flag];
}

void NSText_setBackgroundColor (NSText* THIS, NSColor * color) {
	NSLog(@"NSText_setBackgroundColor");
	[THIS setBackgroundColor:color];
}

NSColor * NSText_backgroundColor (NSText* THIS) {
	NSLog(@"NSText_backgroundColor");
	return [THIS backgroundColor];
}
void NSText_setDrawsBackground (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setDrawsBackground");
	[THIS setDrawsBackground:flag];
}

BOOL NSText_drawsBackground (NSText* THIS) {
	NSLog(@"NSText_drawsBackground");
	return [THIS drawsBackground];
}
void NSText_setFont (NSText* THIS, NSFont * obj) {
	NSLog(@"NSText_setFont");
	[THIS setFont:obj];
}

NSFont * NSText_font (NSText* THIS) {
	NSLog(@"NSText_font");
	return [THIS font];
}
void NSText_setTextColor (NSText* THIS, NSColor * color) {
	NSLog(@"NSText_setTextColor");
	[THIS setTextColor:color];
}

NSColor * NSText_textColor (NSText* THIS) {
	NSLog(@"NSText_textColor");
	return [THIS textColor];
}
NSTextAlignment NSText_alignment (NSText* THIS) {
	NSLog(@"NSText_alignment");
	return [THIS alignment];
}
void NSText_setAlignment (NSText* THIS, NSTextAlignment mode) {
	NSLog(@"NSText_setAlignment");
	[THIS setAlignment:mode];
}

void NSText_setFieldEditor (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setFieldEditor");
	[THIS setFieldEditor:flag];
}

BOOL NSText_isFieldEditor (NSText* THIS) {
	NSLog(@"NSText_isFieldEditor");
	return [THIS isFieldEditor];
}
void NSText_setTextColor_range (NSText* THIS, NSColor * color, NSRange range) {
	NSLog(@"NSText_setTextColor_range");
	[THIS setTextColor:color range:range];
}

void NSText_setFont_range (NSText* THIS, NSFont * font, NSRange range) {
	NSLog(@"NSText_setFont_range");
	[THIS setFont:font range:range];
}

BOOL NSText_usesFontPanel (NSText* THIS) {
	NSLog(@"NSText_usesFontPanel");
	return [THIS usesFontPanel];
}
void NSText_setUsesFontPanel (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setUsesFontPanel");
	[THIS setUsesFontPanel:flag];
}

NSSize NSText_maxSize (NSText* THIS) {
	NSLog(@"NSText_maxSize");
	return [THIS maxSize];
}
void NSText_setMaxSize (NSText* THIS, NSSize newMaxSize) {
	NSLog(@"NSText_setMaxSize");
	[THIS setMaxSize:newMaxSize];
}

NSSize NSText_minSize (NSText* THIS) {
	NSLog(@"NSText_minSize");
	return [THIS minSize];
}
void NSText_setMinSize (NSText* THIS, NSSize newMinSize) {
	NSLog(@"NSText_setMinSize");
	[THIS setMinSize:newMinSize];
}

BOOL NSText_isHorizontallyResizable (NSText* THIS) {
	NSLog(@"NSText_isHorizontallyResizable");
	return [THIS isHorizontallyResizable];
}
void NSText_setHorizontallyResizable (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setHorizontallyResizable");
	[THIS setHorizontallyResizable:flag];
}

BOOL NSText_isVerticallyResizable (NSText* THIS) {
	NSLog(@"NSText_isVerticallyResizable");
	return [THIS isVerticallyResizable];
}
void NSText_setVerticallyResizable (NSText* THIS, BOOL flag) {
	NSLog(@"NSText_setVerticallyResizable");
	[THIS setVerticallyResizable:flag];
}

void NSText_sizeToFit (NSText* THIS) {
	NSLog(@"NSText_sizeToFit");
	[THIS sizeToFit];
}
void NSText_copy (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_copy");
	[THIS copy:sender];
}

void NSText_copyFont (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_copyFont");
	[THIS copyFont:sender];
}

void NSText_copyRuler (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_copyRuler");
	[THIS copyRuler:sender];
}

void NSText_cut (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_cut");
	[THIS cut:sender];
}

void NSText_delete (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_delete");
	[THIS delete:sender];
}

void NSText_paste (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_paste");
	[THIS paste:sender];
}

void NSText_pasteFont (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_pasteFont");
	[THIS pasteFont:sender];
}

void NSText_pasteRuler (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_pasteRuler");
	[THIS pasteRuler:sender];
}

void NSText_selectAll (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_selectAll");
	[THIS selectAll:sender];
}

void NSText_changeFont (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_changeFont");
	[THIS changeFont:sender];
}

void NSText_alignLeft (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_alignLeft");
	[THIS alignLeft:sender];
}

void NSText_alignRight (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_alignRight");
	[THIS alignRight:sender];
}

void NSText_alignCenter (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_alignCenter");
	[THIS alignCenter:sender];
}

void NSText_subscript (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_subscript");
	[THIS subscript:sender];
}

void NSText_superscript (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_superscript");
	[THIS superscript:sender];
}

void NSText_underline (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_underline");
	[THIS underline:sender];
}

void NSText_unscript (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_unscript");
	[THIS unscript:sender];
}

void NSText_showGuessPanel (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_showGuessPanel");
	[THIS showGuessPanel:sender];
}

void NSText_checkSpelling (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_checkSpelling");
	[THIS checkSpelling:sender];
}

void NSText_toggleRuler (NSText* THIS, NSText * sender) {
	NSLog(@"NSText_toggleRuler");
	[THIS toggleRuler:sender];
}

BOOL NSText_isRulerVisible (NSText* THIS) {
	NSLog(@"NSText_isRulerVisible");
	return [THIS isRulerVisible];
}
NSRange NSText_selectedRange (NSText* THIS) {
	NSLog(@"NSText_selectedRange");
	return [THIS selectedRange];
}
void NSText_setSelectedRange (NSText* THIS, NSRange range) {
	NSLog(@"NSText_setSelectedRange");
	[THIS setSelectedRange:range];
}

void NSText_scrollRangeToVisible (NSText* THIS, NSRange range) {
	NSLog(@"NSText_scrollRangeToVisible");
	[THIS scrollRangeToVisible:range];
}

BOOL NSText_textShouldBeginEditing (NSText* THIS, NSText * textObject) {
	NSLog(@"NSText_textShouldBeginEditing");
	return [THIS textShouldBeginEditing:textObject];
}

BOOL NSText_textShouldEndEditing (NSText* THIS, NSText * textObject) {
	NSLog(@"NSText_textShouldEndEditing");
	return [THIS textShouldEndEditing:textObject];
}

void NSText_textDidBeginEditing (NSText* THIS, NSNotification * notification) {
	NSLog(@"NSText_textDidBeginEditing");
	[THIS textDidBeginEditing:notification];
}

void NSText_textDidEndEditing (NSText* THIS, NSNotification * notification) {
	NSLog(@"NSText_textDidEndEditing");
	[THIS textDidEndEditing:notification];
}

void NSText_textDidChange (NSText* THIS, NSNotification * notification) {
	NSLog(@"NSText_textDidChange");
	[THIS textDidChange:notification];
}

NSText * NSText_alloc() {
	NSLog(@"NSText_alloc()");
	return [NSText alloc];
}
