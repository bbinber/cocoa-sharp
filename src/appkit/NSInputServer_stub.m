/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

#include <Foundation/NSGeometry.h>

#include <Foundation/NSRange.h>

void NSInputServer_insertText_client (NSInputServer* THIS, NSInputServer * aString, NSInputServer * sender) {
	NSLog(@"NSInputServer_insertText_client");
	[THIS insertText:aString client:sender];
}

void NSInputServer_doCommandBySelector_client (NSInputServer* THIS, SEL aSelector, NSInputServer * sender) {
	NSLog(@"NSInputServer_doCommandBySelector_client");
	[THIS doCommandBySelector:aSelector client:sender];
}

void NSInputServer_markedTextAbandoned (NSInputServer* THIS, NSInputServer * sender) {
	NSLog(@"NSInputServer_markedTextAbandoned");
	[THIS markedTextAbandoned:sender];
}

void NSInputServer_markedTextSelectionChanged_client (NSInputServer* THIS, NSRange newSel, NSInputServer * sender) {
	NSLog(@"NSInputServer_markedTextSelectionChanged_client");
	[THIS markedTextSelectionChanged:newSel client:sender];
}

void NSInputServer_terminate (NSInputServer* THIS, NSInputServer * sender) {
	NSLog(@"NSInputServer_terminate");
	[THIS terminate:sender];
}

BOOL NSInputServer_canBeDisabled (NSInputServer* THIS) {
	NSLog(@"NSInputServer_canBeDisabled");
	return [THIS canBeDisabled];
}
BOOL NSInputServer_wantsToInterpretAllKeystrokes (NSInputServer* THIS) {
	NSLog(@"NSInputServer_wantsToInterpretAllKeystrokes");
	return [THIS wantsToInterpretAllKeystrokes];
}
BOOL NSInputServer_wantsToHandleMouseEvents (NSInputServer* THIS) {
	NSLog(@"NSInputServer_wantsToHandleMouseEvents");
	return [THIS wantsToHandleMouseEvents];
}
BOOL NSInputServer_wantsToDelayTextChangeNotifications (NSInputServer* THIS) {
	NSLog(@"NSInputServer_wantsToDelayTextChangeNotifications");
	return [THIS wantsToDelayTextChangeNotifications];
}
void NSInputServer_inputClientBecomeActive (NSInputServer* THIS, NSInputServer * sender) {
	NSLog(@"NSInputServer_inputClientBecomeActive");
	[THIS inputClientBecomeActive:sender];
}

void NSInputServer_inputClientResignActive (NSInputServer* THIS, NSInputServer * sender) {
	NSLog(@"NSInputServer_inputClientResignActive");
	[THIS inputClientResignActive:sender];
}

void NSInputServer_inputClientEnabled (NSInputServer* THIS, NSInputServer * sender) {
	NSLog(@"NSInputServer_inputClientEnabled");
	[THIS inputClientEnabled:sender];
}

void NSInputServer_inputClientDisabled (NSInputServer* THIS, NSInputServer * sender) {
	NSLog(@"NSInputServer_inputClientDisabled");
	[THIS inputClientDisabled:sender];
}

void NSInputServer_activeConversationWillChange_fromOldConversation (NSInputServer* THIS, NSInputServer * sender, long oldConversation) {
	NSLog(@"NSInputServer_activeConversationWillChange_fromOldConversation");
	[THIS activeConversationWillChange:sender fromOldConversation:oldConversation];
}

void NSInputServer_activeConversationChanged_toNewConversation (NSInputServer* THIS, NSInputServer * sender, long newConversation) {
	NSLog(@"NSInputServer_activeConversationChanged_toNewConversation");
	[THIS activeConversationChanged:sender toNewConversation:newConversation];
}

BOOL NSInputServer_mouseDownOnCharacterIndex_atCoordinate_withModifier_client (NSInputServer* THIS, unsigned theIndex, NSPoint thePoint, unsigned int theFlags, NSInputServer * sender) {
	NSLog(@"NSInputServer_mouseDownOnCharacterIndex_atCoordinate_withModifier_client");
	return [THIS mouseDownOnCharacterIndex:theIndex atCoordinate:thePoint withModifier:theFlags client:sender];
}

BOOL NSInputServer_mouseDraggedOnCharacterIndex_atCoordinate_withModifier_client (NSInputServer* THIS, unsigned theIndex, NSPoint thePoint, unsigned int theFlags, NSInputServer * sender) {
	NSLog(@"NSInputServer_mouseDraggedOnCharacterIndex_atCoordinate_withModifier_client");
	return [THIS mouseDraggedOnCharacterIndex:theIndex atCoordinate:thePoint withModifier:theFlags client:sender];
}

void NSInputServer_mouseUpOnCharacterIndex_atCoordinate_withModifier_client (NSInputServer* THIS, unsigned theIndex, NSPoint thePoint, unsigned int theFlags, NSInputServer * sender) {
	NSLog(@"NSInputServer_mouseUpOnCharacterIndex_atCoordinate_withModifier_client");
	[THIS mouseUpOnCharacterIndex:theIndex atCoordinate:thePoint withModifier:theFlags client:sender];
}

/* UNSUPPORTED: 
- initWithDelegate:(id)aDelegate name:(NSString *)name;
 */

NSInputServer * NSInputServer_alloc() {
	NSLog(@"NSInputServer_alloc()");
	return [NSInputServer alloc];
}
