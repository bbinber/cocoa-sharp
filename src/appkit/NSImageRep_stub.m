/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>
#include <Foundation/NSGeometry.h>
#include <AppKit/AppKitDefines.h>

BOOL NSImageRep_draw (NSImageRep* THIS) {
	NSLog(@"NSImageRep_draw");
	return [THIS draw];
}

BOOL NSImageRep_drawAtPoint (NSImageRep* THIS, NSPoint point) {
	NSLog(@"NSImageRep_drawAtPoint");
	return [THIS drawAtPoint:point];
}

BOOL NSImageRep_drawInRect (NSImageRep* THIS, NSRect rect) {
	NSLog(@"NSImageRep_drawInRect");
	return [THIS drawInRect:rect];
}

void NSImageRep_setSize (NSImageRep* THIS, NSSize aSize) {
	NSLog(@"NSImageRep_setSize");
	[THIS setSize:aSize];
}

NSSize NSImageRep_size (NSImageRep* THIS) {
	NSLog(@"NSImageRep_size");
	return [THIS size];
}

void NSImageRep_setAlpha (NSImageRep* THIS, BOOL flag) {
	NSLog(@"NSImageRep_setAlpha");
	[THIS setAlpha:flag];
}

BOOL NSImageRep_hasAlpha (NSImageRep* THIS) {
	NSLog(@"NSImageRep_hasAlpha");
	return [THIS hasAlpha];
}

void NSImageRep_setOpaque (NSImageRep* THIS, BOOL flag) {
	NSLog(@"NSImageRep_setOpaque");
	[THIS setOpaque:flag];
}

BOOL NSImageRep_isOpaque (NSImageRep* THIS) {
	NSLog(@"NSImageRep_isOpaque");
	return [THIS isOpaque];
}

void NSImageRep_setColorSpaceName (NSImageRep* THIS, NSString * string) {
	NSLog(@"NSImageRep_setColorSpaceName");
	[THIS setColorSpaceName:string];
}

NSString * NSImageRep_colorSpaceName (NSImageRep* THIS) {
	NSLog(@"NSImageRep_colorSpaceName");
	return [THIS colorSpaceName];
}

void NSImageRep_setBitsPerSample (NSImageRep* THIS, int anInt) {
	NSLog(@"NSImageRep_setBitsPerSample");
	[THIS setBitsPerSample:anInt];
}

int NSImageRep_bitsPerSample (NSImageRep* THIS) {
	NSLog(@"NSImageRep_bitsPerSample");
	return [THIS bitsPerSample];
}

void NSImageRep_setPixelsWide (NSImageRep* THIS, int anInt) {
	NSLog(@"NSImageRep_setPixelsWide");
	[THIS setPixelsWide:anInt];
}

int NSImageRep_pixelsWide (NSImageRep* THIS) {
	NSLog(@"NSImageRep_pixelsWide");
	return [THIS pixelsWide];
}

void NSImageRep_setPixelsHigh (NSImageRep* THIS, int anInt) {
	NSLog(@"NSImageRep_setPixelsHigh");
	[THIS setPixelsHigh:anInt];
}

int NSImageRep_pixelsHigh (NSImageRep* THIS) {
	NSLog(@"NSImageRep_pixelsHigh");
	return [THIS pixelsHigh];
}

void NSImageRep$_registerImageRepClass (Class imageRepClass) {
	NSLog(@"NSImageRep$_registerImageRepClass");
	[NSImageRep registerImageRepClass:imageRepClass];
}

void NSImageRep$_unregisterImageRepClass (Class imageRepClass) {
	NSLog(@"NSImageRep$_unregisterImageRepClass");
	[NSImageRep unregisterImageRepClass:imageRepClass];
}

NSArray * NSImageRep$_registeredImageRepClasses () {
	NSLog(@"NSImageRep$_registeredImageRepClasses");
	return [NSImageRep registeredImageRepClasses];
}

Class NSImageRep$_imageRepClassForFileType (NSString * type) {
	NSLog(@"NSImageRep$_imageRepClassForFileType");
	return [NSImageRep imageRepClassForFileType:type];
}

Class NSImageRep$_imageRepClassForPasteboardType (NSString * type) {
	NSLog(@"NSImageRep$_imageRepClassForPasteboardType");
	return [NSImageRep imageRepClassForPasteboardType:type];
}

Class NSImageRep$_imageRepClassForData (NSData * data) {
	NSLog(@"NSImageRep$_imageRepClassForData");
	return [NSImageRep imageRepClassForData:data];
}

BOOL NSImageRep$_canInitWithData (NSData * data) {
	NSLog(@"NSImageRep$_canInitWithData");
	return [NSImageRep canInitWithData:data];
}

NSArray * NSImageRep$_imageUnfilteredFileTypes () {
	NSLog(@"NSImageRep$_imageUnfilteredFileTypes");
	return [NSImageRep imageUnfilteredFileTypes];
}

NSArray * NSImageRep$_imageUnfilteredPasteboardTypes () {
	NSLog(@"NSImageRep$_imageUnfilteredPasteboardTypes");
	return [NSImageRep imageUnfilteredPasteboardTypes];
}

NSArray * NSImageRep$_imageFileTypes () {
	NSLog(@"NSImageRep$_imageFileTypes");
	return [NSImageRep imageFileTypes];
}

NSArray * NSImageRep$_imagePasteboardTypes () {
	NSLog(@"NSImageRep$_imagePasteboardTypes");
	return [NSImageRep imagePasteboardTypes];
}

BOOL NSImageRep$_canInitWithPasteboard (NSPasteboard * pasteboard) {
	NSLog(@"NSImageRep$_canInitWithPasteboard");
	return [NSImageRep canInitWithPasteboard:pasteboard];
}

NSArray * NSImageRep$_imageRepsWithContentsOfFile (NSString * filename) {
	NSLog(@"NSImageRep$_imageRepsWithContentsOfFile");
	return [NSImageRep imageRepsWithContentsOfFile:filename];
}

NSImageRep * NSImageRep$_imageRepWithContentsOfFile (NSString * filename) {
	NSLog(@"NSImageRep$_imageRepWithContentsOfFile");
	return [NSImageRep imageRepWithContentsOfFile:filename];
}

NSArray * NSImageRep$_imageRepsWithContentsOfURL (NSURL * url) {
	NSLog(@"NSImageRep$_imageRepsWithContentsOfURL");
	return [NSImageRep imageRepsWithContentsOfURL:url];
}

NSImageRep * NSImageRep$_imageRepWithContentsOfURL (NSURL * url) {
	NSLog(@"NSImageRep$_imageRepWithContentsOfURL");
	return [NSImageRep imageRepWithContentsOfURL:url];
}

NSArray * NSImageRep$_imageRepsWithPasteboard (NSPasteboard * pasteboard) {
	NSLog(@"NSImageRep$_imageRepsWithPasteboard");
	return [NSImageRep imageRepsWithPasteboard:pasteboard];
}

NSImageRep * NSImageRep$_imageRepWithPasteboard (NSPasteboard * pasteboard) {
	NSLog(@"NSImageRep$_imageRepWithPasteboard");
	return [NSImageRep imageRepWithPasteboard:pasteboard];
}

NSImageRep * NSImageRep_alloc(){
	NSLog(@"NSImageRep_alloc()");
	return [ NSImageRep alloc ];
}