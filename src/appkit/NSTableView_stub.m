/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <AppKit/NSControl.h>

#include <AppKit/AppKitDefines.h>

#include <AppKit/NSDragging.h>

#include <AppKit/NSUserInterfaceValidation.h>

void NSTableView_setDataSource (NSTableView* THIS, NSTableView * aSource) {
	NSLog(@"NSTableView_setDataSource");
	[THIS setDataSource:aSource];
}

NSTableView * NSTableView_dataSource (NSTableView* THIS) {
	NSLog(@"NSTableView_dataSource");
	return [THIS dataSource];
}
void NSTableView_setDelegate (NSTableView* THIS, NSTableView * delegate) {
	NSLog(@"NSTableView_setDelegate");
	[THIS setDelegate:delegate];
}

NSTableView * NSTableView_delegate (NSTableView* THIS) {
	NSLog(@"NSTableView_delegate");
	return [THIS delegate];
}
void NSTableView_setHeaderView (NSTableView* THIS, NSTableHeaderView * headerView) {
	NSLog(@"NSTableView_setHeaderView");
	[THIS setHeaderView:headerView];
}

NSTableHeaderView * NSTableView_headerView (NSTableView* THIS) {
	NSLog(@"NSTableView_headerView");
	return [THIS headerView];
}
void NSTableView_setCornerView (NSTableView* THIS, NSView * cornerView) {
	NSLog(@"NSTableView_setCornerView");
	[THIS setCornerView:cornerView];
}

NSView * NSTableView_cornerView (NSTableView* THIS) {
	NSLog(@"NSTableView_cornerView");
	return [THIS cornerView];
}
void NSTableView_setAllowsColumnReordering (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setAllowsColumnReordering");
	[THIS setAllowsColumnReordering:flag];
}

BOOL NSTableView_allowsColumnReordering (NSTableView* THIS) {
	NSLog(@"NSTableView_allowsColumnReordering");
	return [THIS allowsColumnReordering];
}
void NSTableView_setAllowsColumnResizing (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setAllowsColumnResizing");
	[THIS setAllowsColumnResizing:flag];
}

BOOL NSTableView_allowsColumnResizing (NSTableView* THIS) {
	NSLog(@"NSTableView_allowsColumnResizing");
	return [THIS allowsColumnResizing];
}
void NSTableView_setAutoresizesAllColumnsToFit (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setAutoresizesAllColumnsToFit");
	[THIS setAutoresizesAllColumnsToFit:flag];
}

BOOL NSTableView_autoresizesAllColumnsToFit (NSTableView* THIS) {
	NSLog(@"NSTableView_autoresizesAllColumnsToFit");
	return [THIS autoresizesAllColumnsToFit];
}
void NSTableView_setGridStyleMask (NSTableView* THIS, unsigned int gridType) {
	NSLog(@"NSTableView_setGridStyleMask");
	[THIS setGridStyleMask:gridType];
}

unsigned int NSTableView_gridStyleMask (NSTableView* THIS) {
	NSLog(@"NSTableView_gridStyleMask");
	return [THIS gridStyleMask];
}
void NSTableView_setDrawsGrid (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setDrawsGrid");
	[THIS setDrawsGrid:flag];
}

BOOL NSTableView_drawsGrid (NSTableView* THIS) {
	NSLog(@"NSTableView_drawsGrid");
	return [THIS drawsGrid];
}
void NSTableView_setIntercellSpacing (NSTableView* THIS, NSSize aSize) {
	NSLog(@"NSTableView_setIntercellSpacing");
	[THIS setIntercellSpacing:aSize];
}

NSSize NSTableView_intercellSpacing (NSTableView* THIS) {
	NSLog(@"NSTableView_intercellSpacing");
	return [THIS intercellSpacing];
}
void NSTableView_setUsesAlternatingRowBackgroundColors (NSTableView* THIS, BOOL useAlternatingRowColors) {
	NSLog(@"NSTableView_setUsesAlternatingRowBackgroundColors");
	[THIS setUsesAlternatingRowBackgroundColors:useAlternatingRowColors];
}

BOOL NSTableView_usesAlternatingRowBackgroundColors (NSTableView* THIS) {
	NSLog(@"NSTableView_usesAlternatingRowBackgroundColors");
	return [THIS usesAlternatingRowBackgroundColors];
}
void NSTableView_setBackgroundColor (NSTableView* THIS, NSColor * color) {
	NSLog(@"NSTableView_setBackgroundColor");
	[THIS setBackgroundColor:color];
}

NSColor * NSTableView_backgroundColor (NSTableView* THIS) {
	NSLog(@"NSTableView_backgroundColor");
	return [THIS backgroundColor];
}
void NSTableView_setGridColor (NSTableView* THIS, NSColor * color) {
	NSLog(@"NSTableView_setGridColor");
	[THIS setGridColor:color];
}

NSColor * NSTableView_gridColor (NSTableView* THIS) {
	NSLog(@"NSTableView_gridColor");
	return [THIS gridColor];
}
void NSTableView_setRowHeight (NSTableView* THIS, float rowHeight) {
	NSLog(@"NSTableView_setRowHeight");
	[THIS setRowHeight:rowHeight];
}

float NSTableView_rowHeight (NSTableView* THIS) {
	NSLog(@"NSTableView_rowHeight");
	return [THIS rowHeight];
}
NSArray * NSTableView_tableColumns (NSTableView* THIS) {
	NSLog(@"NSTableView_tableColumns");
	return [THIS tableColumns];
}
int NSTableView_numberOfColumns (NSTableView* THIS) {
	NSLog(@"NSTableView_numberOfColumns");
	return [THIS numberOfColumns];
}
int NSTableView_numberOfRows (NSTableView* THIS) {
	NSLog(@"NSTableView_numberOfRows");
	return [THIS numberOfRows];
}
void NSTableView_addTableColumn (NSTableView* THIS, NSTableColumn * column) {
	NSLog(@"NSTableView_addTableColumn");
	[THIS addTableColumn:column];
}

void NSTableView_removeTableColumn (NSTableView* THIS, NSTableColumn * column) {
	NSLog(@"NSTableView_removeTableColumn");
	[THIS removeTableColumn:column];
}

int NSTableView_columnWithIdentifier (NSTableView* THIS, NSTableView * identifier) {
	NSLog(@"NSTableView_columnWithIdentifier");
	return [THIS columnWithIdentifier:identifier];
}

NSTableColumn * NSTableView_tableColumnWithIdentifier (NSTableView* THIS, NSTableView * identifier) {
	NSLog(@"NSTableView_tableColumnWithIdentifier");
	return [THIS tableColumnWithIdentifier:identifier];
}

void NSTableView_tile (NSTableView* THIS) {
	NSLog(@"NSTableView_tile");
	[THIS tile];
}
void NSTableView_sizeToFit (NSTableView* THIS) {
	NSLog(@"NSTableView_sizeToFit");
	[THIS sizeToFit];
}
void NSTableView_sizeLastColumnToFit (NSTableView* THIS) {
	NSLog(@"NSTableView_sizeLastColumnToFit");
	[THIS sizeLastColumnToFit];
}
void NSTableView_scrollRowToVisible (NSTableView* THIS, int row) {
	NSLog(@"NSTableView_scrollRowToVisible");
	[THIS scrollRowToVisible:row];
}

void NSTableView_scrollColumnToVisible (NSTableView* THIS, int column) {
	NSLog(@"NSTableView_scrollColumnToVisible");
	[THIS scrollColumnToVisible:column];
}

void NSTableView_moveColumn_toColumn (NSTableView* THIS, int column, int newIndex) {
	NSLog(@"NSTableView_moveColumn_toColumn");
	[THIS moveColumn:column toColumn:newIndex];
}

void NSTableView_reloadData (NSTableView* THIS) {
	NSLog(@"NSTableView_reloadData");
	[THIS reloadData];
}
void NSTableView_noteNumberOfRowsChanged (NSTableView* THIS) {
	NSLog(@"NSTableView_noteNumberOfRowsChanged");
	[THIS noteNumberOfRowsChanged];
}
int NSTableView_editedColumn (NSTableView* THIS) {
	NSLog(@"NSTableView_editedColumn");
	return [THIS editedColumn];
}
int NSTableView_editedRow (NSTableView* THIS) {
	NSLog(@"NSTableView_editedRow");
	return [THIS editedRow];
}
int NSTableView_clickedColumn (NSTableView* THIS) {
	NSLog(@"NSTableView_clickedColumn");
	return [THIS clickedColumn];
}
int NSTableView_clickedRow (NSTableView* THIS) {
	NSLog(@"NSTableView_clickedRow");
	return [THIS clickedRow];
}
void NSTableView_setDoubleAction (NSTableView* THIS, SEL aSelector) {
	NSLog(@"NSTableView_setDoubleAction");
	[THIS setDoubleAction:aSelector];
}

SEL NSTableView_doubleAction (NSTableView* THIS) {
	NSLog(@"NSTableView_doubleAction");
	return [THIS doubleAction];
}
void NSTableView_setSortDescriptors (NSTableView* THIS, NSArray * array) {
	NSLog(@"NSTableView_setSortDescriptors");
	[THIS setSortDescriptors:array];
}

NSArray * NSTableView_sortDescriptors (NSTableView* THIS) {
	NSLog(@"NSTableView_sortDescriptors");
	return [THIS sortDescriptors];
}
void NSTableView_setIndicatorImage_inTableColumn (NSTableView* THIS, NSImage * anImage, NSTableColumn * tc) {
	NSLog(@"NSTableView_setIndicatorImage_inTableColumn");
	[THIS setIndicatorImage:anImage inTableColumn:tc];
}

NSImage * NSTableView_indicatorImageInTableColumn (NSTableView* THIS, NSTableColumn * tc) {
	NSLog(@"NSTableView_indicatorImageInTableColumn");
	return [THIS indicatorImageInTableColumn:tc];
}

void NSTableView_setHighlightedTableColumn (NSTableView* THIS, NSTableColumn * tc) {
	NSLog(@"NSTableView_setHighlightedTableColumn");
	[THIS setHighlightedTableColumn:tc];
}

NSTableColumn * NSTableView_highlightedTableColumn (NSTableView* THIS) {
	NSLog(@"NSTableView_highlightedTableColumn");
	return [THIS highlightedTableColumn];
}
void NSTableView_setVerticalMotionCanBeginDrag (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setVerticalMotionCanBeginDrag");
	[THIS setVerticalMotionCanBeginDrag:flag];
}

BOOL NSTableView_verticalMotionCanBeginDrag (NSTableView* THIS) {
	NSLog(@"NSTableView_verticalMotionCanBeginDrag");
	return [THIS verticalMotionCanBeginDrag];
}
NSImage* NSTableView_dragImageForRows_event_dragImageOffset (NSTableView* THIS, NSArray* dragRows, NSEvent* dragEvent, NSPointPointer dragImageOffset) {
	NSLog(@"NSTableView_dragImageForRows_event_dragImageOffset");
	return [THIS dragImageForRows:dragRows event:dragEvent dragImageOffset:dragImageOffset];
}

void NSTableView_setDropRow_dropOperation (NSTableView* THIS, int row, NSTableViewDropOperation op) {
	NSLog(@"NSTableView_setDropRow_dropOperation");
	[THIS setDropRow:row dropOperation:op];
}

void NSTableView_setAllowsMultipleSelection (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setAllowsMultipleSelection");
	[THIS setAllowsMultipleSelection:flag];
}

BOOL NSTableView_allowsMultipleSelection (NSTableView* THIS) {
	NSLog(@"NSTableView_allowsMultipleSelection");
	return [THIS allowsMultipleSelection];
}
void NSTableView_setAllowsEmptySelection (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setAllowsEmptySelection");
	[THIS setAllowsEmptySelection:flag];
}

BOOL NSTableView_allowsEmptySelection (NSTableView* THIS) {
	NSLog(@"NSTableView_allowsEmptySelection");
	return [THIS allowsEmptySelection];
}
void NSTableView_setAllowsColumnSelection (NSTableView* THIS, BOOL flag) {
	NSLog(@"NSTableView_setAllowsColumnSelection");
	[THIS setAllowsColumnSelection:flag];
}

BOOL NSTableView_allowsColumnSelection (NSTableView* THIS) {
	NSLog(@"NSTableView_allowsColumnSelection");
	return [THIS allowsColumnSelection];
}
void NSTableView_selectAll (NSTableView* THIS, NSTableView * sender) {
	NSLog(@"NSTableView_selectAll");
	[THIS selectAll:sender];
}

void NSTableView_deselectAll (NSTableView* THIS, NSTableView * sender) {
	NSLog(@"NSTableView_deselectAll");
	[THIS deselectAll:sender];
}

void NSTableView_selectColumn_byExtendingSelection (NSTableView* THIS, int column, BOOL extend) {
	NSLog(@"NSTableView_selectColumn_byExtendingSelection");
	[THIS selectColumn:column byExtendingSelection:extend];
}

void NSTableView_selectRow_byExtendingSelection (NSTableView* THIS, int row, BOOL extend) {
	NSLog(@"NSTableView_selectRow_byExtendingSelection");
	[THIS selectRow:row byExtendingSelection:extend];
}

NSEnumerator * NSTableView_selectedColumnEnumerator (NSTableView* THIS) {
	NSLog(@"NSTableView_selectedColumnEnumerator");
	return [THIS selectedColumnEnumerator];
}
NSEnumerator * NSTableView_selectedRowEnumerator (NSTableView* THIS) {
	NSLog(@"NSTableView_selectedRowEnumerator");
	return [THIS selectedRowEnumerator];
}
void NSTableView_selectColumnIndexes_byExtendingSelection (NSTableView* THIS, NSIndexSet * indexes, BOOL extend) {
	NSLog(@"NSTableView_selectColumnIndexes_byExtendingSelection");
	[THIS selectColumnIndexes:indexes byExtendingSelection:extend];
}

void NSTableView_selectRowIndexes_byExtendingSelection (NSTableView* THIS, NSIndexSet * indexes, BOOL extend) {
	NSLog(@"NSTableView_selectRowIndexes_byExtendingSelection");
	[THIS selectRowIndexes:indexes byExtendingSelection:extend];
}

NSIndexSet * NSTableView_selectedColumnIndexes (NSTableView* THIS) {
	NSLog(@"NSTableView_selectedColumnIndexes");
	return [THIS selectedColumnIndexes];
}
NSIndexSet * NSTableView_selectedRowIndexes (NSTableView* THIS) {
	NSLog(@"NSTableView_selectedRowIndexes");
	return [THIS selectedRowIndexes];
}
void NSTableView_deselectColumn (NSTableView* THIS, int column) {
	NSLog(@"NSTableView_deselectColumn");
	[THIS deselectColumn:column];
}

void NSTableView_deselectRow (NSTableView* THIS, int row) {
	NSLog(@"NSTableView_deselectRow");
	[THIS deselectRow:row];
}

int NSTableView_selectedColumn (NSTableView* THIS) {
	NSLog(@"NSTableView_selectedColumn");
	return [THIS selectedColumn];
}
int NSTableView_selectedRow (NSTableView* THIS) {
	NSLog(@"NSTableView_selectedRow");
	return [THIS selectedRow];
}
BOOL NSTableView_isColumnSelected (NSTableView* THIS, int row) {
	NSLog(@"NSTableView_isColumnSelected");
	return [THIS isColumnSelected:row];
}

BOOL NSTableView_isRowSelected (NSTableView* THIS, int row) {
	NSLog(@"NSTableView_isRowSelected");
	return [THIS isRowSelected:row];
}

int NSTableView_numberOfSelectedColumns (NSTableView* THIS) {
	NSLog(@"NSTableView_numberOfSelectedColumns");
	return [THIS numberOfSelectedColumns];
}
int NSTableView_numberOfSelectedRows (NSTableView* THIS) {
	NSLog(@"NSTableView_numberOfSelectedRows");
	return [THIS numberOfSelectedRows];
}
NSRect NSTableView_rectOfColumn (NSTableView* THIS, int column) {
	NSLog(@"NSTableView_rectOfColumn");
	return [THIS rectOfColumn:column];
}

NSRect NSTableView_rectOfRow (NSTableView* THIS, int row) {
	NSLog(@"NSTableView_rectOfRow");
	return [THIS rectOfRow:row];
}

NSRange NSTableView_columnsInRect (NSTableView* THIS, NSRect rect) {
	NSLog(@"NSTableView_columnsInRect");
	return [THIS columnsInRect:rect];
}

NSRange NSTableView_rowsInRect (NSTableView* THIS, NSRect rect) {
	NSLog(@"NSTableView_rowsInRect");
	return [THIS rowsInRect:rect];
}

int NSTableView_columnAtPoint (NSTableView* THIS, NSPoint point) {
	NSLog(@"NSTableView_columnAtPoint");
	return [THIS columnAtPoint:point];
}

int NSTableView_rowAtPoint (NSTableView* THIS, NSPoint point) {
	NSLog(@"NSTableView_rowAtPoint");
	return [THIS rowAtPoint:point];
}

NSRect NSTableView_frameOfCellAtColumn_row (NSTableView* THIS, int column, int row) {
	NSLog(@"NSTableView_frameOfCellAtColumn_row");
	return [THIS frameOfCellAtColumn:column row:row];
}

BOOL NSTableView_textShouldBeginEditing (NSTableView* THIS, NSText * textObject) {
	NSLog(@"NSTableView_textShouldBeginEditing");
	return [THIS textShouldBeginEditing:textObject];
}

BOOL NSTableView_textShouldEndEditing (NSTableView* THIS, NSText * textObject) {
	NSLog(@"NSTableView_textShouldEndEditing");
	return [THIS textShouldEndEditing:textObject];
}

void NSTableView_textDidBeginEditing (NSTableView* THIS, NSNotification * notification) {
	NSLog(@"NSTableView_textDidBeginEditing");
	[THIS textDidBeginEditing:notification];
}

void NSTableView_textDidEndEditing (NSTableView* THIS, NSNotification * notification) {
	NSLog(@"NSTableView_textDidEndEditing");
	[THIS textDidEndEditing:notification];
}

void NSTableView_textDidChange (NSTableView* THIS, NSNotification * notification) {
	NSLog(@"NSTableView_textDidChange");
	[THIS textDidChange:notification];
}

void NSTableView_setAutosaveName (NSTableView* THIS, NSString * name) {
	NSLog(@"NSTableView_setAutosaveName");
	[THIS setAutosaveName:name];
}

NSString * NSTableView_autosaveName (NSTableView* THIS) {
	NSLog(@"NSTableView_autosaveName");
	return [THIS autosaveName];
}
void NSTableView_setAutosaveTableColumns (NSTableView* THIS, BOOL save) {
	NSLog(@"NSTableView_setAutosaveTableColumns");
	[THIS setAutosaveTableColumns:save];
}

BOOL NSTableView_autosaveTableColumns (NSTableView* THIS) {
	NSLog(@"NSTableView_autosaveTableColumns");
	return [THIS autosaveTableColumns];
}
void NSTableView_editColumn_row_withEvent_select (NSTableView* THIS, int column, int row, NSEvent * theEvent, BOOL select) {
	NSLog(@"NSTableView_editColumn_row_withEvent_select");
	[THIS editColumn:column row:row withEvent:theEvent select:select];
}

void NSTableView_drawRow_clipRect (NSTableView* THIS, int row, NSRect rect) {
	NSLog(@"NSTableView_drawRow_clipRect");
	[THIS drawRow:row clipRect:rect];
}

void NSTableView_highlightSelectionInClipRect (NSTableView* THIS, NSRect rect) {
	NSLog(@"NSTableView_highlightSelectionInClipRect");
	[THIS highlightSelectionInClipRect:rect];
}

void NSTableView_drawGridInClipRect (NSTableView* THIS, NSRect rect) {
	NSLog(@"NSTableView_drawGridInClipRect");
	[THIS drawGridInClipRect:rect];
}

void NSTableView_drawBackgroundInClipRect (NSTableView* THIS, NSRect clipRect) {
	NSLog(@"NSTableView_drawBackgroundInClipRect");
	[THIS drawBackgroundInClipRect:clipRect];
}

void NSTableView_tableView_willDisplayCell_forTableColumn_row (NSTableView* THIS, NSTableView * tableView, NSTableView * cell, NSTableColumn * tableColumn, int row) {
	NSLog(@"NSTableView_tableView_willDisplayCell_forTableColumn_row");
	[THIS tableView:tableView willDisplayCell:cell forTableColumn:tableColumn row:row];
}

BOOL NSTableView_tableView_shouldEditTableColumn_row (NSTableView* THIS, NSTableView * tableView, NSTableColumn * tableColumn, int row) {
	NSLog(@"NSTableView_tableView_shouldEditTableColumn_row");
	return [THIS tableView:tableView shouldEditTableColumn:tableColumn row:row];
}

BOOL NSTableView_selectionShouldChangeInTableView (NSTableView* THIS, NSTableView * aTableView) {
	NSLog(@"NSTableView_selectionShouldChangeInTableView");
	return [THIS selectionShouldChangeInTableView:aTableView];
}

BOOL NSTableView_tableView_shouldSelectRow (NSTableView* THIS, NSTableView * tableView, int row) {
	NSLog(@"NSTableView_tableView_shouldSelectRow");
	return [THIS tableView:tableView shouldSelectRow:row];
}

BOOL NSTableView_tableView_shouldSelectTableColumn (NSTableView* THIS, NSTableView * tableView, NSTableColumn * tableColumn) {
	NSLog(@"NSTableView_tableView_shouldSelectTableColumn");
	return [THIS tableView:tableView shouldSelectTableColumn:tableColumn];
}

void NSTableView_tableView_mouseDownInHeaderOfTableColumn (NSTableView* THIS, NSTableView* tableView, NSTableColumn * tableColumn) {
	NSLog(@"NSTableView_tableView_mouseDownInHeaderOfTableColumn");
	[THIS tableView:tableView mouseDownInHeaderOfTableColumn:tableColumn];
}

void NSTableView_tableView_didClickTableColumn (NSTableView* THIS, NSTableView* tableView, NSTableColumn * tableColumn) {
	NSLog(@"NSTableView_tableView_didClickTableColumn");
	[THIS tableView:tableView didClickTableColumn:tableColumn];
}

void NSTableView_tableView_didDragTableColumn (NSTableView* THIS, NSTableView* tableView, NSTableColumn * tableColumn) {
	NSLog(@"NSTableView_tableView_didDragTableColumn");
	[THIS tableView:tableView didDragTableColumn:tableColumn];
}

void NSTableView_tableViewSelectionDidChange (NSTableView* THIS, NSNotification * notification) {
	NSLog(@"NSTableView_tableViewSelectionDidChange");
	[THIS tableViewSelectionDidChange:notification];
}

void NSTableView_tableViewColumnDidMove (NSTableView* THIS, NSNotification * notification) {
	NSLog(@"NSTableView_tableViewColumnDidMove");
	[THIS tableViewColumnDidMove:notification];
}

void NSTableView_tableViewColumnDidResize (NSTableView* THIS, NSNotification * notification) {
	NSLog(@"NSTableView_tableViewColumnDidResize");
	[THIS tableViewColumnDidResize:notification];
}

void NSTableView_tableViewSelectionIsChanging (NSTableView* THIS, NSNotification * notification) {
	NSLog(@"NSTableView_tableViewSelectionIsChanging");
	[THIS tableViewSelectionIsChanging:notification];
}

int NSTableView_numberOfRowsInTableView (NSTableView* THIS, NSTableView * tableView) {
	NSLog(@"NSTableView_numberOfRowsInTableView");
	return [THIS numberOfRowsInTableView:tableView];
}

NSTableView * NSTableView_tableView_objectValueForTableColumn_row (NSTableView* THIS, NSTableView * tableView, NSTableColumn * tableColumn, int row) {
	NSLog(@"NSTableView_tableView_objectValueForTableColumn_row");
	return [THIS tableView:tableView objectValueForTableColumn:tableColumn row:row];
}

void NSTableView_tableView_setObjectValue_forTableColumn_row (NSTableView* THIS, NSTableView * tableView, NSTableView * object, NSTableColumn * tableColumn, int row) {
	NSLog(@"NSTableView_tableView_setObjectValue_forTableColumn_row");
	[THIS tableView:tableView setObjectValue:object forTableColumn:tableColumn row:row];
}

void NSTableView_tableView_sortDescriptorsDidChange (NSTableView* THIS, NSTableView * tableView, NSArray * oldDescriptors) {
	NSLog(@"NSTableView_tableView_sortDescriptorsDidChange");
	[THIS tableView:tableView sortDescriptorsDidChange:oldDescriptors];
}

BOOL NSTableView_tableView_writeRows_toPasteboard (NSTableView* THIS, NSTableView * tv, NSArray* rows, NSPasteboard* pboard) {
	NSLog(@"NSTableView_tableView_writeRows_toPasteboard");
	return [THIS tableView:tv writeRows:rows toPasteboard:pboard];
}

/* UNSUPPORTED: 
- (NSDragOperation)tableView:(NSTableView*)tv validateDrop:(id <NSDraggingInfo>)info proposedRow:(int)row proposedDropOperation:(NSTableViewDropOperation)op;
 */

/* UNSUPPORTED: 
- (BOOL)tableView:(NSTableView*)tv acceptDrop:(id <NSDraggingInfo>)info row:(int)row dropOperation:(NSTableViewDropOperation)op;
 */

NSTableView * NSTableView_alloc() {
	NSLog(@"NSTableView_alloc()");
	return [NSTableView alloc];
}
