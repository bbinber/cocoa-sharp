/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <AppKit/NSObjectController.h>

void NSArrayController_rearrangeObjects (NSArrayController* THIS) {
	NSLog(@"NSArrayController_rearrangeObjects");
	[THIS rearrangeObjects];
}

void NSArrayController_setSortDescriptors (NSArrayController* THIS, NSArray * sortDescriptors) {
	NSLog(@"NSArrayController_setSortDescriptors");
	[THIS setSortDescriptors:sortDescriptors];
}

NSArray * NSArrayController_sortDescriptors (NSArrayController* THIS) {
	NSLog(@"NSArrayController_sortDescriptors");
	return [THIS sortDescriptors];
}

NSArray * NSArrayController_arrangeObjects (NSArrayController* THIS, NSArray * objects) {
	NSLog(@"NSArrayController_arrangeObjects");
	return [THIS arrangeObjects:objects];
}

NSArrayController * NSArrayController_arrangedObjects (NSArrayController* THIS) {
	NSLog(@"NSArrayController_arrangedObjects");
	return [THIS arrangedObjects];
}

void NSArrayController_setAvoidsEmptySelection (NSArrayController* THIS, BOOL flag) {
	NSLog(@"NSArrayController_setAvoidsEmptySelection");
	[THIS setAvoidsEmptySelection:flag];
}

BOOL NSArrayController_avoidsEmptySelection (NSArrayController* THIS) {
	NSLog(@"NSArrayController_avoidsEmptySelection");
	return [THIS avoidsEmptySelection];
}

void NSArrayController_setPreservesSelection (NSArrayController* THIS, BOOL flag) {
	NSLog(@"NSArrayController_setPreservesSelection");
	[THIS setPreservesSelection:flag];
}

BOOL NSArrayController_preservesSelection (NSArrayController* THIS) {
	NSLog(@"NSArrayController_preservesSelection");
	return [THIS preservesSelection];
}

void NSArrayController_setSelectsInsertedObjects (NSArrayController* THIS, BOOL flag) {
	NSLog(@"NSArrayController_setSelectsInsertedObjects");
	[THIS setSelectsInsertedObjects:flag];
}

BOOL NSArrayController_selectsInsertedObjects (NSArrayController* THIS) {
	NSLog(@"NSArrayController_selectsInsertedObjects");
	return [THIS selectsInsertedObjects];
}

/* UNSUPPORTED: 
- (BOOL)setSelectionIndexes:(NSIndexSet *)indexes;     to deselect all: empty index set, to select all: index set with indexes [0...count - 1]
 */



NSIndexSet * NSArrayController_selectionIndexes (NSArrayController* THIS) {
	NSLog(@"NSArrayController_selectionIndexes");
	return [THIS selectionIndexes];
}

BOOL NSArrayController_setSelectionIndex (NSArrayController* THIS, unsigned int index) {
	NSLog(@"NSArrayController_setSelectionIndex");
	return [THIS setSelectionIndex:index];
}

unsigned int NSArrayController_selectionIndex (NSArrayController* THIS) {
	NSLog(@"NSArrayController_selectionIndex");
	return [THIS selectionIndex];
}

BOOL NSArrayController_addSelectionIndexes (NSArrayController* THIS, NSIndexSet * indexes) {
	NSLog(@"NSArrayController_addSelectionIndexes");
	return [THIS addSelectionIndexes:indexes];
}

BOOL NSArrayController_removeSelectionIndexes (NSArrayController* THIS, NSIndexSet * indexes) {
	NSLog(@"NSArrayController_removeSelectionIndexes");
	return [THIS removeSelectionIndexes:indexes];
}

BOOL NSArrayController_setSelectedObjects (NSArrayController* THIS, NSArray * objects) {
	NSLog(@"NSArrayController_setSelectedObjects");
	return [THIS setSelectedObjects:objects];
}

NSArray * NSArrayController_selectedObjects (NSArrayController* THIS) {
	NSLog(@"NSArrayController_selectedObjects");
	return [THIS selectedObjects];
}

BOOL NSArrayController_addSelectedObjects (NSArrayController* THIS, NSArray * objects) {
	NSLog(@"NSArrayController_addSelectedObjects");
	return [THIS addSelectedObjects:objects];
}

BOOL NSArrayController_removeSelectedObjects (NSArrayController* THIS, NSArray * objects) {
	NSLog(@"NSArrayController_removeSelectedObjects");
	return [THIS removeSelectedObjects:objects];
}

void NSArrayController_insert (NSArrayController* THIS, id sender) {
	NSLog(@"NSArrayController_insert");
	[THIS insert:sender];
}

BOOL NSArrayController_canInsert (NSArrayController* THIS) {
	NSLog(@"NSArrayController_canInsert");
	return [THIS canInsert];
}

void NSArrayController_selectNext (NSArrayController* THIS, id sender) {
	NSLog(@"NSArrayController_selectNext");
	[THIS selectNext:sender];
}

void NSArrayController_selectPrevious (NSArrayController* THIS, id sender) {
	NSLog(@"NSArrayController_selectPrevious");
	[THIS selectPrevious:sender];
}

BOOL NSArrayController_canSelectNext (NSArrayController* THIS) {
	NSLog(@"NSArrayController_canSelectNext");
	return [THIS canSelectNext];
}

BOOL NSArrayController_canSelectPrevious (NSArrayController* THIS) {
	NSLog(@"NSArrayController_canSelectPrevious");
	return [THIS canSelectPrevious];
}

void NSArrayController_addObject (NSArrayController* THIS, id object) {
	NSLog(@"NSArrayController_addObject");
	[THIS addObject:object];
}

void NSArrayController_addObjects (NSArrayController* THIS, NSArray * objects) {
	NSLog(@"NSArrayController_addObjects");
	[THIS addObjects:objects];
}

void NSArrayController_insertObject_atArrangedObjectIndex (NSArrayController* THIS, id object, unsigned int index) {
	NSLog(@"NSArrayController_insertObject_atArrangedObjectIndex");
	[THIS insertObject:object atArrangedObjectIndex:index];
}

void NSArrayController_insertObjects_atArrangedObjectIndexes (NSArrayController* THIS, NSArray * objects, NSIndexSet * indexes) {
	NSLog(@"NSArrayController_insertObjects_atArrangedObjectIndexes");
	[THIS insertObjects:objects atArrangedObjectIndexes:indexes];
}

void NSArrayController_removeObjectAtArrangedObjectIndex (NSArrayController* THIS, unsigned int index) {
	NSLog(@"NSArrayController_removeObjectAtArrangedObjectIndex");
	[THIS removeObjectAtArrangedObjectIndex:index];
}

void NSArrayController_removeObjectsAtArrangedObjectIndexes (NSArrayController* THIS, NSIndexSet * indexes) {
	NSLog(@"NSArrayController_removeObjectsAtArrangedObjectIndexes");
	[THIS removeObjectsAtArrangedObjectIndexes:indexes];
}

void NSArrayController_removeObject (NSArrayController* THIS, id object) {
	NSLog(@"NSArrayController_removeObject");
	[THIS removeObject:object];
}

void NSArrayController_removeObjects (NSArrayController* THIS, NSArray * objects) {
	NSLog(@"NSArrayController_removeObjects");
	[THIS removeObjects:objects];
}

NSArrayController * NSArrayController_alloc(){
	NSLog(@"NSArrayController_alloc()");
	return [ NSArrayController alloc ];
}