/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

#include <Foundation/NSGeometry.h>

NSCursor * NSCursor_currentCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_currentCursor");
	return [THIS currentCursor];
}
NSCursor * NSCursor_arrowCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_arrowCursor");
	return [THIS arrowCursor];
}
NSCursor * NSCursor_IBeamCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_IBeamCursor");
	return [THIS IBeamCursor];
}
NSCursor * NSCursor_pointingHandCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_pointingHandCursor");
	return [THIS pointingHandCursor];
}
NSCursor * NSCursor_closedHandCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_closedHandCursor");
	return [THIS closedHandCursor];
}
NSCursor * NSCursor_openHandCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_openHandCursor");
	return [THIS openHandCursor];
}
NSCursor * NSCursor_resizeLeftCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_resizeLeftCursor");
	return [THIS resizeLeftCursor];
}
NSCursor * NSCursor_resizeRightCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_resizeRightCursor");
	return [THIS resizeRightCursor];
}
NSCursor * NSCursor_resizeLeftRightCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_resizeLeftRightCursor");
	return [THIS resizeLeftRightCursor];
}
NSCursor * NSCursor_resizeUpCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_resizeUpCursor");
	return [THIS resizeUpCursor];
}
NSCursor * NSCursor_resizeDownCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_resizeDownCursor");
	return [THIS resizeDownCursor];
}
NSCursor * NSCursor_resizeUpDownCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_resizeUpDownCursor");
	return [THIS resizeUpDownCursor];
}
NSCursor * NSCursor_crosshairCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_crosshairCursor");
	return [THIS crosshairCursor];
}
NSCursor * NSCursor_disappearingItemCursor (NSCursor* THIS) {
	NSLog(@"NSCursor_disappearingItemCursor");
	return [THIS disappearingItemCursor];
}
NSCursor * NSCursor_initWithImage_hotSpot (NSCursor* THIS, NSImage * newImage, NSPoint aPoint) {
	NSLog(@"NSCursor_initWithImage_hotSpot");
	return [THIS initWithImage:newImage hotSpot:aPoint];
}

NSCursor * NSCursor_initWithImage_foregroundColorHint_backgroundColorHint_hotSpot (NSCursor* THIS, NSColor * fg, NSColor * bg, NSPoint hotSpot) {
	NSLog(@"NSCursor_initWithImage_foregroundColorHint_backgroundColorHint_hotSpot");
	return [THIS initWithImageforegroundColorHint:fg backgroundColorHint:bg hotSpot:hotSpot];
}

void NSCursor_hide (NSCursor* THIS) {
	NSLog(@"NSCursor_hide");
	[THIS hide];
}
void NSCursor_unhide (NSCursor* THIS) {
	NSLog(@"NSCursor_unhide");
	[THIS unhide];
}
void NSCursor_setHiddenUntilMouseMoves (NSCursor* THIS, BOOL flag) {
	NSLog(@"NSCursor_setHiddenUntilMouseMoves");
	[THIS setHiddenUntilMouseMoves:flag];
}

void NSCursor_pop (NSCursor* THIS) {
	NSLog(@"NSCursor_pop");
	[THIS pop];
}
NSImage * NSCursor_image (NSCursor* THIS) {
	NSLog(@"NSCursor_image");
	return [THIS image];
}
NSPoint NSCursor_hotSpot (NSCursor* THIS) {
	NSLog(@"NSCursor_hotSpot");
	return [THIS hotSpot];
}
void NSCursor_push (NSCursor* THIS) {
	NSLog(@"NSCursor_push");
	[THIS push];
}
void NSCursor_pop (NSCursor* THIS) {
	NSLog(@"NSCursor_pop");
	[THIS pop];
}
void NSCursor_set (NSCursor* THIS) {
	NSLog(@"NSCursor_set");
	[THIS set];
}
void NSCursor_setOnMouseExited (NSCursor* THIS, BOOL flag) {
	NSLog(@"NSCursor_setOnMouseExited");
	[THIS setOnMouseExited:flag];
}

void NSCursor_setOnMouseEntered (NSCursor* THIS, BOOL flag) {
	NSLog(@"NSCursor_setOnMouseEntered");
	[THIS setOnMouseEntered:flag];
}

BOOL NSCursor_isSetOnMouseExited (NSCursor* THIS) {
	NSLog(@"NSCursor_isSetOnMouseExited");
	return [THIS isSetOnMouseExited];
}
BOOL NSCursor_isSetOnMouseEntered (NSCursor* THIS) {
	NSLog(@"NSCursor_isSetOnMouseEntered");
	return [THIS isSetOnMouseEntered];
}
void NSCursor_mouseEntered (NSCursor* THIS, NSEvent * theEvent) {
	NSLog(@"NSCursor_mouseEntered");
	[THIS mouseEntered:theEvent];
}

void NSCursor_mouseExited (NSCursor* THIS, NSEvent * theEvent) {
	NSLog(@"NSCursor_mouseExited");
	[THIS mouseExited:theEvent];
}

NSCursor * NSCursor_alloc() {
	NSLog(@"NSCursor_alloc()");
	return [NSCursor alloc];
}
