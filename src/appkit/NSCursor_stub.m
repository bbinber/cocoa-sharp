/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>
#include <Foundation/NSGeometry.h>

NSCursor * NSCursor$_currentCursor () {
	NSLog(@"NSCursor$_currentCursor");
	return [NSCursor currentCursor];
}

NSCursor * NSCursor$_arrowCursor () {
	NSLog(@"NSCursor$_arrowCursor");
	return [NSCursor arrowCursor];
}

NSCursor * NSCursor$_IBeamCursor () {
	NSLog(@"NSCursor$_IBeamCursor");
	return [NSCursor IBeamCursor];
}

NSCursor * NSCursor$_pointingHandCursor () {
	NSLog(@"NSCursor$_pointingHandCursor");
	return [NSCursor pointingHandCursor];
}

NSCursor * NSCursor$_closedHandCursor () {
	NSLog(@"NSCursor$_closedHandCursor");
	return [NSCursor closedHandCursor];
}

NSCursor * NSCursor$_openHandCursor () {
	NSLog(@"NSCursor$_openHandCursor");
	return [NSCursor openHandCursor];
}

NSCursor * NSCursor$_resizeLeftCursor () {
	NSLog(@"NSCursor$_resizeLeftCursor");
	return [NSCursor resizeLeftCursor];
}

NSCursor * NSCursor$_resizeRightCursor () {
	NSLog(@"NSCursor$_resizeRightCursor");
	return [NSCursor resizeRightCursor];
}

NSCursor * NSCursor$_resizeLeftRightCursor () {
	NSLog(@"NSCursor$_resizeLeftRightCursor");
	return [NSCursor resizeLeftRightCursor];
}

NSCursor * NSCursor$_resizeUpCursor () {
	NSLog(@"NSCursor$_resizeUpCursor");
	return [NSCursor resizeUpCursor];
}

NSCursor * NSCursor$_resizeDownCursor () {
	NSLog(@"NSCursor$_resizeDownCursor");
	return [NSCursor resizeDownCursor];
}

NSCursor * NSCursor$_resizeUpDownCursor () {
	NSLog(@"NSCursor$_resizeUpDownCursor");
	return [NSCursor resizeUpDownCursor];
}

NSCursor * NSCursor$_crosshairCursor () {
	NSLog(@"NSCursor$_crosshairCursor");
	return [NSCursor crosshairCursor];
}

NSCursor * NSCursor$_disappearingItemCursor () {
	NSLog(@"NSCursor$_disappearingItemCursor");
	return [NSCursor disappearingItemCursor];
}

NSCursor * NSCursor_initWithImage_hotSpot (NSCursor* THIS, NSImage * newImage, NSPoint aPoint) {
	NSLog(@"NSCursor_initWithImage_hotSpot");
	return [THIS initWithImage:newImage hotSpot:aPoint];
}

NSCursor * NSCursor_initWithImage_foregroundColorHint_backgroundColorHint_hotSpot (NSCursor* THIS, NSImage * newImage, NSColor * fg, NSColor * bg, NSPoint hotSpot) {
	NSLog(@"NSCursor_initWithImage_foregroundColorHint_backgroundColorHint_hotSpot");
	return [THIS initWithImage:newImage foregroundColorHint:fg backgroundColorHint:bg hotSpot:hotSpot];
}

void NSCursor$_hide () {
	NSLog(@"NSCursor$_hide");
	[NSCursor hide];
}

void NSCursor$_unhide () {
	NSLog(@"NSCursor$_unhide");
	[NSCursor unhide];
}

void NSCursor$_setHiddenUntilMouseMoves (BOOL flag) {
	NSLog(@"NSCursor$_setHiddenUntilMouseMoves");
	[NSCursor setHiddenUntilMouseMoves:flag];
}

void NSCursor$_pop () {
	NSLog(@"NSCursor$_pop");
	[NSCursor pop];
}

NSImage * NSCursor_image (NSCursor* THIS) {
	NSLog(@"NSCursor_image");
	return [THIS image];
}

NSPoint NSCursor_hotSpot (NSCursor* THIS) {
	NSLog(@"NSCursor_hotSpot");
	return [THIS hotSpot];
}

void NSCursor_push (NSCursor* THIS) {
	NSLog(@"NSCursor_push");
	[THIS push];
}

void NSCursor_pop (NSCursor* THIS) {
	NSLog(@"NSCursor_pop");
	[THIS pop];
}

void NSCursor_set (NSCursor* THIS) {
	NSLog(@"NSCursor_set");
	[THIS set];
}

void NSCursor_setOnMouseExited (NSCursor* THIS, BOOL flag) {
	NSLog(@"NSCursor_setOnMouseExited");
	[THIS setOnMouseExited:flag];
}

void NSCursor_setOnMouseEntered (NSCursor* THIS, BOOL flag) {
	NSLog(@"NSCursor_setOnMouseEntered");
	[THIS setOnMouseEntered:flag];
}

BOOL NSCursor_isSetOnMouseExited (NSCursor* THIS) {
	NSLog(@"NSCursor_isSetOnMouseExited");
	return [THIS isSetOnMouseExited];
}

BOOL NSCursor_isSetOnMouseEntered (NSCursor* THIS) {
	NSLog(@"NSCursor_isSetOnMouseEntered");
	return [THIS isSetOnMouseEntered];
}

void NSCursor_mouseEntered (NSCursor* THIS, NSEvent * theEvent) {
	NSLog(@"NSCursor_mouseEntered");
	[THIS mouseEntered:theEvent];
}

void NSCursor_mouseExited (NSCursor* THIS, NSEvent * theEvent) {
	NSLog(@"NSCursor_mouseExited");
	[THIS mouseExited:theEvent];
}

NSCursor * NSCursor_alloc(){
	NSLog(@"NSCursor_alloc()");
	return [ NSCursor alloc ];
}