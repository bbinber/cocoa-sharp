/* Generated by genstubs.pl
 * (c) 2004 kangaroo, C.J. and Urs
 */

#include <Cocoa/Cocoa.h>

#include <AppKit/NSView.h>
#include <AppKit/NSCell.h>
#include <Foundation/NSDate.h>

BOOL NSProgressIndicator_isIndeterminate (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_isIndeterminate");
	return [THIS isIndeterminate];
}

void NSProgressIndicator_setIndeterminate (NSProgressIndicator* THIS, BOOL flag) {
	NSLog(@"NSProgressIndicator_setIndeterminate");
	[THIS setIndeterminate:flag];
}

BOOL NSProgressIndicator_isBezeled (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_isBezeled");
	return [THIS isBezeled];
}

void NSProgressIndicator_setBezeled (NSProgressIndicator* THIS, BOOL flag) {
	NSLog(@"NSProgressIndicator_setBezeled");
	[THIS setBezeled:flag];
}

NSControlTint NSProgressIndicator_controlTint (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_controlTint");
	return [THIS controlTint];
}

void NSProgressIndicator_setControlTint (NSProgressIndicator* THIS, NSControlTint tint) {
	NSLog(@"NSProgressIndicator_setControlTint");
	[THIS setControlTint:tint];
}

NSControlSize NSProgressIndicator_controlSize (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_controlSize");
	return [THIS controlSize];
}

void NSProgressIndicator_setControlSize (NSProgressIndicator* THIS, NSControlSize size) {
	NSLog(@"NSProgressIndicator_setControlSize");
	[THIS setControlSize:size];
}

double NSProgressIndicator_doubleValue (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_doubleValue");
	return [THIS doubleValue];
}

void NSProgressIndicator_setDoubleValue (NSProgressIndicator* THIS, double doubleValue) {
	NSLog(@"NSProgressIndicator_setDoubleValue");
	[THIS setDoubleValue:doubleValue];
}

void NSProgressIndicator_incrementBy (NSProgressIndicator* THIS, double delta) {
	NSLog(@"NSProgressIndicator_incrementBy");
	[THIS incrementBy:delta];
}

double NSProgressIndicator_minValue (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_minValue");
	return [THIS minValue];
}

double NSProgressIndicator_maxValue (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_maxValue");
	return [THIS maxValue];
}

void NSProgressIndicator_setMinValue (NSProgressIndicator* THIS, double newMinimum) {
	NSLog(@"NSProgressIndicator_setMinValue");
	[THIS setMinValue:newMinimum];
}

void NSProgressIndicator_setMaxValue (NSProgressIndicator* THIS, double newMaximum) {
	NSLog(@"NSProgressIndicator_setMaxValue");
	[THIS setMaxValue:newMaximum];
}

NSTimeInterval NSProgressIndicator_animationDelay (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_animationDelay");
	return [THIS animationDelay];
}

void NSProgressIndicator_setAnimationDelay (NSProgressIndicator* THIS, NSTimeInterval delay) {
	NSLog(@"NSProgressIndicator_setAnimationDelay");
	[THIS setAnimationDelay:delay];
}

BOOL NSProgressIndicator_usesThreadedAnimation (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_usesThreadedAnimation");
	return [THIS usesThreadedAnimation];
}

void NSProgressIndicator_setUsesThreadedAnimation (NSProgressIndicator* THIS, BOOL threadedAnimation) {
	NSLog(@"NSProgressIndicator_setUsesThreadedAnimation");
	[THIS setUsesThreadedAnimation:threadedAnimation];
}

void NSProgressIndicator_startAnimation (NSProgressIndicator* THIS, id sender) {
	NSLog(@"NSProgressIndicator_startAnimation");
	[THIS startAnimation:sender];
}

void NSProgressIndicator_stopAnimation (NSProgressIndicator* THIS, id sender) {
	NSLog(@"NSProgressIndicator_stopAnimation");
	[THIS stopAnimation:sender];
}

void NSProgressIndicator_animate (NSProgressIndicator* THIS, id sender) {
	NSLog(@"NSProgressIndicator_animate");
	[THIS animate:sender];
}

void NSProgressIndicator_setStyle (NSProgressIndicator* THIS, NSProgressIndicatorStyle style) {
	NSLog(@"NSProgressIndicator_setStyle");
	[THIS setStyle:style];
}

NSProgressIndicatorStyle NSProgressIndicator_style (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_style");
	return [THIS style];
}

void NSProgressIndicator_sizeToFit (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_sizeToFit");
	[THIS sizeToFit];
}

BOOL NSProgressIndicator_isDisplayedWhenStopped (NSProgressIndicator* THIS) {
	NSLog(@"NSProgressIndicator_isDisplayedWhenStopped");
	return [THIS isDisplayedWhenStopped];
}

void NSProgressIndicator_setDisplayedWhenStopped (NSProgressIndicator* THIS, BOOL isDisplayed) {
	NSLog(@"NSProgressIndicator_setDisplayedWhenStopped");
	[THIS setDisplayedWhenStopped:isDisplayed];
}

NSProgressIndicator * NSProgressIndicator_alloc(){
	NSLog(@"NSProgressIndicator_alloc()");
	return [ NSProgressIndicator alloc ];
}