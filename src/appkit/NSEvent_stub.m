/* Generated by genstubs.pl
 (c) 2004 kangaroo
*/

#include <Cocoa/Cocoa.h>

#include <Foundation/NSObject.h>

#include <Foundation/NSDate.h>

#include <Foundation/NSGeometry.h>

NSEventType NSEvent_type (NSEvent* THIS) {
	NSLog(@"NSEvent_type");
	return [THIS type];
}
NSPoint NSEvent_locationInWindow (NSEvent* THIS) {
	NSLog(@"NSEvent_locationInWindow");
	return [THIS locationInWindow];
}
unsigned int NSEvent_modifierFlags (NSEvent* THIS) {
	NSLog(@"NSEvent_modifierFlags");
	return [THIS modifierFlags];
}
NSTimeInterval NSEvent_timestamp (NSEvent* THIS) {
	NSLog(@"NSEvent_timestamp");
	return [THIS timestamp];
}
NSWindow * NSEvent_window (NSEvent* THIS) {
	NSLog(@"NSEvent_window");
	return [THIS window];
}
int NSEvent_windowNumber (NSEvent* THIS) {
	NSLog(@"NSEvent_windowNumber");
	return [THIS windowNumber];
}
NSGraphicsContext* NSEvent_context (NSEvent* THIS) {
	NSLog(@"NSEvent_context");
	return [THIS context];
}
int NSEvent_clickCount (NSEvent* THIS) {
	NSLog(@"NSEvent_clickCount");
	return [THIS clickCount];
}
float NSEvent_pressure (NSEvent* THIS) {
	NSLog(@"NSEvent_pressure");
	return [THIS pressure];
}
int NSEvent_buttonNumber (NSEvent* THIS) {
	NSLog(@"NSEvent_buttonNumber");
	return [THIS buttonNumber];
}
int NSEvent_eventNumber (NSEvent* THIS) {
	NSLog(@"NSEvent_eventNumber");
	return [THIS eventNumber];
}
float NSEvent_deltaX (NSEvent* THIS) {
	NSLog(@"NSEvent_deltaX");
	return [THIS deltaX];
}
float NSEvent_deltaY (NSEvent* THIS) {
	NSLog(@"NSEvent_deltaY");
	return [THIS deltaY];
}
float NSEvent_deltaZ (NSEvent* THIS) {
	NSLog(@"NSEvent_deltaZ");
	return [THIS deltaZ];
}
NSString * NSEvent_characters (NSEvent* THIS) {
	NSLog(@"NSEvent_characters");
	return [THIS characters];
}
NSString * NSEvent_charactersIgnoringModifiers (NSEvent* THIS) {
	NSLog(@"NSEvent_charactersIgnoringModifiers");
	return [THIS charactersIgnoringModifiers];
}
BOOL NSEvent_isARepeat (NSEvent* THIS) {
	NSLog(@"NSEvent_isARepeat");
	return [THIS isARepeat];
}
unsigned short NSEvent_keyCode (NSEvent* THIS) {
	NSLog(@"NSEvent_keyCode");
	return [THIS keyCode];
}
int NSEvent_trackingNumber (NSEvent* THIS) {
	NSLog(@"NSEvent_trackingNumber");
	return [THIS trackingNumber];
}
void * NSEvent_userData (NSEvent* THIS) {
	NSLog(@"NSEvent_userData");
	[THIS userData];
}
short NSEvent_subtype (NSEvent* THIS) {
	NSLog(@"NSEvent_subtype");
	return [THIS subtype];
}
int NSEvent_data1 (NSEvent* THIS) {
	NSLog(@"NSEvent_data1");
	return [THIS data1];
}
int NSEvent_data2 (NSEvent* THIS) {
	NSLog(@"NSEvent_data2");
	return [THIS data2];
}
void NSEvent_startPeriodicEventsAfterDelay_withPeriod (NSEvent* THIS, NSTimeInterval delay, NSTimeInterval period) {
	NSLog(@"NSEvent_startPeriodicEventsAfterDelay_withPeriod");
	[THIS startPeriodicEventsAfterDelay:delay withPeriod:period];
}

void NSEvent_stopPeriodicEvents (NSEvent* THIS) {
	NSLog(@"NSEvent_stopPeriodicEvents");
	[THIS stopPeriodicEvents];
}
NSEvent * NSEvent_mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure (NSEvent* THIS, NSEventType type, NSPoint location, unsigned int flags, NSTimeInterval time, int wNum, NSGraphicsContext* context, int eNum, int cNum, float pressure) {
	NSLog(@"NSEvent_mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure");
	return [THIS mouseEventWithType:type location:location modifierFlags:flags timestamp:time windowNumber:wNum context:context eventNumber:eNum clickCount:cNum pressure:pressure];
}

NSEvent * NSEvent_keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode (NSEvent* THIS, NSEventType type, NSPoint location, unsigned int flags, NSTimeInterval time, int wNum, NSGraphicsContext* context, NSString * keys, NSString * ukeys, BOOL flag, unsigned short code) {
	NSLog(@"NSEvent_keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode");
	return [THIS keyEventWithType:type location:location modifierFlags:flags timestamp:time windowNumber:wNum context:context characters:keys charactersIgnoringModifiers:ukeys isARepeat:flag keyCode:code];
}

NSEvent * NSEvent_enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData (NSEvent* THIS, NSEventType type, NSPoint location, unsigned int flags, NSTimeInterval time, int wNum, NSGraphicsContext* context, int eNum, int tNum, void * data) {
	NSLog(@"NSEvent_enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData");
	return [THIS enterExitEventWithType:type location:location modifierFlags:flags timestamp:time windowNumber:wNum context:context eventNumber:eNum trackingNumber:tNum userData:data];
}

NSEvent * NSEvent_otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2 (NSEvent* THIS, NSEventType type, NSPoint location, unsigned int flags, NSTimeInterval time, int wNum, NSGraphicsContext* context, short subtype, int d1, int d2) {
	NSLog(@"NSEvent_otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2");
	return [THIS otherEventWithType:type location:location modifierFlags:flags timestamp:time windowNumber:wNum context:context subtype:subtype data1:d1 data2:d2];
}

NSPoint NSEvent_mouseLocation (NSEvent* THIS) {
	NSLog(@"NSEvent_mouseLocation");
	return [THIS mouseLocation];
}
NSEvent * NSEvent_alloc() {
	NSLog(@"NSEvent_alloc()");
	return [NSEvent alloc];
}
